cscope 15 $HOME/.vim/vim_test/tool -q 0000003493 0000615564
	@api.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

10 
	~<time.h
>

12 
	~"toﬁ.h
"

15 *
	$cmd_°rög
(
sh™n⁄_cmd
 
cmd
)

17 i‡(
sh_wrôe_cmd
 =
cmd
)

19 i‡(
sh_¥îód_cmd
 =
cmd
)

21 i‡(
sh_îa£_cmd
 =
cmd
)

23 i‡(
sh_ª£t_cmd
 =
cmd
)

25 i‡(
sh_bufwrôe_cmd
 =
cmd
)

29 
	}
}

31 
	$__check_ªq_°©us
(
sh™n⁄_ªque°
 *
ªq
, 
¥
)

33 
is_mu…i_∂™e
 = 0;

34 
n
, 
Áûed
;

35 
°©us
[32];

36 
sh™n⁄_ªque°
 *
tmp
;

37 
sh™n⁄_dev
 *
dev
 = 
ªq
->dev;

40 i‡(
sh_bufwrôe_cmd
 =
ªq
->
›code
) {

41 i‡(
ªq
->
°©us
 != ~0llu) {

44 i‡(
¥
)

45 
	`¥ötf
("%s : failedÜun=%02dÖhylun=%02d block=%dÖage=%d sector=%d\n",

46 
	`cmd_°rög
(
ªq
->
›code
),Ñeq->
lun
, 
	`log2phy_lun
(
dev
,Ñeq->lun),Ñeq->
chunk_block
,Ñeq->
∑ge
,Ñeq->
b£˘‹
);

47  
FAILED_FLASH_STATUS
;

51 i‡(!
	`li°_em±y
(&
ªq
->
chunk_li°
))

52 
is_mu…i_∂™e
 = 1;

55 i‡(!
is_mu…i_∂™e
) {

56 i‡(
	`check_°©us
(
dev
, 
ªq
->
›code
,Ñeq->
°©us
)) {

59 i‡(
¥
) {

60 
	`¥ötf
("%s: faûed sètu†%02X.Üun=%02dÖhylun=%02d", 
	`cmd_°rög
(
ªq
->
›code
), (
__u8
Ïeq->
°©us
,Ñeq->
lun
, 
	`log2phy_lun
(
dev
,Ñeq->lun));

62 i‡(
ªq
->
›code
 =
sh_wrôe_cmd
 ||

63 
ªq
->
›code
 =
sh_¥îód_cmd
 ||

64 
ªq
->
›code
 =
sh_îa£_cmd
)

65 
	`¥ötf
(" block=%d", 
ªq
->
block
);

67 i‡(
ªq
->
›code
 =
sh_wrôe_cmd
 ||

68 
ªq
->
›code
 =
sh_¥îód_cmd
)

69 
	`¥ötf
("Öage=%d", 
ªq
->
∑ge
);

71 
	`¥ötf
("\n");

73  
FAILED_FLASH_STATUS
;

78 
n
 = 0;

79 
Áûed
 = 0;

80 
	`mem£t
(
°©us
, 0, (status));

82 
n
 +
	`•rötf
(
°©us
 +Ç, " %02X", (
__u8
)
ªq
->status);

83 i‡(!
	`check_°©us
(
dev
, 
ªq
->
›code
,Ñeq->
°©us
))

84 
Áûed
 = 1;

86 
	`li°_f‹_óch_íåy
(
tmp
, &
ªq
->
chunk_li°
, chunk_list) {

87 
n
 +
	`•rötf
(
°©us
 +Ç, " %02X", (
__u8
)
tmp
->status);

88 i‡(!
	`check_°©us
(
dev
, 
ªq
->
›code
, 
tmp
->
°©us
))

89 
Áûed
 = 1;

92 i‡(!
Áûed
) {

95 i‡(
¥
) {

96 
	`¥ötf
("MP-%s: failed status%s.Üun=%dÖhylun=%d block=%d",

97 
	`cmd_°rög
(
ªq
->
›code
), 
°©us
,Ñeq->
lun
, 
	`log2phy_lun
(
dev
,Ñeq->lun),Ñeq->
chunk_block
);

99 i‡(
ªq
->
›code
 !
sh_îa£_cmd
)

100 
	`¥ötf
("Öage=%d", 
ªq
->
∑ge
);

102 
	`¥ötf
("\n");

104  
FAILED_FLASH_STATUS
;

106 
	}
}

108 
	$check_ªq_°©us
(
sh™n⁄_ªque°
 *
ªq
)

110  
	`__check_ªq_°©us
(
ªq
, 1);

111 
	}
}

113 
	$check_ªq_°©us_sûít
(
sh™n⁄_ªque°
 *
ªq
)

115  
	`__check_ªq_°©us
(
ªq
, 0);

116 
	}
}

119 
	swr_Êash_ªgs
 {

120 
__u8
 
	mcmd
;

121 
__u8
 
	maddr
;

123 
	mhas_£c⁄d¨y_cmd
;

124 
__u8
 
	m£c⁄d¨y_cmd
;

126 
	mnd©a
;

127 
__u8
 
	md©a
[16];

129 
	mvíd‹y_mode
;

132 
	$wrôe_Êash_ªgi°îs
(
sh™n⁄_dev
 *
dev
, 
lun
, 
wr_Êash_ªgs
 *
wd
)

134 
i
;

135 
sh™n⁄_ªque°
 *
ªq
;

137 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôîeg_cmd
, 
lun
, 0, 0, 0, 0);

138 i‡(
NULL
 =
ªq
) {

139 
	`¥ötf
("%s(Ë%d: mÆlo¯Áû\n", 
__func__
, 
__LINE__
);

140 
	`exô
(
EXIT_FAILURE
);

142 
ªq
->
wr_Êash_ªg_nbyã
 = 
wd
->
nd©a
;

144 
	`mem£t
(
ªq
->
dúe˘_cmdqueue
, 0x00, (req->direct_cmdqueue));

145 
ªq
->
dúe˘_cmdqueue
[0] = 
sh_wrôîeg_cmd
;

146 
ªq
->
dúe˘_cmdqueue
[1] = 
wd
->
£c⁄d¨y_cmd
;

147 
ªq
->
dúe˘_cmdqueue
[2] = 
wd
->
d©a
[0];

148 i‡(
wd
->
víd‹y_mode
)

149 
ªq
->
dúe˘_cmdqueue
[3] |= 0x20;

150 i‡(
wd
->
has_£c⁄d¨y_cmd
)

151 
ªq
->
dúe˘_cmdqueue
[3] |= 0x40;

152 
ªq
->
dúe˘_cmdqueue
[4] = 
wd
->
addr
;

153 
ªq
->
dúe˘_cmdqueue
[5] = 
wd
->
nd©a
;

154 
ªq
->
dúe˘_cmdqueue
[6] = 
wd
->
cmd
;

155 
ªq
->
dúe˘_cmdqueue
[7] = 
	`log2phy_lun
(
dev
, 
lun
);

156 i‡(
wd
->
nd©a
 > 1) {

157 
i
 = 0; i < 
wd
->
nd©a
; i++)

158 
ªq
->
dúe˘_cmdqueue
[8 + 
i
] = 
wd
->
d©a
[i];

161 i‡(
dev
->
	`submô_ªque°
(
ªq
)) {

162 
	`¥ötf
("%s(Ë%d: submô faû\n", 
__func__
, 
__LINE__
);

163 
	`exô
(
EXIT_FAILURE
);

166 i‡(
	`upd©e_pﬁl_cmdqueue
(
dev
, 
lun
)) {

167 
	`¥ötf
("%s(Ë%d:Öﬁ»com∂ëi⁄ faû\n", 
__func__
, 
__LINE__
);

168 
	`exô
(
EXIT_FAILURE
);

176 
	`‰ì_ªque°
(
ªq
);

178 
	}
}

180 
	$__so·bôªad
(
sh™n⁄_dev
 *
dev
, 
lun
, 
block
, 
∑ge
, 
≈œ√
, 
c⁄°™t
, *
fûíame
)

182 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

183 
li°_hód
 
ªq_hód
;

184 
i
, 
j
, 
k
, 
bs
, 
ns
, 
ªmaö_ns
;

185 
hód
, 
∂™e
, 
œ°_ˇchîód
 = 1;

186 
FILE
 *
Â
;

188 
Â
 = 
	`f›í
(
fûíame
, "w");

189 i‡(
NULL
 =
Â
) {

190 
	`¥ötf
("¸óã fûê%†Áû\n", 
fûíame
);

191 
	`exô
(
EXIT_FAILURE
);

194 
hód
 = 0;

195 
	`INIT_LIST_HEAD
(&
ªq_hód
);

197 ; 
c⁄°™t
 > 0; c⁄°™t--, 
∑ge
++) {

199 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
block
 * 
≈œ√
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, 0);

200 i‡(
NULL
 =
chunk_hód_ªq
) {

201 
	`¥ötf
("%s(Ë%d: mÆlo¯Áû\n", 
__func__
, 
__LINE__
);

202 
	`exô
(
EXIT_FAILURE
);

204 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

206 
∂™e
 = 1;Öœ√ < 
≈œ√
;Ölane++) {

207 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, (
block
 * 
≈œ√
 + 
∂™e
Ë* dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, 0);

208 i‡(
NULL
 =
ªq
) {

209 
	`¥ötf
("%s(Ë%d: mÆlo¯Áû\n", 
__func__
, 
__LINE__
);

210 
	`exô
(
EXIT_FAILURE
);

212 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

216 
∂™e
 = 0;Öœ√ < 
≈œ√
;Ölane++) {

217 
bs
 = 0;

218 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

220 
ªmaö_ns
) {

221 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

223 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, (
block
 * 
≈œ√
 + 
∂™e
Ë* dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 
bs
, 
ns
);

224 i‡(
NULL
 =
ªq
) {

225 
	`¥ötf
("%s(Ë%d: mÆlo¯Áû\n", 
__func__
, 
__LINE__
);

226 
	`exô
(
EXIT_FAILURE
);

228 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

230 
bs
 +
ns
;

231 
ªmaö_ns
 -
ns
;

234 
ªq
->
œ°_ˇchîód
 =Üast_cacheread;

236 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

237 i‡(
dev
->
	`submô_ªque°
(
ªq
)) {

238 
	`¥ötf
("%s(Ë%d: submô faû\n", 
__func__
, 
__LINE__
);

239 
	`exô
(
EXIT_FAILURE
);

244 i‡(
	`upd©e_pﬁl_cmdqueue
(
dev
, 
lun
)) {

245 
	`¥ötf
("%s(Ë%d:Öﬁ»Áû\n", 
__func__
, 
__LINE__
);

246 
	`exô
(
EXIT_FAILURE
);

250 
ªq
 = 
	`li°_fú°_íåy
(&
ªq_hód
, 
sh™n⁄_ªque°
, 
li°
);

251 i‡(
	`check_ªq_°©us
(
ªq
)) {

252 
	`¥ötf
("%s(Ë%d: check sètu†Áû\n", 
__func__
, 
__LINE__
);

253 
	`exô
(
EXIT_FAILURE
);

255 
	`li°_dñ
(&
ªq
->
li°
);

256 
	`‰ì_ªque°
(
ªq
);

259 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

260 
__u16
 *
±mp
;

262 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

263 
±mp
 = (
__u16
 *)(&
ªq
->
d©a
[
i
 * 
dev
->
c⁄fig
->
£˘‹_size
]);

264 
j
 = 0; j < 
dev
->
c⁄fig
->
£˘‹_size
/2; j++) {

265 
k
 = 0; k < 16; k++)

266 
	`Ârötf
(
Â
, "%d", (
±mp
[
j
] & (0x8000 >> 
k
)) ? 1 : 0);

267 
	`Ârötf
(
Â
, "\n");

270 
±mp
 = (
__u16
 *)(
ªq
->
mëad©a
 + 
i
);

271 
j
 = 0; j < (*
ªq
->
mëad©a
)/2; j++) {

272 
k
 = 0; k < 16; k++)

273 
	`Ârötf
(
Â
, "%d", (
±mp
[
j
] & (0x8000 >> 
k
)) ? 1 : 0);

274 
	`Ârötf
(
Â
, "\n");

279 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

280 
	`li°_dñ
(&
ªq
->
li°
);

281 
	`‰ì_ªque°
(
ªq
);

285 
	`f˛o£
(
Â
);

287 
	}
}

289 
	$sh™n⁄_so·bôªad_ußge
()

291 
	`¥ötf
("Description:\n");

292 
	`¥ötf
("\tToshiba softbitread\n\n");

294 
	`¥ötf
("Usage:\n");

295 
	`¥ötf
("\tread [option]Üun blockÖageÇaÇbÇcÖaÖbÖc\n\n");

297 
	`¥ötf
("Option:\n");

298 
	`¥ötf
("\t-C, --chunk\n"

300 
	`¥ötf
("\t-a, --skip-normal-read\n"

302 
	`¥ötf
("\t-b, --skip-negative-read\n"

304 
	`¥ötf
("\t-c, --skip-positive-read\n"

306 
	`¥ötf
("\t-h, --help\n"

308 
	}
}

310 
	$sh™n⁄_so·bôªad
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

312 
›ti⁄
 
l⁄g›ts
[] = {

313 {"chunk", 
no_¨gumít
, 
NULL
, 'C'},

314 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

315 {"skù-n‹mÆ-ªad", 
no_¨gumít
, 
NULL
, 'a'},

316 {"skù-√g©ive-ªad", 
no_¨gumít
, 
NULL
, 'b'},

317 {"skù-posôive-ªad", 
no_¨gumít
, 
NULL
, 'c'},

320 
›t
;

321 
lun
, 
block
, 
∑ge
, 
≈œ√
 = 1;

322 
«
, 
nb
, 
nc
, 
∑
, 
pb
, 
pc
;

323 
wr_Êash_ªgs
 
wd
;

324 
skùa
 = 0, 
skùb
 = 0, 
skùc
 = 0;

326 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "hCabc", 
l⁄g›ts
, 
NULL
)) != -1) {

327 
›t
) {

329 
≈œ√
 = 
dev
->
c⁄fig
->nplane;

332 
skùa
 = 1;

335 
skùb
 = 1;

338 
skùc
 = 1;

341 
	`sh™n⁄_so·bôªad_ußge
();

344 
	`sh™n⁄_so·bôªad_ußge
();

345  
ERR
;

349 i‡((
¨gc
 - 
›töd
) != 9) {

350 
	`sh™n⁄_so·bôªad_ußge
();

351 
	`exô
(
EXIT_FAILURE
);

354 
lun
 = 
	`©oi
(
¨gv
[
›töd
]);

355 
block
 = 
	`©oi
(
¨gv
[
›töd
 + 1]);

356 
∑ge
 = 
	`©oi
(
¨gv
[
›töd
 + 2]);

358 
«
 = 
	`©oi
(
¨gv
[
›töd
 + 3]);

359 
nb
 = 
	`©oi
(
¨gv
[
›töd
 + 4]);

360 
nc
 = 
	`©oi
(
¨gv
[
›töd
 + 5]);

362 
∑
 = 
	`©oi
(
¨gv
[
›töd
 + 6]);

363 
pb
 = 
	`©oi
(
¨gv
[
›töd
 + 7]);

364 
pc
 = 
	`©oi
(
¨gv
[
›töd
 + 8]);

366 
	`¥ötf
("shi· vÆe=%d %d %d %d %d %d\n", 
«
, 
nb
, 
nc
, 
∑
, 
pb
, 
pc
);

369 
	`mem£t
(&
wd
, 0x00, (wd));

370 
wd
.
cmd
 = 0x5C;

371 
wd
.
has_£c⁄d¨y_cmd
 = 1;

372 
wd
.
£c⁄d¨y_cmd
 = 0xC5;

373 
wd
.
víd‹y_mode
 = 1;

374 
wd
.
nd©a
 = 0;

375 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

376 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

377 
	`exô
(
EXIT_FAILURE
);

381 i‡(
skùa
)

382 
√g©ive_ªad
;

383 
	`__so·bôªad
(
dev
, 
lun
, 
block
, 
∑ge
, 
≈œ√
, 1, "softrd_normal");

386 
√g©ive_ªad
:

387 i‡(
skùb
)

388 
posôive_ªad
;

389 
	`mem£t
(&
wd
, 0x00, (wd));

390 
wd
.
cmd
 = 0x55;

391 
wd
.
víd‹y_mode
 = 1;

392 
wd
.
nd©a
 = 1;

393 
wd
.
d©a
[0] = 
«
;

394 
wd
.
addr
 = 5;

395 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

396 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

397 
	`exô
(
EXIT_FAILURE
);

400 
	`mem£t
(&
wd
, 0x00, (wd));

401 
wd
.
cmd
 = 0x55;

402 
wd
.
víd‹y_mode
 = 1;

403 
wd
.
nd©a
 = 1;

404 
wd
.
d©a
[0] = 
nb
;

405 
wd
.
addr
 = 6;

406 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

407 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

408 
	`exô
(
EXIT_FAILURE
);

411 
	`mem£t
(&
wd
, 0x00, (wd));

412 
wd
.
cmd
 = 0x55;

413 
wd
.
víd‹y_mode
 = 1;

414 
wd
.
nd©a
 = 1;

415 
wd
.
d©a
[0] = 
nc
;

416 
wd
.
addr
 = 7;

417 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

418 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

419 
	`exô
(
EXIT_FAILURE
);

422 
	`mem£t
(&
wd
, 0x00, (wd));

423 
wd
.
cmd
 = 0x5D;

424 
wd
.
víd‹y_mode
 = 1;

425 
wd
.
nd©a
 = 0;

426 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

427 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

428 
	`exô
(
EXIT_FAILURE
);

431 
	`__so·bôªad
(
dev
, 
lun
, 
block
, 
∑ge
, 
≈œ√
, 1, "softrd_sbn");

434 
posôive_ªad
:

435 i‡(
skùc
)

436 
so·bô_ªadíd
;

437 
	`mem£t
(&
wd
, 0x00, (wd));

438 
wd
.
cmd
 = 0x55;

439 
wd
.
víd‹y_mode
 = 1;

440 
wd
.
nd©a
 = 1;

441 
wd
.
d©a
[0] = 
∑
;

442 
wd
.
addr
 = 5;

443 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

444 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

445 
	`exô
(
EXIT_FAILURE
);

448 
	`mem£t
(&
wd
, 0x00, (wd));

449 
wd
.
cmd
 = 0x55;

450 
wd
.
víd‹y_mode
 = 1;

451 
wd
.
nd©a
 = 1;

452 
wd
.
d©a
[0] = 
pb
;

453 
wd
.
addr
 = 6;

454 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

455 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

456 
	`exô
(
EXIT_FAILURE
);

459 
	`mem£t
(&
wd
, 0x00, (wd));

460 
wd
.
cmd
 = 0x55;

461 
wd
.
víd‹y_mode
 = 1;

462 
wd
.
nd©a
 = 1;

463 
wd
.
d©a
[0] = 
pc
;

464 
wd
.
addr
 = 7;

465 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

466 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

467 
	`exô
(
EXIT_FAILURE
);

470 
	`mem£t
(&
wd
, 0x00, (wd));

471 
wd
.
cmd
 = 0x5D;

472 
wd
.
víd‹y_mode
 = 1;

473 
wd
.
nd©a
 = 0;

474 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

475 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

476 
	`exô
(
EXIT_FAILURE
);

479 
	`__so·bôªad
(
dev
, 
lun
, 
block
, 
∑ge
, 
≈œ√
, 1, "softrd_sbp");

482 
so·bô_ªadíd
:

483 
	`mem£t
(&
wd
, 0x00, (wd));

484 
wd
.
cmd
 = 0x55;

485 
wd
.
víd‹y_mode
 = 1;

486 
wd
.
nd©a
 = 1;

487 
wd
.
d©a
[0] = 0;

488 
wd
.
addr
 = 5;

489 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

490 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

491 
	`exô
(
EXIT_FAILURE
);

494 
	`mem£t
(&
wd
, 0x00, (wd));

495 
wd
.
cmd
 = 0x55;

496 
wd
.
víd‹y_mode
 = 1;

497 
wd
.
nd©a
 = 1;

498 
wd
.
d©a
[0] = 0;

499 
wd
.
addr
 = 6;

500 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

501 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

502 
	`exô
(
EXIT_FAILURE
);

505 
	`mem£t
(&
wd
, 0x00, (wd));

506 
wd
.
cmd
 = 0x55;

507 
wd
.
víd‹y_mode
 = 1;

508 
wd
.
nd©a
 = 1;

509 
wd
.
d©a
[0] = 0;

510 
wd
.
addr
 = 7;

511 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

512 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

513 
	`exô
(
EXIT_FAILURE
);

517 
	}
}

519 
	$sh™n⁄_so·bôªad_a19_ußge
()

521 
	`¥ötf
("Description:\n");

522 
	`¥ötf
("\tToshiba A19nm softbitread\n\n");

524 
	`¥ötf
("Usage:\n");

525 
	`¥ötf
("\tread [option]Üun blockÖageá0á1 b0 b1 c0 c1\n\n");

527 
	`¥ötf
("Option:\n");

528 
	`¥ötf
("\t-C, --chunk\n"

530 
	`¥ötf
("\t-h, --help\n"

532 
	}
}

534 
	$sh™n⁄_so·bôªad_a19
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

536 
›ti⁄
 
l⁄g›ts
[] = {

537 {"chunk", 
no_¨gumít
, 
NULL
, 'C'},

538 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

541 
›t
;

542 
lun
, 
block
, 
∑ge
, 
≈œ√
 = 1;

543 
a0
, 
a1
, 
b0
, 
b1
, 
c0
, 
c1
;

544 
wr_Êash_ªgs
 
wd
;

546 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "hC", 
l⁄g›ts
, 
NULL
)) != -1) {

547 
›t
) {

549 
≈œ√
 = 
dev
->
c⁄fig
->nplane;

552 
	`sh™n⁄_so·bôªad_ußge
();

555 
	`sh™n⁄_so·bôªad_a19_ußge
();

556  
ERR
;

560 i‡((
¨gc
 - 
›töd
) != 9) {

561 
	`sh™n⁄_so·bôªad_a19_ußge
();

562 
	`exô
(
EXIT_FAILURE
);

565 
lun
 = 
	`©oi
(
¨gv
[
›töd
]);

566 
block
 = 
	`©oi
(
¨gv
[
›töd
 + 1]);

567 
∑ge
 = 
	`©oi
(
¨gv
[
›töd
 + 2]);

569 
a0
 = 
	`©oi
(
¨gv
[
›töd
 + 3]);

570 
a1
 = 
	`©oi
(
¨gv
[
›töd
 + 4]);

572 
b0
 = 
	`©oi
(
¨gv
[
›töd
 + 5]);

573 
b1
 = 
	`©oi
(
¨gv
[
›töd
 + 6]);

575 
c0
 = 
	`©oi
(
¨gv
[
›töd
 + 7]);

576 
c1
 = 
	`©oi
(
¨gv
[
›töd
 + 8]);

578 
	`¥ötf
("shi· vÆe=%d %d %d %d %d %d\n", 
a0
, 
a1
, 
b0
, 
b1
, 
c0
, 
c1
);

581 
	`mem£t
(&
wd
, 0x00, (wd));

582 
wd
.
cmd
 = 0x5C;

583 
wd
.
has_£c⁄d¨y_cmd
 = 1;

584 
wd
.
£c⁄d¨y_cmd
 = 0xC5;

585 
wd
.
víd‹y_mode
 = 1;

586 
wd
.
nd©a
 = 0;

587 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

588 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

589 
	`exô
(
EXIT_FAILURE
);

591 
	`__so·bôªad
(
dev
, 
lun
, 
block
, 
∑ge
, 
≈œ√
, 1, "softrd_a19_normal");

594 
	`mem£t
(&
wd
, 0x00, (wd));

595 
wd
.
cmd
 = 0x55;

596 
wd
.
víd‹y_mode
 = 1;

597 
wd
.
nd©a
 = 1;

598 
wd
.
d©a
[0] = 
a0
;

599 
wd
.
addr
 = 0x04;

600 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

601 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

602 
	`exô
(
EXIT_FAILURE
);

604 
	`mem£t
(&
wd
, 0x00, (wd));

605 
wd
.
cmd
 = 0x55;

606 
wd
.
víd‹y_mode
 = 1;

607 
wd
.
nd©a
 = 1;

608 
wd
.
d©a
[0] = 
a1
;

609 
wd
.
addr
 = 0x08;

610 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

611 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

612 
	`exô
(
EXIT_FAILURE
);

615 
	`mem£t
(&
wd
, 0x00, (wd));

616 
wd
.
cmd
 = 0x55;

617 
wd
.
víd‹y_mode
 = 1;

618 
wd
.
nd©a
 = 1;

619 
wd
.
d©a
[0] = 
b0
;

620 
wd
.
addr
 = 0x09;

621 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

622 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

623 
	`exô
(
EXIT_FAILURE
);

625 
	`mem£t
(&
wd
, 0x00, (wd));

626 
wd
.
cmd
 = 0x55;

627 
wd
.
víd‹y_mode
 = 1;

628 
wd
.
nd©a
 = 1;

629 
wd
.
d©a
[0] = 
b1
;

630 
wd
.
addr
 = 0x0A;

631 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

632 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

633 
	`exô
(
EXIT_FAILURE
);

636 
	`mem£t
(&
wd
, 0x00, (wd));

637 
wd
.
cmd
 = 0x55;

638 
wd
.
víd‹y_mode
 = 1;

639 
wd
.
nd©a
 = 1;

640 
wd
.
d©a
[0] = 
c0
;

641 
wd
.
addr
 = 0x0b;

642 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

643 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

644 
	`exô
(
EXIT_FAILURE
);

646 
	`mem£t
(&
wd
, 0x00, (wd));

647 
wd
.
cmd
 = 0x55;

648 
wd
.
víd‹y_mode
 = 1;

649 
wd
.
nd©a
 = 1;

650 
wd
.
d©a
[0] = 
c1
;

651 
wd
.
addr
 = 0x0c;

652 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

653 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

654 
	`exô
(
EXIT_FAILURE
);

658 
	`mem£t
(&
wd
, 0x00, (wd));

659 
wd
.
cmd
 = 0xC0;

660 
wd
.
víd‹y_mode
 = 1;

661 
wd
.
nd©a
 = 0;

662 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

663 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

664 
	`exô
(
EXIT_FAILURE
);

666 
	`__so·bôªad
(
dev
, 
lun
, 
block
, 
∑ge
, 
≈œ√
, 1, "softrd_a19_sb0");

669 
	`mem£t
(&
wd
, 0x00, (wd));

670 
wd
.
cmd
 = 0xC1;

671 
wd
.
víd‹y_mode
 = 1;

672 
wd
.
nd©a
 = 0;

673 i‡(
	`wrôe_Êash_ªgi°îs
(
dev
, 
lun
, &
wd
)) {

674 
	`¥ötf
("%s(Ë%d:Öª c⁄dôi⁄ faû\n", 
__func__
, 
__LINE__
);

675 
	`exô
(
EXIT_FAILURE
);

677 
	`__so·bôªad
(
dev
, 
lun
, 
block
, 
∑ge
, 
≈œ√
, 1, "softrd_a19_sb1");

680 
	}
}

683 
	$sh™n⁄_ª£t
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

685 
lun
, 
rc
 = 
ERR
;

686 
sh™n⁄_ªque°
 *
ªq
;

688 i‡(2 !
¨gc
) {

689 
	`¥ötf
("Usage:\n\tresetÜun\n");

690  
ERR
;

692 
lun
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

694 i‡(
lun
 > 
dev
->
c⁄fig
->
luns
) {

695 
	`¥ötf
("Overflowáddress\n");

696  
OVERFLOW_ADDR
;

699 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ª£t_cmd
, 
lun
, 0, 0, 0, 0);

700 i‡(
NULL
 =
ªq
)

701 
out
;

703 
rc
 = 
dev
->
	`submô_ªque°
(
ªq
);

704 i‡(
rc
)

705 
‰ì_ªq_out
;

706 
rc
 = 
	`upd©e_pﬁl_cmdqueue
(
dev
, 
lun
);

707 i‡(
rc
)

708 
‰ì_ªq_out
;

710 i‡((
ªq
->
°©us
 & 
dev
->
Êash
->
suc˚ss_mask
Ë!dev->Êash->
suc˚ss_°©us
) {

711 
	`¥ötf
("Re£t: faûed sètus: 0x%02X.Üun=%d\n", (
__u8
)
ªq
->
°©us
, 
lun
);

712 
rc
 = 
FAILED_FLASH_STATUS
;

713 
‰ì_ªq_out
;

716 
rc
 = 0;

717 
‰ì_ªq_out
:

718 
	`‰ì_ªque°
(
ªq
);

719 
out
:

720  
rc
;

721 
	}
}

723 
	$sh™n⁄_ªadid
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

725 
lun
;

726 
sh™n⁄_ªque°
 *
ªq
;

728 i‡(2 !
¨gc
) {

729 
	`¥ötf
("Description:\n\tRead singleÜun id\n\n");

730 
	`¥ötf
("Usage:\n\tReadidÜun\n");

731  
ERR
;

733 
lun
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

735 i‡(
lun
 > 
dev
->
c⁄fig
->
luns
) {

736 
	`¥ötf
("Overflowáddress\n");

737  
OVERFLOW_ADDR
;

740 i‡(
dev
->
èrgëlun
[
lun
].
shadow
) {

741 
	`¥_u8_¨øy_n›ªfix
(
dev
->
èrgëlun
[
lun
].
id
.
byãid
, 8, 8);

745 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ªadid_cmd
, 
lun
, 0, 0, 0, 0);

746 i‡(
NULL
 =
ªq
)

747 
	`mÆloc_Áûed_exô
();

749 i‡(
dev
->
	`submô_ªque°
(
ªq
))

750 
	`submô_Áûed_exô
(
lun
);

752 i‡(
	`upd©e_pﬁl_cmdqueue
(
dev
, 
lun
))

753 
	`pﬁl_Áûed_exô
(
lun
);

755 
	`¥_u8_¨øy_n›ªfix
(
ªq
->
id
, 8, 8);

756 
	`‰ì_ªque°
(
ªq
);

758 
	}
}

760 
	$sh™n⁄_îa£_ußge
()

762 
	`¥ötf
("Description:\n");

763 
	`¥ötf
("\tErase singleÜun block\n\n");

765 
	`¥ötf
("Usage:\n");

766 
	`¥ötf
("\terase [option]Üun block\n\n");

768 
	`¥ötf
("Option:\n");

769 
	`¥ötf
("\t-C, --chunk\n"

771 
	`¥ötf
("\t-h, --help\n"

773 
	}
}

775 
	$sh™n⁄_îa£
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

777 
›ti⁄
 
l⁄g›ts
 [] = {

778 {"chunk", 
no_¨gumít
, 
NULL
, 'C'},

779 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

782 
›t
;

783 
lun
, 
block
;

784 
∂™e
, 
≈œ√
;

785 
rc
 = 0;

786 
hód
;

787 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
;

790 
hód
 = 
INDEP_HEAD
;

791 
≈œ√
 = 1;

793 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "hC", 
l⁄g›ts
, 
NULL
)) != -1) {

794 
›t
) {

796 
≈œ√
 = 
dev
->
c⁄fig
->nplane;

799 
	`sh™n⁄_îa£_ußge
();

802 
	`sh™n⁄_îa£_ußge
();

803  
ERR
;

807 i‡((
¨gc
 - 
›töd
) != 2) {

808 
	`sh™n⁄_îa£_ußge
();

809  
ERR
;

812 
lun
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

813 
block
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

814 i‡(
≈œ√
 > 1)

815 
hód
 |(1 << 
SH_ERASE_PLANE_SHIFT
);

817 i‡(
lun
 >
dev
->
c⁄fig
->
luns
 || 
block
 >dev->
Êash
->
nblk
 / 
≈œ√
) {

818 
	`¥ötf
("Overflowáddress\n");

819  
OVERFLOW_ADDR
;

823 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
block
 * 
≈œ√
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

824 i‡(
NULL
 =
chunk_hód_ªq
) {

825 
rc
 = 
ALLOCMEM_FAILED
;

826 
out
;

830 
∂™e
 = 1;Öœ√ < 
≈œ√
;Ölane++) {

831 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, (
block
 * 
≈œ√
 + 
∂™e
Ë* dev->
Êash
->
≈age
, 
hód
, 0, 0);

832 i‡(
NULL
 =
ªq
) {

833 
rc
 = 
ALLOCMEM_FAILED
;

834 
‰ì_ªq_out
;

836 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

840 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
chunk_hód_ªq
)))

841 
‰ì_ªq_out
;

843 i‡((
rc
 = 
	`upd©e_pﬁl_cmdqueue
(
dev
, 
lun
)))

844 
‰ì_ªq_out
;

846 i‡((
rc
 = 
	`check_ªq_°©us
(
chunk_hód_ªq
)))

847 
‰ì_ªq_out
;

849 
‰ì_ªq_out
:

850 
	`‰ì_ªque°
(
chunk_hód_ªq
);

851 
out
:

852 i‡(
rc
 !
FAILED_FLASH_STATUS
 &&Ñc != 0)

853 
	`¥ötf
("Erase:Éncounter someÉrror\n");

854  
rc
;

855 
	}
}

857 
	$fûl_mëa_d©a
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_ªque°
 *
hód
, 
FILE
 *
md©a_Â
)

859 
i
;

860 
löe
[512];

861 
sh™n⁄_ªque°
 *
ªq
;

863 
ªq
 = 
	`li°_íåy
(&
hód
->
chunk_li°
, 
sh™n⁄_ªque°
, chunk_list);

864 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++) {

865 
	`fgës
(
löe
, ÷öe), 
md©a_Â
);

866 
	`ssˇnf
(
löe
, "%lX", &
ªq
->
mëad©a
[
i
]);

870 
	}
}

872 
	$fûl_u£r_d©a
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_ªque°
 *
hód
, 
FILE
 *
ud©a_Â
)

874 
i
;

875 
löe
[512];

876 
sh™n⁄_ªque°
 *
ªq
;

878 
ªq
 = 
	`li°_íåy
(&
hód
->
chunk_li°
, 
sh™n⁄_ªque°
, chunk_list);

879 
i
 = 0; i < 
dev
->
c⁄fig
->
nd©a
; i += 32) {

881 
	`fgës
(
löe
, ÷öe), 
ud©a_Â
);

882 
	`ssˇnf
(
löe
, "%X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X %X",

883 (
uöt
 *)&
ªq
->
d©a
[
i
+0],(uint *)&req->data[i+1],(uint *)&req->data[i+2],(uint *)&req->data[i+3],

884 (
uöt
 *)&
ªq
->
d©a
[
i
+4],(uint *)&req->data[i+5],(uint *)&req->data[i+6],(uint *)&req->data[i+7],

885 (
uöt
 *)&
ªq
->
d©a
[
i
+8],(uint *)&req->data[i+9],(uint *)&req->data[i+10],(uint *)&req->data[i+11],

886 (
uöt
 *)&
ªq
->
d©a
[
i
+12],(uint *)&req->data[i+13],(uint *)&req->data[i+14],(uint *)&req->data[i+15],

887 (
uöt
 *)&
ªq
->
d©a
[
i
+16],(uint *)&req->data[i+17],(uint *)&req->data[i+18],(uint *)&req->data[i+19],

888 (
uöt
 *)&
ªq
->
d©a
[
i
+20],(uint *)&req->data[i+21],(uint *)&req->data[i+22],(uint *)&req->data[i+23],

889 (
uöt
 *)&
ªq
->
d©a
[
i
+24],(uint *)&req->data[i+25],(uint *)&req->data[i+26],(uint *)&req->data[i+27],

890 (
uöt
 *)&
ªq
->
d©a
[
i
+28],(uint *)&req->data[i+29],(uint *)&req->data[i+30],(uint *)&req->data[i+31]);

894 
	}
}

896 
	$sh™n⁄_wrôe_ußge
()

898 
	`¥ötf
("Description:\n");

899 
	`¥ötf
("\tWrite singleÜunÖage\n\n");

901 
	`¥ötf
("Usage:\n");

902 
	`¥ötf
("\twrite [option]ÜunÖpa\n");

903 
	`¥ötf
("\twrite [option]Üun blockÖage\n\n");

905 
	`¥ötf
("Option:\n");

906 
	`¥ötf
("\t-e, --seed=SEED\n"

908 
	`¥ötf
("\t-p, --print-option=[D/M]\n"

910 
	`¥ötf
("\t-H, --head=HEAD\n"

912 
	`¥ötf
("\t-C, --chunk\n"

914 
	`¥ötf
("\t-n, --constant-pages=NUM\n"

916 
	`¥ötf
("\t-d, --datafile=[filename]\n"

918 
	`¥ötf
("\t-s, --skip-check-status\n"

920 
	`¥ötf
("\t-h, --help\n"

922 
	}
}

924 
	$sh™n⁄_wrôe
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

926 
›ti⁄
 
l⁄g›ts
 [] = {

927 {"£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

928 {"¥öt-›ti⁄", 
ªquúed_¨gumít
, 
NULL
, 'p'},

929 {"hód", 
ªquúed_¨gumít
, 
NULL
, 'H'},

930 {"chunk", 
no_¨gumít
, 
NULL
, 'C'},

931 {"c⁄°™t-∑ges", 
ªquúed_¨gumít
, 
NULL
, 'n'},

932 {"d©afûe", 
ªquúed_¨gumít
, 
NULL
, 'd'},

933 {"skù-check-°©us", 
no_¨gumít
, 
NULL
, 's'},

934 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

937 
i
, 
›t
;

938 
lun
, 
block
, 
∑ge
;

939 
£ed
, 
¥_d©a
, 
¥_mëa
, 
hód
;

940 
∂™e
, 
≈œ√
, 
c⁄°™t
;

941 
rc
 = 0;

942 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
;

943 
‰omfûe
 = 0;

944 
skù_check_°©us
 = 0;

945 
mëa_«me
[256], 
u£r_«me
[256];

946 
FILE
 *
Â_u£r
 = 
NULL
, *
Â_mëa
 = NULL;

949 
£ed
 = 
	`gë£ed
(0);

950 
hód
 = 
INDEP_HEAD
;

951 
≈œ√
 = 1;

952 
c⁄°™t
 = 1;

953 
¥_d©a
 = 
¥_mëa
 = 0;

955 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "e:p:H:Cn:d:sh", 
l⁄g›ts
, 
NULL
)) != -1) {

956 
›t
) {

958 
£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

961 
i
 = 0; i < 
	`°æí
(
›èrg
); i++) {

962 
›èrg
[
i
]) {

964 
¥_d©a
 = 1;

967 
¥_mëa
 = 1;

970 
	`sh™n⁄_wrôe_ußge
();

971  
ERR
;

976 
hód
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

977 i‡(
HEAD0
 !
hód
 && 
HEAD1
 !hód && 
INDEP_HEAD
 != head) {

978 
	`¥ötf
("Head choices: 0 1 2\n");

979  
ERR
;

983 
≈œ√
 = 
dev
->
c⁄fig
->nplane;

986 
c⁄°™t
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

989 
‰omfûe
 = 1;

990 
	`•rötf
(
mëa_«me
, "%s_mëa", 
›èrg
);

991 
	`•rötf
(
u£r_«me
, "%s_u£r", 
›èrg
);

994 
skù_check_°©us
 = 1;

997 
	`sh™n⁄_wrôe_ußge
();

1000 
	`sh™n⁄_wrôe_ußge
();

1001  
ERR
;

1005 i‡(3 =(
¨gc
 - 
›töd
)) {

1006 
lun
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

1007 
block
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

1008 
∑ge
 = 
	`°πoul
(
¨gv
[
›töd
 + 2], 
NULL
, 10);

1009 } i‡(2 =(
¨gc
 - 
›töd
)) {

1010 i‡(
≈œ√
 > 1) {

1011 
	`¥ötf
("Format of 'writeÜunÖpa' doesn`t support multi-plane write. Please use 'writeÜun blockÖage'\n");

1012  
ERR
;

1014 
lun
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

1015 
block
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10Ë/ 
dev
->
Êash
->
≈age
;

1016 
∑ge
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10Ë% 
dev
->
Êash
->
≈age
;

1018 
	`sh™n⁄_wrôe_ußge
();

1019  
ERR
;

1022 i‡(
≈œ√
 > 1)

1023 
hód
 |(1 << 
SH_WRITE_PLANE_SHIFT
);

1025 i‡(
lun
 >
dev
->
c⁄fig
->
luns
 || 
block
 >dev->
Êash
->
nblk
 / 
≈œ√
 ||

1026 
∑ge
 >
dev
->
Êash
->
≈age
 ||Öagê+ 
c⁄°™t
 > dev->flash->npage) {

1027 
	`¥ötf
("Overflowáddress\n");

1028  
OVERFLOW_ADDR
;

1031 i‡(
‰omfûe
) {

1033 
Â_mëa
 = 
	`f›í
(
mëa_«me
, "r");

1034 i‡(
NULL
 =
Â_mëa
) {

1035 
	`≥º‹
("can`t create meta data file");

1036 
	`exô
(
EXIT_FAILURE
);

1038 
Â_u£r
 = 
	`f›í
(
u£r_«me
, "r");

1039 i‡(
NULL
 =
Â_u£r
) {

1040 
	`≥º‹
("can`t create user data file");

1041 
	`exô
(
EXIT_FAILURE
);

1045 
	`§™d
(
£ed
);

1047 ; 
c⁄°™t
 > 0; c⁄°™t--, 
∑ge
++) {

1049 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
block
 * 
≈œ√
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, dev->
c⁄fig
->
∑ge_n£˘‹
);

1050 i‡(
NULL
 =
chunk_hód_ªq
) {

1051 
rc
 = 
ALLOCMEM_FAILED
;

1052 
out
;

1055 i‡(!
‰omfûe
) {

1056 
	`∑d_ønd
(
chunk_hód_ªq
->
d©a
, 
dev
->
c⁄fig
->
nd©a
);

1057 
	`∑d_ønd
(
chunk_hód_ªq
->
mëad©a
, 
dev
->
c⁄fig
->
nmëa
);

1059 
	`fûl_mëa_d©a
(
dev
, 
chunk_hód_ªq
, 
Â_mëa
);

1060 
	`fûl_u£r_d©a
(
dev
, 
chunk_hód_ªq
, 
Â_u£r
);

1064 
∂™e
 = 1;Öœ√ < 
≈œ√
;Ölane++) {

1065 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, (
block
 * 
≈œ√
 + 
∂™e
Ë* dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, dev->
c⁄fig
->
∑ge_n£˘‹
);

1066 i‡(
NULL
 =
ªq
) {

1067 
rc
 = 
ALLOCMEM_FAILED
;

1068 
‰ì_ªq_out
;

1071 i‡(!
‰omfûe
) {

1072 
	`∑d_ønd
(
ªq
->
d©a
, 
dev
->
c⁄fig
->
nd©a
);

1073 
	`∑d_ønd
(
ªq
->
mëad©a
, 
dev
->
c⁄fig
->
nmëa
);

1075 
	`fûl_mëa_d©a
(
dev
, 
ªq
, 
Â_mëa
);

1076 
	`fûl_u£r_d©a
(
dev
, 
ªq
, 
Â_u£r
);

1079 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

1083 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
chunk_hód_ªq
)))

1084 
‰ì_ªq_out
;

1086 i‡((
rc
 = 
	`upd©e_pﬁl_cmdqueue
(
dev
, 
lun
)))

1087 
‰ì_ªq_out
;

1089 i‡(!
skù_check_°©us
 && (
rc
 = 
	`check_ªq_°©us
(
chunk_hód_ªq
)))

1090 
‰ì_ªq_out
;

1093 i‡(
¥_mëa
) {

1094 
	`¥ötf
("#mëa÷un=%d,block=%d,∑ge=%d): ", 
lun
, 
block
, 
∑ge
);

1095 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++)

1096 
	`¥ötf
("%016lX ", 
chunk_hód_ªq
->
mëad©a
[
i
]);

1097 
	`li°_f‹_óch_íåy
(
ªq
, &
chunk_hód_ªq
->
chunk_li°
, chunk_list) {

1098 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++)

1099 
	`¥ötf
("%016lX ", 
ªq
->
mëad©a
[
i
]);

1101 
	`¥ötf
("\n");

1104 i‡(
¥_d©a
) {

1105 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++) {

1106 
	`¥ötf
("#£˘‹÷un=%d,block=%d,∑ge=%d): %d\n", 
lun
, 
block
, 
∑ge
, 
i
);

1107 
	`¥_u8_¨øy_n›ªfix
(
chunk_hód_ªq
->
d©a
 + 
i
 * 
dev
->
c⁄fig
->
£˘‹_size
, dev->config->sector_size, 32);

1110 
	`li°_f‹_óch_íåy
(
ªq
, &
chunk_hód_ªq
->
chunk_li°
, chunk_list) {

1111 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++) {

1112 
	`¥ötf
("#£˘‹÷un=%d,block=%d,∑ge=%d): %d\n", 
lun
, 
block
, 
∑ge
, (
≈œ√
 > 1Ë? 
i
 + 
ªq
->
chunk_∂™e
 * 
dev
->
c⁄fig
->
∑ge_n£˘‹
 : i);

1113 
	`¥_u8_¨øy_n›ªfix
(
ªq
->
d©a
 + 
i
 * 
dev
->
c⁄fig
->
£˘‹_size
, dev->config->sector_size, 32);

1118 
	`‰ì_ªque°
(
chunk_hód_ªq
);

1121 i‡(
‰omfûe
) {

1122 
	`f˛o£
(
Â_mëa
);

1123 
	`f˛o£
(
Â_u£r
);

1128 
‰ì_ªq_out
:

1129 
	`‰ì_ªque°
(
chunk_hód_ªq
);

1130 
out
:

1131 i‡(
rc
 !
FAILED_FLASH_STATUS
 &&Ñc != 0)

1132 
	`¥ötf
("Write:Éncounter someÉrror\n");

1134 i‡(
‰omfûe
) {

1135 
	`f˛o£
(
Â_mëa
);

1136 
	`f˛o£
(
Â_u£r
);

1139  
rc
;

1140 
	}
}

1142 
	$sh™n⁄_ªad_ußge
()

1144 
	`¥ötf
("Description:\n");

1145 
	`¥ötf
("\tRead singleÜunÖage\n\n");

1147 
	`¥ötf
("Usage:\n");

1148 
	`¥ötf
("\tread [option]ÜunÖpa\n");

1149 
	`¥ötf
("\tread [option] -bÜunÖba\n");

1150 
	`¥ötf
("\tread [option]Üun blockÖage\n\n");

1152 
	`¥ötf
("Option:\n");

1153 
	`¥ötf
("\t-p, --print-option=[D/M/E/N]\n"

1155 
	`¥ötf
("\t-C, --chunk\n"

1157 
	`¥ötf
("\t-n, --constant-pages=NUM\n"

1159 
	`¥ötf
("\t-D, --disable-last-cacheread\n"

1161 
	`¥ötf
("\t-l, --loops=N\n"

1163 
	`¥ötf
("\t-E, --totalecc\n"

1165 
	`¥ötf
("\t-d, --datafile=[filename]\n"

1167 
	`¥ötf
("\t-h, --help\n"

1169 
	}
}

1171 
	$sh™n⁄_ªad
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

1173 
›ti⁄
 
l⁄g›ts
 [] = {

1174 {"¥öt-›ti⁄", 
ªquúed_¨gumít
, 
NULL
, 'p'},

1175 {"chunk", 
no_¨gumít
, 
NULL
, 'C'},

1176 {"c⁄°™t-∑ges", 
ªquúed_¨gumít
, 
NULL
, 'n'},

1177 {"dißbÀ-œ°-ˇchîód", 
no_¨gumít
, 
NULL
, 'D'},

1178 {"pba", 
no_¨gumít
, 
NULL
, 'b'},

1179 {"lo›s", 
ªquúed_¨gumít
, 
NULL
, 'l'},

1180 {"tŸÆecc", 
no_¨gumít
, 
NULL
, 'E'},

1181 {"d©afûe", 
ªquúed_¨gumít
, 
NULL
, 'd'},

1182 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

1185 
›t
;

1186 
¥_•lô
, 
¥_⁄ly_d©a
, 
¥_⁄ly_mëa
, 
¥_⁄ly_ecc
, 
¥_ecc_tŸÆ
;

1187 
lun
, 
block
, 
∑ge
;

1188 
hód
;

1189 
∂™e
, 
≈œ√
, 
c⁄°™t
;

1190 
rc
 = 0;

1191 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

1192 
li°_hód
 
ªq_hód
;

1193 
bs
, 
ns
, 
ªmaö_ns
;

1194 
i
, 
j
;

1195 
œ°_ˇchîód
 = 1;

1196 
i•ba
, 
£˘‹off
;

1197 
£˘‹off_°r
[32];

1198 
•age
, 
lo›s
, 
sc⁄°™t
;

1199 
quõt
 = 0;

1200 
tŸÆ_ecc
 = 0;

1201 
tofûe
 = 0;

1202 
mëa_«me
[256], 
u£r_«me
[256];

1203 
FILE
 *
Â_mëa
 = 
NULL
;

1204 
FILE
 *
Â_u£r
 = 
NULL
;

1207 
hód
 = 0;

1208 
≈œ√
 = 1;

1209 
sc⁄°™t
 = 
c⁄°™t
 = 1;

1210 
i•ba
 = 0;

1211 
lo›s
 = 1;

1213 
¥_•lô
 = 
¥_⁄ly_d©a
 = 
¥_⁄ly_mëa
 = 
¥_⁄ly_ecc
 = 
¥_ecc_tŸÆ
 = 0;

1215 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "p:Cn:Dbl:Ed:h", 
l⁄g›ts
, 
NULL
)) != -1) {

1216 
›t
) {

1218 
¥_•lô
 = 1;

1220 
i
 = 0; i < 
	`°æí
(
›èrg
); i++) {

1221 
›èrg
[
i
]) {

1223 
¥_⁄ly_d©a
 = 1;

1226 
¥_⁄ly_mëa
 = 1;

1229 
¥_⁄ly_ecc
 = 1;

1232 
quõt
 = 1;

1235 
	`sh™n⁄_ªad_ußge
();

1236  
ERR
;

1241 
≈œ√
 = 
dev
->
c⁄fig
->nplane;

1244 
c⁄°™t
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

1247 
œ°_ˇchîód
 = 0;

1250 
i•ba
 = 1;

1253 
lo›s
 = 
	`©oi
(
›èrg
);

1254 i‡(
lo›s
 <= 0)

1255 
lo›s
 = 1;

1258 
¥_ecc_tŸÆ
 = 1;

1261 
tofûe
 = 1;

1262 
	`•rötf
(
mëa_«me
, "%s_mëa", 
›èrg
);

1263 
	`•rötf
(
u£r_«me
, "%s_u£r", 
›èrg
);

1266 
	`sh™n⁄_ªad_ußge
();

1269 
	`sh™n⁄_ªad_ußge
();

1270  
ERR
;

1274 i‡(3 =(
¨gc
 - 
›töd
)) {

1275 
lun
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

1276 
block
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

1277 
∑ge
 = 
	`°πoul
(
¨gv
[
›töd
 + 2], 
NULL
, 10);

1278 } i‡(2 =(
¨gc
 - 
›töd
)) {

1279 
lun
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

1280 i‡(
i•ba
) {

1281 
block
 = (
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10Ë/ 
dev
->
c⁄fig
->
∑ge_n£˘‹
Ë/ (dev->
Êash
->
≈age
 * 
≈œ√
);

1282 
∑ge
 = (
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10Ë/ 
dev
->
c⁄fig
->
∑ge_n£˘‹
Ë% dev->
Êash
->
≈age
;

1283 
£˘‹off
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10Ë% 
dev
->
c⁄fig
->
∑ge_n£˘‹
 +

1284 (((
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10Ë/ 
dev
->
c⁄fig
->
∑ge_n£˘‹
Ë/ dev->
Êash
->
≈age
Ë% 
≈œ√
) * dev->config->page_nsector;

1285 
	`•rötf
(
£˘‹off_°r
, ",£˘‹=%d", 
£˘‹off
);

1287 
block
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10Ë/ (
dev
->
Êash
->
≈age
 * 
≈œ√
);

1288 
∑ge
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10Ë% 
dev
->
Êash
->
≈age
;

1291 
	`sh™n⁄_ªad_ußge
();

1292  
ERR
;

1295 i‡(
≈œ√
 > 1)

1296 
hód
 |(1 << 
SH_READ_PLANE_SHIFT
);

1298 i‡(
lun
 >
dev
->
c⁄fig
->
luns
 || 
block
 >dev->
Êash
->
nblk
 / 
≈œ√
 ||

1299 
∑ge
 >
dev
->
Êash
->
≈age
 ||Öagê+ 
c⁄°™t
 > dev->flash->npage) {

1300 
	`¥ötf
("Overflowáddress\n");

1301  
OVERFLOW_ADDR
;

1304 
	`INIT_LIST_HEAD
(&
ªq_hód
);

1306 i‡(
quõt
) {

1307 
¥_•lô
 = 1;

1308 
¥_⁄ly_ecc
 = 
¥_⁄ly_mëa
 = 
¥_⁄ly_d©a
 = 0;

1311 i‡(
tofûe
) {

1313 
Â_mëa
 = 
	`f›í
(
mëa_«me
, "w+");

1314 i‡(
NULL
 =
Â_mëa
) {

1315 
	`≥º‹
("can`t create meta data file");

1316 
	`exô
(
EXIT_FAILURE
);

1318 
Â_u£r
 = 
	`f›í
(
u£r_«me
, "w+");

1319 i‡(
NULL
 =
Â_u£r
) {

1320 
	`≥º‹
("can`t create user data file");

1321 
	`exô
(
EXIT_FAILURE
);

1325 
•age
 = 
∑ge
;

1326 
sc⁄°™t
 = 
c⁄°™t
;

1327 
√xt_lo›
:

1328 ; 
c⁄°™t
 > 0; c⁄°™t--, 
∑ge
++) {

1330 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
block
 * 
≈œ√
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, 0);

1331 i‡(
NULL
 =
chunk_hód_ªq
) {

1332 
rc
 = 
ALLOCMEM_FAILED
;

1333 
out
;

1335 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

1337 
∂™e
 = 1;Öœ√ < 
≈œ√
;Ölane++) {

1338 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, (
block
 * 
≈œ√
 + 
∂™e
Ë* dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, 0);

1339 i‡(
NULL
 =
ªq
) {

1340 
rc
 = 
ALLOCMEM_FAILED
;

1341 
‰ì_ªq_out
;

1343 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

1347 
∂™e
 = 0;Öœ√ < 
≈œ√
;Ölane++) {

1348 
bs
 = 0;

1349 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

1351 
ªmaö_ns
) {

1352 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

1354 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, (
block
 * 
≈œ√
 + 
∂™e
Ë* dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 
bs
, 
ns
);

1355 i‡(
NULL
 =
ªq
) {

1356 
rc
 = 
ALLOCMEM_FAILED
;

1357 
‰ì_ªq_out
;

1359 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

1361 
bs
 +
ns
;

1362 
ªmaö_ns
 -
ns
;

1365 
ªq
->
œ°_ˇchîód
 =Üast_cacheread;

1367 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1368 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

1369 
‰ì_ªq_out
;

1373 i‡((
rc
 = 
	`upd©e_pﬁl_cmdqueue
(
dev
, 
lun
)))

1374 
‰ì_ªq_out
;

1377 
ªq
 = 
	`li°_fú°_íåy
(&
ªq_hód
, 
sh™n⁄_ªque°
, 
li°
);

1378 i‡((
rc
 = 
	`check_ªq_°©us
(
ªq
)))

1379 
‰ì_ªq_out
;

1380 
	`li°_dñ
(&
ªq
->
li°
);

1381 
	`‰ì_ªque°
(
ªq
);

1384 i‡(!
¥_•lô
 || 
¥_⁄ly_ecc
)

1385 
	`¥ötf
("#ECC÷un=%d,block=%d,∑ge=%d%s): ", 
lun
, 
block
, 
∑ge
, 
i•ba
 ? 
£˘‹off_°r
 : "");

1387 i‡(!
¥_•lô
 || 
¥_⁄ly_ecc
 || 
¥_ecc_tŸÆ
) {

1388 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1389 
nib
;

1391 
nib
 = 0;Çib < 
ªq
->
n£˘‹
;Çib++) {

1392 i‡(!
¥_•lô
 || 
¥_⁄ly_ecc
)

1393 
	`¥ötf
("%02X ", 
ªq
->
ecc
[
nib
]);

1394 
tŸÆ_ecc
 +
ªq
->
ecc
[
nib
];

1398 i‡(!
¥_•lô
 || 
¥_⁄ly_ecc
)

1399 
	`¥ötf
("\n");

1402 i‡(!
¥_•lô
 || 
¥_⁄ly_mëa
) {

1403 
	`¥ötf
("#mëa÷un=%d,block=%d,∑ge=%d%s): ", 
lun
, 
block
, 
∑ge
, 
i•ba
 ? 
£˘‹off_°r
 : "");

1404 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1405 
i
 = 0; i < 
ªq
->
n£˘‹
; i++)

1406 
	`¥ötf
("%016lX ", 
ªq
->
mëad©a
[
i
]);

1408 
	`¥ötf
("\n");

1411 i‡(
tofûe
) {

1412 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1413 
i
 = 0; i < 
ªq
->
n£˘‹
; i++)

1414 
	`Ârötf
(
Â_mëa
, "%016lX\n", 
ªq
->
mëad©a
[
i
]);

1418 i‡(!
¥_•lô
 || 
¥_⁄ly_d©a
) {

1419 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1420 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

1421 
	`¥ötf
("#£˘‹÷un=%d,block=%d,∑ge=%d): %d\n", 
lun
, 
block
, 
∑ge
, (
≈œ√
 > 1Ë? 
i
 + 
ªq
->
chunk_∂™e
 * 
dev
->
c⁄fig
->
∑ge_n£˘‹
 +Ñeq->
b£˘‹
 : i +Ñeq->bsector);

1422 
	`¥_u8_¨øy_n›ªfix
(
ªq
->
d©a
 + 
i
 * 
dev
->
c⁄fig
->
£˘‹_size
, dev->c⁄fig->£˘‹_size, 32/(dev->
vÆid_8bô
+1));

1427 i‡(
tofûe
) {

1428 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1429 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

1430 
j
 = 0; j < 
dev
->
c⁄fig
->
£˘‹_size
; j++) {

1431 i‡(0 =
j
%32 && j != 0)

1432 
	`Ârötf
(
Â_u£r
, "\n");

1433 
	`Ârötf
(
Â_u£r
, "%02X ", (
ªq
->
d©a
 + 
i
 * 
dev
->
c⁄fig
->
£˘‹_size
)[
j
]);

1435 
	`Ârötf
(
Â_u£r
, "\n");

1440 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1441 
	`li°_dñ
(&
ªq
->
li°
);

1442 
	`‰ì_ªque°
(
ªq
);

1446 i‡(--
lo›s
) {

1447 
c⁄°™t
 = 
sc⁄°™t
;

1448 
∑ge
 = 
•age
;

1449 
√xt_lo›
;

1452 i‡(
¥_ecc_tŸÆ
)

1453 
	`¥ötf
("TŸÆEccNum=%ld\n", 
tŸÆ_ecc
);

1455 i‡(
tofûe
) {

1456 
	`f˛o£
(
Â_mëa
);

1457 
	`f˛o£
(
Â_u£r
);

1462 
‰ì_ªq_out
:

1463 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1464 
	`li°_dñ
(&
ªq
->
li°
);

1465 
	`‰ì_ªque°
(
ªq
);

1467 
out
:

1468 i‡(
rc
 !
FAILED_FLASH_STATUS
 &&Ñc != 0)

1469 
	`¥ötf
("Read:Éncounter someÉrror\n");

1471 i‡(
tofûe
) {

1472 
	`f˛o£
(
Â_mëa
);

1473 
	`f˛o£
(
Â_u£r
);

1476  
rc
;

1477 
	}
}

1480 
	#≥xô
(
x
...Ëdÿ{ 
	`¥ötf
(x); 
	`exô
(
EXIT_FAILURE
); } 0)

	)

1482 
	$gë_group_addªss
(
sh™n⁄_dev
 *
dev
, *
s
, *
lun
, *
block
, *
∑ge
)

1484 
tmp
;

1485 *
p
, *
íd±r
;

1487 
p
 = 
s
;

1488 *
lun
 = 
	`°πoul
(
p
, &
íd±r
, 10);

1489 i‡(*
íd±r
 != ',') {

1490 
	`¥ötf
("InvÆid grou∞addªss: %s\n", 
s
);

1494 
p
 = 
íd±r
 + 1;

1495 
tmp
 = 
	`°πoul
(
p
, &
íd±r
, 10);

1496 i‡(*
íd±r
 == ',') {

1497 *
block
 = 
tmp
;

1498 *
∑ge
 = 
	`°πoul
(
íd±r
 + 1, 
NULL
, 10);

1500 *
block
 = 
tmp
 / 
dev
->
Êash
->
≈age
;

1501 *
∑ge
 = 
tmp
 % 
dev
->
Êash
->
≈age
;

1506 
	}
}

1508 
	$sh™n⁄_c›y_ußge
()

1510 
	`¥ötf
("Description:\n");

1511 
	`¥ötf
("\tcopyÖageÅoánotherÖage based on singleÜun\n\n");

1513 
	`¥ötf
("Usage:\n");

1514 
	`¥ötf
("\tcopy [option] --from=lun,block,page/lun,ppa --to=lun,block,page/lun,ppa\n\n");

1516 
	`¥ötf
("Option:\n");

1517 
	`¥ötf
("\t--from=lun,block,page/lun,ppa\n"

1519 
	`¥ötf
("\t--to=lun,block,page/lun,ppa\n"

1521 
	`¥ötf
("\t-C, --chunk\n"

1523 
	`¥ötf
("\t-n, --constant-pages=NUM\n"

1525 
	`¥ötf
("\t-D, --disable-last-cacheread\n"

1527 
	`¥ötf
("\t-s, --silent\n"

1529 
	`¥ötf
("\t-h, --help\n"

1531 
	}
}

1532 
	$sh™n⁄_c›y
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

1534 
›ti⁄
 
l⁄g›ts
 [] = {

1535 {"‰om", 
ªquúed_¨gumít
, 
NULL
, 'O'},

1536 {"to", 
ªquúed_¨gumít
, 
NULL
, 'I'},

1537 {"chunk", 
no_¨gumít
, 
NULL
, 'C'},

1538 {"c⁄°™t-∑ges", 
ªquúed_¨gumít
, 
NULL
, 'n'},

1539 {"dißbÀ-œ°-ˇchîód", 
no_¨gumít
, 
NULL
, 'D'},

1540 {"sûít", 
no_¨gumít
, 
NULL
, 's'},

1541 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

1544 
›t
;

1545 
‰om
, 
to
, 
‰omlun
, 
‰omblock
, 
‰om∑ge
, 
tﬁun
, 
toblock
, 
t›age
;

1546 
hód
, 
∂™e
, 
≈œ√
, 
c⁄°™t
;

1547 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

1548 
li°_hód
 
ªq_hód
;

1549 
bs
, 
ns
, 
ªmaö_ns
;

1550 
œ°_ˇchîód
 = 1;

1551 
sûít
;

1552 
__u8
 *
d©a
, *
mëa
;

1555 
hód
 = 
INDEP_HEAD
;

1556 
≈œ√
 = 1;

1557 
c⁄°™t
 = 1;

1558 
‰om
 = 
to
 = 0;

1559 
sûít
 = 0;

1561 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "O:I:Cn:Dsh", 
l⁄g›ts
, 
NULL
)) != -1) {

1562 
›t
) {

1564 i‡(
	`gë_group_addªss
(
dev
, 
›èrg
, &
‰omlun
, &
‰omblock
, &
‰om∑ge
))

1565  
EXIT_FAILURE
;

1566 
‰om
 = 1;

1569 i‡(
	`gë_group_addªss
(
dev
, 
›èrg
, &
tﬁun
, &
toblock
, &
t›age
))

1570  
EXIT_FAILURE
;

1571 
to
 = 1;

1574 
≈œ√
 = 
dev
->
c⁄fig
->nplane;

1577 
c⁄°™t
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

1580 
œ°_ˇchîód
 = 0;

1583 
sûít
 = 1;

1586 
	`sh™n⁄_c›y_ußge
();

1589 
	`sh™n⁄_c›y_ußge
();

1590  
EXIT_FAILURE
;

1594 i‡(!
‰om
) {

1595 
	`¥ötf
("missing option --from\n");

1596 
	`sh™n⁄_c›y_ußge
();

1597 
	`exô
(
EXIT_FAILURE
);

1600 i‡(!
to
) {

1601 
	`¥ötf
("missing option --to\n");

1602 
	`sh™n⁄_c›y_ußge
();

1603 
	`exô
(
EXIT_FAILURE
);

1606 i‡(!
sûít
) {

1607 
	`¥ötf
("FROM:Üun=%d block=%dÖage=%d\n", 
‰omlun
, 
‰omblock
, 
‰om∑ge
);

1608 
	`¥ötf
("TO:Üun=%d block=%dÖage=%d\n", 
tﬁun
, 
toblock
, 
t›age
);

1611 i‡(
≈œ√
 > 1)

1612 
hód
 |(1 << 
SH_READ_PLANE_SHIFT
);

1614 i‡(
‰omlun
 >
dev
->
c⁄fig
->
luns
 || 
‰omblock
 >dev->
Êash
->
nblk
 / 
≈œ√
 ||

1615 
‰om∑ge
 >
dev
->
Êash
->
≈age
 || from∑gê+ 
c⁄°™t
 > dev->flash->npage) {

1616 
	`≥xô
("Overflowáddress [FROM]\n");

1619 i‡(
tﬁun
 >
dev
->
c⁄fig
->
luns
 || 
toblock
 >dev->
Êash
->
nblk
 / 
≈œ√
 ||

1620 
t›age
 >
dev
->
Êash
->
≈age
 ||Å›agê+ 
c⁄°™t
 > dev->flash->npage) {

1621 
	`≥xô
("Overflowáddress [TO]\n");

1624 
d©a
 = 
	`mÆloc
(
dev
->
c⁄fig
->
nd©a
 * 
≈œ√
);

1625 
mëa
 = 
	`mÆloc
(
dev
->
c⁄fig
->
nmëa
 * 
≈œ√
);

1626 i‡(
NULL
 =
d©a
 || NULL =
mëa
)

1627 
	`≥xô
("malloc failed");

1629 
	`INIT_LIST_HEAD
(&
ªq_hód
);

1631 ; 
c⁄°™t
 > 0; c⁄°™t--, 
‰om∑ge
++, 
t›age
++) {

1634 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
‰omlun
, 
‰omblock
 * 
≈œ√
 * dev->
Êash
->
≈age
 + 
‰om∑ge
, 
hód
, 0, 0);

1635 i‡(
NULL
 =
chunk_hód_ªq
)

1636 
	`≥xô
("alloc_request failed\n");

1637 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

1639 
∂™e
 = 1;Öœ√ < 
≈œ√
;Ölane++) {

1640 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
‰omlun
, (
‰omblock
 * 
≈œ√
 + 
∂™e
Ë* dev->
Êash
->
≈age
 + 
‰om∑ge
, 
hód
, 0, 0);

1641 i‡(
NULL
 =
ªq
)

1642 
	`≥xô
("copy-read:álloc_request failed\n");

1643 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

1647 
∂™e
 = 0;Öœ√ < 
≈œ√
;Ölane++) {

1648 
bs
 = 0;

1649 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

1651 
ªmaö_ns
) {

1652 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

1654 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
‰omlun
, (
‰omblock
 * 
≈œ√
 + 
∂™e
Ë* dev->
Êash
->
≈age
 + 
‰om∑ge
, 
hód
, 
bs
, 0);

1655 i‡(
NULL
 =
ªq
)

1656 
	`≥xô
("copy-read:álloc_request failed\n");

1657 
ªq
->
d©a
 = d©®+ 
dev
->
c⁄fig
->
nd©a
 * 
∂™e
 + 
bs
 * dev->c⁄fig->
£˘‹_size
;

1658 
ªq
->
mëad©a
 = (
__u64
 *)(
mëa
 + 
dev
->
c⁄fig
->
nmëa
 * 
∂™e
 + 
bs
 * 8);

1659 
ªq
->
n£˘‹
 = 
ns
;

1660 
ªq
->
b‰ì
 = 0;

1661 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

1663 
bs
 +
ns
;

1664 
ªmaö_ns
 -
ns
;

1667 
ªq
->
œ°_ˇchîód
 =Üast_cacheread;

1669 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1670 i‡(
dev
->
	`submô_ªque°
(
ªq
))

1671 
	`≥xô
("copy-read: submit_request failed\n");

1675 i‡(
	`upd©e_pﬁl_cmdqueue
(
dev
, 
‰omlun
))

1676 
	`≥xô
("copy-read: update_poll_cmdqueue failed\n");

1679 
ªq
 = 
	`li°_fú°_íåy
(&
ªq_hód
, 
sh™n⁄_ªque°
, 
li°
);

1680 i‡(
	`check_ªq_°©us
(
ªq
))

1681 
	`≥xô
("copy-read: check_req_status failed\n");

1682 
	`li°_dñ
(&
ªq
->
li°
);

1683 
	`‰ì_ªque°
(
ªq
);

1685 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1686 
	`li°_dñ
(&
ªq
->
li°
);

1687 
	`‰ì_ªque°
(
ªq
);

1692 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
tﬁun
, 
toblock
 * 
≈œ√
 * dev->
Êash
->
≈age
 + 
t›age
, 
hód
, 0, 0);

1693 i‡(
NULL
 =
chunk_hód_ªq
)

1694 
	`≥xô
("copy-write:álloc_request failed\n");

1695 
chunk_hód_ªq
->
d©a
 = data;

1696 
chunk_hód_ªq
->
mëad©a
 = (
__u64
 *)
mëa
;

1697 
chunk_hód_ªq
->
n£˘‹
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

1698 
chunk_hód_ªq
->
b‰ì
 = 0;

1701 
∂™e
 = 1;Öœ√ < 
≈œ√
;Ölane++) {

1702 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
tﬁun
, (
toblock
 * 
≈œ√
 + 
∂™e
Ë* dev->
Êash
->
≈age
 + 
t›age
, 
hód
, 0, 0);

1703 i‡(
NULL
 =
ªq
)

1704 
	`≥xô
("copy-write:álloc_request failed\n");

1705 
ªq
->
d©a
 = d©®+ 
dev
->
c⁄fig
->
nd©a
 * 
∂™e
;

1706 
ªq
->
mëad©a
 = (
__u64
 *)(
mëa
 + 
dev
->
c⁄fig
->
nmëa
 * 
∂™e
);

1707 
ªq
->
n£˘‹
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

1708 
ªq
->
b‰ì
 = 0;

1709 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

1713 i‡(
dev
->
	`submô_ªque°
(
chunk_hód_ªq
))

1714 
	`≥xô
("copy-write: submit_request failed\n");

1716 i‡(
	`upd©e_pﬁl_cmdqueue
(
dev
, 
tﬁun
))

1717 
	`≥xô
("copy-write: update_poll_cmdqueue failed\n");

1719 i‡(
	`check_ªq_°©us
(
chunk_hód_ªq
))

1720 
	`≥xô
("copy-write: check_req_status failed\n");

1722 
	`‰ì_ªque°
(
chunk_hód_ªq
);

1725 
	`‰ì
(
d©a
);

1726 
	`‰ì
(
mëa
);

1728 
	}
}

1731 
	$sh™n⁄_rwlo›_ußge
()

1733 
	`¥ötf
("Description:\n");

1734 
	`¥ötf
("\tutils forÅest MSBánd LSB\n\n");

1736 
	`¥ötf
("Usage:\n");

1737 
	`¥ötf
("\trwloop [option]Üun block begin-page continuous-pages\n\n");

1739 
	`¥ötf
("Option:\n");

1740 
	`¥ötf
("\t-C, --chunk\n"

1742 
	`¥ötf
("\t-r, --reread=COUNT\n"

1744 
	`¥ötf
("\t-n, --no-erase-first\n"

1746 
	`¥ötf
("\t-h, --help\n"

1749 
	`¥ötf
("Example:\n");

1750 
	`¥ötf
("\trwloop 1 25 0 100 -- writeÜun-1 block-25Öages from 0Åo 99,ÑeadÖagesáheadáfterÖer-write operation\n");

1751 
	}
}

1753 
	$sh™n⁄_rwlo›
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

1755 
›ti⁄
 
l⁄g›ts
 [] = {

1756 {"chunk", 
no_¨gumít
, 
NULL
, 'C'},

1757 {"ªªad", 
ªquúed_¨gumít
, 
NULL
, 'r'},

1758 {"no-îa£-fú°", 
ªquúed_¨gumít
, 
NULL
, 'n'},

1759 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

1762 
›t
, 
lun
, 
blk
, 
∑ge
, 
bchunk
 = 0, 
lo›s
, 
c
, 
r˙t
, 
rcou¡
 = 1;

1763 *
my¨gv
[16], 
vlun
[32], 
vblk
[32], 
v∑ge
[32], 
v≈age
[32];

1764 
n€ø£
 = 0;

1766 
	`bzîo
(
my¨gv
, (myargv));

1768 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "Cr:nh", 
l⁄g›ts
, 
NULL
)) != -1) {

1769 
›t
) {

1771 
bchunk
 = 1;

1774 
rcou¡
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

1777 
n€ø£
 = 1;

1780 
	`sh™n⁄_rwlo›_ußge
();

1783 
	`sh™n⁄_rwlo›_ußge
();

1784 
	`exô
(
EXIT_FAILURE
);

1788 i‡(4 =(
¨gc
 - 
›töd
)) {

1789 
lun
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

1790 
blk
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

1791 
∑ge
 = 
	`°πoul
(
¨gv
[
›töd
 + 2], 
NULL
, 10);

1792 
lo›s
 = 
	`°πoul
(
¨gv
[
›töd
 + 3], 
NULL
, 10);

1794 
	`sh™n⁄_rwlo›_ußge
();

1795 
	`exô
(
EXIT_FAILURE
);

1798 i‡(
n€ø£
)

1799 
d‹w
;

1802 
my¨gv
[0] = "erase";

1803 
	`•rötf
(
vlun
, "%d", 
lun
); 
my¨gv
[1] = vlun;

1804 
	`•rötf
(
vblk
, "%d", 
blk
); 
my¨gv
[2] = vblk;

1805 
my¨gv
[3] = "--chunk";

1807 
›töd
 = 1;

1808 i‡(
	`sh™n⁄_îa£
(
dev
, 3 + 
bchunk
, 
my¨gv
))

1809 
	`exô
(
EXIT_FAILURE
);

1812 
d‹w
:

1813 
c
 = 0; c < 
lo›s
; c++) {

1814 
	`¥ötf
("======wrôe-∑ge: %d,Ñód-∑ge: %d~%d =======\n", 
∑ge
 + 
c
,Öage,Öage + c);

1817 
my¨gv
[0] = "write";

1818 
	`•rötf
(
vlun
, "%d", 
lun
); 
my¨gv
[1] = vlun;

1819 
	`•rötf
(
vblk
, "%d", 
blk
); 
my¨gv
[2] = vblk;

1820 
	`•rötf
(
v∑ge
, "%d", 
∑ge
 + 
c
); 
my¨gv
[3] = vpage;

1821 
my¨gv
[4] = "--chunk";

1823 
›töd
 = 1;

1824 i‡(
	`sh™n⁄_wrôe
(
dev
, 4 + 
bchunk
, 
my¨gv
))

1825 
	`exô
(
EXIT_FAILURE
);

1828 
	`•rötf
(
vlun
, "%d", 
lun
);

1829 
	`•rötf
(
vblk
, "%d", 
blk
);

1830 
	`•rötf
(
v∑ge
, "%d", 
∑ge
);

1831 
	`•rötf
(
v≈age
, "%s%d", "-n", 
c
 + 1);

1833 
r˙t
 = 0;Ñ˙à< 
rcou¡
;Ñcnt++) {

1834 
	`¥ötf
("*RódCou¡=%d\n", 
r˙t
 + 1);

1836 
my¨gv
[0] = "read";

1837 
my¨gv
[1] = 
vlun
;

1838 
my¨gv
[2] = 
vblk
;

1839 
my¨gv
[3] = 
v∑ge
;

1840 
my¨gv
[4] = 
v≈age
;

1841 
my¨gv
[5] = "-pE";

1842 
my¨gv
[6] = "--chunk";

1844 
›töd
 = 1;

1845 i‡(
	`sh™n⁄_ªad
(
dev
, 6 + 
bchunk
, 
my¨gv
))

1846 
	`exô
(
EXIT_FAILURE
);

1849 i‡(
c
 !
lo›s
 - 1)

1850 
	`¥ötf
("\n");

1854 
	}
}

	@bbt.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

10 
	~<time.h
>

11 
	~<sys/mm™.h
>

13 
	~"toﬁ.h
"

16 
	$îa£_sˇn
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
bbt
)

18 
rc
 = 0;

19 
hód
, 
lun
, 
∂™e
, 
blk
, 
µa
;

20 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

21 
li°_hód
 
ªq_hód
;

22 
¥e_˚¡
, 
now_˚¡
;

24 
hód
 = 
INDEP_HEAD
;

25 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

26 
hód
 |(1 << 
SH_ERASE_PLANE_SHIFT
);

28 
	`INIT_LIST_HEAD
(&
ªq_hód
);

30 i‡(
bbt
->
nblock
 =
dev
->
Êash
->
nblk
) {

31 
¥e_˚¡
 = 
now_˚¡
 = 0;

32 
	`¥öt
("AŒ block†îa£ sˇn...%%%02d", 
now_˚¡
);

35 
	`as£π
(
bbt
->
nblock
 != 0);

36 
blk
 = 0; blk < 
bbt
->
nblock
 / 
dev
->
c⁄fig
->
≈œ√
; blk++) {

37 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

40 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

41 i‡(
dev
->
èrgëlun
[
lun
].
blk_hﬁe_cou¡
 && 
blk
*dev->
c⁄fig
->
≈œ√
 >dev->èrgëlun[lun].
blk_hﬁe_begö
) {

42 
	`£t_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]);

46 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

47 i‡(
NULL
 =
chunk_hód_ªq
) {

48 
rc
 = 
ALLOCMEM_FAILED
;

49 
‰ì_ªq_out
;

51 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

53 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

54 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

55 i‡(
NULL
 =
ªq
) {

56 
rc
 = 
ALLOCMEM_FAILED
;

57 
‰ì_ªq_out
;

59 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

64 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

65 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

66 
‰ì_ªq_out
;

67 
	`upd©e_cmdqueue
(
dev
, 
ªq
->
lun
);

73 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

74 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

75 
‰ì_ªq_out
;

79 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

80 i‡(
	`check_ªq_°©us_sûít
(
ªq
))

81 
	`£t_bô
(
ªq
->
lun
, 
bbt
->
sb_bbt
[
blk
]);

85 i‡(
bbt
->
nblock
 =
dev
->
Êash
->
nblk
) {

86 
now_˚¡
 = 100 * (
blk
 + 1Ë/ (
dev
->
Êash
->
nblk
 / dev->
c⁄fig
->
≈œ√
);

88 i‡(
now_˚¡
 > 
¥e_˚¡
) {

89 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

90 
¥e_˚¡
 = 
now_˚¡
;

95 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

96 
	`li°_dñ
(&
ªq
->
li°
);

97 
	`‰ì_ªque°
(
ªq
);

101 i‡(
bbt
->
nblock
 =
dev
->
Êash
->
nblk
)

102 
	`¥ötf
("\n");

104 
‰ì_ªq_out
:

105 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

106 
	`li°_dñ
(&
ªq
->
li°
);

107 
	`‰ì_ªque°
(
ªq
);

109  
rc
;

110 
	}
}

115 
	$Êagbyã_sˇn
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
bbt
)

117 
i
, 
rc
 = 0;

118 
bs
, 
ns
, 
bb
, 
ƒow
, 
j
;

119 
lun
, 
∂™e
, 
blk
, 
µa
, 
hód
;

120 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

121 
li°_hód
 
ªq_hód
;

122 
¥e_˚¡
, 
now_˚¡
;

125 
dev
->
c⁄fig
->
ecc_mode
 = 
ECCMODE_DISABLE
;

126 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

127 
	`as£π
(
dev
->
c⁄fig
->
£˘‹_size_shi·
 == 12);

128 
	`ˇlcuœã_ödúe˘_c⁄fig
(
dev
);

129 
dev
->
Êash
->
oob_size
 = ((dev->Êash->
ítúe_∑ge_size
 + dev->
c⁄fig
->
fuŒ_£˘‹_size
 - 1) /

130 
dev
->
c⁄fig
->
fuŒ_£˘‹_size
Ë* dev->c⁄fig->fuŒ_£˘‹_sizê- dev->
Êash
->
∑ge_size
;

131 
dev
->
Êash
->
ítúe_∑ge_size
 = dev->Êash->
∑ge_size
 + dev->Êash->
oob_size
;

134 i‡(
	`ª_öô_devi˚
(
dev
)) {

135 
	`¥ötf
("%s(): Re-öô-devi˚ faûed\n", 
__func__
);

136  
ERR
;

140 
hód
 = 
INDEP_HEAD
;

141 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

142 
hód
 |(1 << 
SH_READ_PLANE_SHIFT
);

144 
ƒow
 = 0;

145 
i
 = 0; 
dev
->
Êash
->
Á˘‹y_ivb
[i].
row
 != -1; i++)

146 
ƒow
++;

148 
	`INIT_LIST_HEAD
(&
ªq_hód
);

150 i‡(
bbt
->
nblock
 =
dev
->
Êash
->
nblk
) {

151 
¥e_˚¡
 = 
now_˚¡
 = 0;

152 
	`¥öt
("ALL block†Êagbyã sˇn...%%%02d", 
now_˚¡
);

155 
	`as£π
(
bbt
->
nblock
 != 0);

156 
blk
 = 0; blk < 
bbt
->
nblock
 / 
dev
->
c⁄fig
->
≈œ√
; blk++) {

157 
i
 = 0; 
dev
->
Êash
->
Á˘‹y_ivb
[i].
row
 != -1; i++) {

158 
µa
 = 
blk
 * 
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
 + dev->Êash->
Á˘‹y_ivb
[
i
].
row
;

161 
bs
 = 
dev
->
Êash
->
Á˘‹y_ivb
[
i
].
lo_cﬁ
 / dev->
c⁄fig
->
fuŒ_£˘‹_size
;

162 
ns
 = (
dev
->
Êash
->
Á˘‹y_ivb
[
i
].
hi_cﬁ
 + dev->
c⁄fig
->
fuŒ_£˘‹_size
Ë/ dev->c⁄fig->fuŒ_£˘‹_sizê- 
bs
;

163 
	`as£π
(
ns
 <= 8);

164 
bb
 = 
dev
->
Êash
->
Á˘‹y_ivb
[
i
].
lo_cﬁ
 % dev->
c⁄fig
->
fuŒ_£˘‹_size
;

170 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

171 i‡(
dev
->
èrgëlun
[
lun
].
blk_hﬁe_cou¡
 && 
blk
*dev->
c⁄fig
->
≈œ√
 >dev->èrgëlun[lun].
blk_hﬁe_begö
) {

172 
	`£t_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]);

176 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

177 i‡(
NULL
 =
chunk_hód_ªq
) {

178 
rc
 = 
ALLOCMEM_FAILED
;

179 
‰ì_ªq_out
;

181 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

183 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

184 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

185 i‡(
NULL
 =
ªq
) {

186 
rc
 = 
ALLOCMEM_FAILED
;

187 
‰ì_ªq_out
;

189 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

192 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
, 
hód
, 
bs
, 0);

193 i‡(
NULL
 =
ªq
) {

194 
rc
 = 
ALLOCMEM_FAILED
;

195 
‰ì_ªq_out
;

197 
ªq
->
rw_ítúe_buf„r
 = 1;

198 
ªq
->
n£˘‹
 = 
ns
;

199 
ªq
->
d©a
 = 
	`mÆloc
(
ns
 * 
dev
->
c⁄fig
->
fuŒ_£˘‹_size
);

200 i‡(
NULL
 =
ªq
->
d©a
) {

201 
rc
 = 
ALLOCMEM_FAILED
;

202 
‰ì_ªq_out
;

204 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

206 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

207 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 
bs
, 0);

208 i‡(
NULL
 =
ªq
) {

209 
rc
 = 
ALLOCMEM_FAILED
;

210 
‰ì_ªq_out
;

212 
ªq
->
rw_ítúe_buf„r
 = 1;

213 
ªq
->
n£˘‹
 = 
ns
;

214 
ªq
->
d©a
 = 
	`mÆloc
(
ns
 * 
dev
->
c⁄fig
->
fuŒ_£˘‹_size
);

215 i‡(
NULL
 =
ªq
->
d©a
) {

216 
rc
 = 
ALLOCMEM_FAILED
;

217 
‰ì_ªq_out
;

219 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

224 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

225 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

226 
‰ì_ªq_out
;

227 
	`upd©e_cmdqueue
(
dev
, 
ªq
->
lun
);

233 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

234 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

235 
‰ì_ªq_out
;

239 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

240 i‡(
ªq
->
›code
 =
sh_¥îód_cmd
) {

241 i‡(
	`check_ªq_°©us_sûít
(
ªq
))

242 
	`£t_bô
(
ªq
->
lun
, 
bbt
->
sb_bbt
[
blk
]);

250 
j
 = 0; j < 
dev
->
Êash
->
Á˘‹y_ivb
[
i
].
hi_cﬁ
 - dev->Êash->Á˘‹y_ivb[i].
lo_cﬁ
 + 1; j++) {

252 i‡(0x00 !
ªq
->
d©a
[
j
 + 
bb
]) {

253 
	`£t_bô
(
ªq
->
lun
, 
bbt
->
sb_bbt
[
blk
]);

260 i‡(
bbt
->
nblock
 =
dev
->
Êash
->
nblk
) {

261 
now_˚¡
 = 100 * ((
blk
 + 1Ë* 
ƒow
 + 
i
Ë/ ((
dev
->
Êash
->
nblk
 / dev->
c⁄fig
->
≈œ√
) *Çrow);

263 i‡(
now_˚¡
 > 
¥e_˚¡
) {

264 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

265 
¥e_˚¡
 = 
now_˚¡
;

270 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

271 
	`li°_dñ
(&
ªq
->
li°
);

272 
	`‰ì_ªque°
(
ªq
);

277 i‡(
bbt
->
nblock
 =
dev
->
Êash
->
nblk
)

278 
	`¥ötf
("\n");

280 
‰ì_ªq_out
:

281 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

282 
	`li°_dñ
(&
ªq
->
li°
);

283 
	`‰ì_ªque°
(
ªq
);

285 
dev
->
Êash
->
oob_size
 = dev->
Êash_bakup
->oob_size;

286 
dev
->
Êash
->
ítúe_∑ge_size
 = dev->
Êash_bakup
->entire_page_size;

287  
rc
;

288 
	}
}

290 
	$hum™_bbt_öfo
(*
bbtfûe
)

292 
fd
;

293 
°©
 stat;

294 
sh™n⁄_bbt
 *
bbt
;

295 
lun
, 
blk
;

297 i‡((
fd
 = 
	`›í
(
bbtfûe
, 
O_RDONLY
)) < 0) {

298 
	`≥º‹
("Open bbt file failed:");

302 i‡(
	`f°©
(
fd
, &
°©
)) {

303 
	`≥º‹
("Fstat bbt file failed:");

306 
	`as£π
(
°©
.
°_size
 != 0);

309 i‡((
bbt
 = 
	`mm≠
(0, 
°©
.
°_size
, 
PROT_READ
, 
MAP_SHARED
, 
fd
, 0)Ë=
NULL
) {

310 
	`≥º‹
("Mmap bbt file failed:");

311 
	`˛o£
(
fd
);

315 i‡(
	`°rcmp
("sh™n⁄-bbt", 
bbt
->
«me
)) {

316 
	`¥ötf
("Invalid bbtfile\n");

317 
	`munm≠
(
bbt
, 
°©
.
°_size
);

318 
	`˛o£
(
fd
);

322 
	`¥ötf
("nch™√l=%d\n", 
bbt
->
nch™√l
);

323 
	`¥ötf
("¡hªad=%d\n", 
bbt
->
¡hªad
);

324 
	`¥ötf
("∆un=%d\n", 
bbt
->
∆un
);

325 
	`¥ötf
("≈œ√=%d\n", 
bbt
->
≈œ√
);

326 
	`¥ötf
("nblock=%d\n", 
bbt
->
nblock
);

327 
	`¥ötf
("≈age=%d\n", 
bbt
->
≈age
);

328 
	`¥ötf
("size=%d\n", 
bbt
->
size
);

329 
	`as£π
(
bbt
->
size
 =
°©
.
°_size
);

331 
lun
 = 0;Üu¿< 
bbt
->
nch™√l
 * bbt->
¡hªad
 *bbt->
∆un
;Üun++) {

332 
	`¥ötf
("Lun-%3d:", 
lun
);

333 
blk
 = 0; blk < 
bbt
->
nblock
/bbt->
≈œ√
; blk++) {

334 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

335 
	`¥ötf
(" %d", 
blk
);

337 
	`¥ötf
("\n");

340 
	`munm≠
(
bbt
, 
°©
.
°_size
);

341 
	`˛o£
(
fd
);

342 
	}
}

347 
	$sh™n⁄_bbt_›s_ußge
()

349 
	`¥ötf
("Description:\n");

350 
	`¥ötf
("\tScan flashÅo get bad blockÅable (bbt)\n\n");

352 
	`¥ötf
("Usage:\n");

353 
	`¥ötf
("\tbbt bbtfile [option]\n\n");

355 
	`¥ötf
("Option:\n");

356 
	`¥ötf
("\t-e, --erase\n"

358 
	`¥ötf
("\t-f, --flagbyte\n"

360 
	`¥ötf
("\t-g, --singleplane\n"

362 
	`¥ötf
("\t-h, --help\n"

364 
	}
}

366 
	$sh™n⁄_bbt_›s
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

368 
›ti⁄
 
l⁄g›ts
 [] = {

369 {"îa£", 
no_¨gumít
, 
NULL
, 'e'},

370 {"Êagbyã", 
no_¨gumít
, 
NULL
, 'f'},

371 {"sögÀ∂™e", 
no_¨gumít
, 
NULL
, 'g'},

372 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

375 
›t
;

376 
rc
 = 
ERR
;

377 
sh™n⁄_bbt
 *
bbt
;

378 
fd
, 
bbt_size
;

379 
îa£
, 
Êagbyã
, 
sögÀ∂™e
;

381 
îa£
 = 0;

382 
Êagbyã
 = 0;

383 
sögÀ∂™e
 = 0;

385 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":efgh", 
l⁄g›ts
, 
NULL
)) != -1) {

386 
›t
) {

388 
îa£
 = 1;

391 
Êagbyã
 = 1;

394 
sögÀ∂™e
 = 1;

397 
	`sh™n⁄_bbt_›s_ußge
();

400 
	`sh™n⁄_bbt_›s_ußge
();

401  
ERR
;

405 i‡((
¨gc
 - 
›töd
) != 1) {

406 
	`sh™n⁄_bbt_›s_ußge
();

407  
ERR
;

411 i‡((
fd
 = 
	`›í
(
¨gv
[
›töd
], 
O_CREAT
|
O_TRUNC
|
O_RDWR
, 0666)) < 0) {

412 
	`≥º‹
("Create bbt file");

413  
ERR
;

417 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = 12;

418 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = 1;

419 
dev
->
c⁄fig
->
ecc_mode
 = 1;

420 
dev
->
c⁄fig
->
øid_mode
 = 0;

421 i‡(
sögÀ∂™e
)

422 
dev
->
c⁄fig
->
≈œ√
 = 1;

424 i‡(
	`ª_öô_devi˚
(
dev
)) {

425 
	`˛o£
(
fd
);

426 
	`¥ötf
("Re-init-device failed\n");

427  
ERR
;

431 
bbt_size
 = (*
bbt
Ë+ (
dev
->
Êash
->
nblk
 / dev->
c⁄fig
->
≈œ√
Ë* 
MAX_LUN_NBYTE
;

432 
bbt
 = 
	`zmÆloc
(
bbt_size
);

433 i‡(
NULL
 =
bbt
)

434  
ALLOCMEM_FAILED
;

435 
	`•rötf
(
bbt
->
«me
, "shannon-bbt");

436 
bbt
->
nch™√l
 = 
dev
->
c⁄fig
->nchannel;

437 
bbt
->
¡hªad
 = 
dev
->
c⁄fig
->nthread;

438 
bbt
->
∆un
 = 
dev
->
c⁄fig
->nlun;

439 
bbt
->
≈œ√
 = 
dev
->
c⁄fig
->nplane;

440 
bbt
->
nblock
 = 
dev
->
Êash
->
nblk
;

441 
bbt
->
≈age
 = 
dev
->
Êash
->npage;

442 
bbt
->
size
 = 
bbt_size
;

445 i‡(!
îa£
 && !
Êagbyã
) {

446 
	`¥ötf
("Please select scan way: -e(--erase) or -f(--flagbyte)\n");

447 
out
;

450 i‡(
îa£
) {

451 i‡(
	`îa£_sˇn
(
dev
, 
bbt
)) {

452 
	`¥ötf
("Erase scan failed\n");

453 
out
;

457 i‡(
Êagbyã
) {

458 i‡(
	`Êagbyã_sˇn
(
dev
, 
bbt
)) {

459 
	`¥ötf
("Flagbyte scan failed\n");

460 
out
;

465 i‡(
	`wrôe
(
fd
, 
bbt
, 
bbt_size
) != bbt_size) {

466 
	`≥º‹
("Write bbt file failed\n");

467 
out
;

470 
rc
 = 0;

471 
out
:

472 
	`‰ì
(
bbt
);

473 
	`˛o£
(
fd
);

474  
rc
;

475 
	}
}

477 
	$check_bbt
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
bbt
)

479 i‡(
	`°rcmp
("sh™n⁄-bbt", 
bbt
->
«me
))

480  
ERR
;

481 i‡(
dev
->
c⁄fig
->
nch™√l
 !
bbt
->nchannel)

482  
ERR
;

483 i‡(
dev
->
c⁄fig
->
¡hªad
 !
bbt
->nthread)

484  
ERR
;

485 i‡(
dev
->
c⁄fig
->
∆un
 !
bbt
->nlun)

486  
ERR
;

487 i‡(
dev
->
c⁄fig
->
≈œ√
 !
bbt
->nplane)

488  
ERR
;

489 i‡(
dev
->
Êash
->
nblk
 !
bbt
->
nblock
)

490  
ERR
;

491 i‡(
dev
->
Êash
->
≈age
 !
bbt
->npage)

492  
ERR
;

494 
	}
}

497 
	$hum™_lunöfo_öfo
(*
lunöfo_fûe
)

499 
fd
;

500 
°©
 stat;

501 
sh™n⁄_lunöfo
 *
lunöfo
;

502 
blk
;

504 i‡((
fd
 = 
	`›í
(
lunöfo_fûe
, 
O_RDONLY
)) < 0) {

505 
	`≥º‹
("OpenÜuninfo file failed:");

509 i‡(
	`f°©
(
fd
, &
°©
)) {

510 
	`≥º‹
("FstatÜuninfo file failed:");

511 
	`˛o£
(
fd
);

514 
	`as£π
(
°©
.
°_size
 != 0);

517 i‡((
lunöfo
 = 
	`mm≠
(0, 
°©
.
°_size
, 
PROT_READ
, 
MAP_SHARED
, 
fd
, 0)Ë=
NULL
) {

518 
	`≥º‹
("MmapÜuninfo file failed:");

519 
	`˛o£
(
fd
);

523 i‡(
	`°rcmp
("sh™n⁄-lunöfo", 
lunöfo
->
«me
)) {

524 
	`¥ötf
("InvalidÜuninfo file\n");

525 
	`munm≠
(
lunöfo
, 
°©
.
°_size
);

526 
	`˛o£
(
fd
);

530 
	`¥ötf
("nch™√l=%d\n", 
lunöfo
->
nch™√l
);

531 
	`¥ötf
("¡hªad=%d\n", 
lunöfo
->
¡hªad
);

532 
	`¥ötf
("∆un=%d\n", 
lunöfo
->
∆un
);

533 
	`¥ötf
("≈œ√=%d\n", 
lunöfo
->
≈œ√
);

534 
	`¥ötf
("nblock=%d\n", 
lunöfo
->
nblock
);

535 
	`¥ötf
("≈age=%d\n", 
lunöfo
->
≈age
);

536 
	`¥ötf
("size=%d\n", 
lunöfo
->
size
);

537 
	`as£π
(
lunöfo
->
size
 =
°©
.
°_size
);

539 
blk
 = 0; blk < 
lunöfo
->
nblock
 /Üunöfo->
≈œ√
; blk++) {

540 
	`¥ötf
("su≥r-blk %4d: ", 
blk
);

541 
	`¥ötf
("luns=%2dÖ¨ôy_lun=%2d bbt=", 
lunöfo
->
sb_lunöfo
[
blk
].
luns
,Üunöfo->sb_lunöfo[blk].
∑rôy_lun
);

542 
	`¥_u8_¨øy_n›ªfix
(
lunöfo
->
sb_lunöfo
[
blk
].
sb_bbt
, 
MAX_LUN_NBYTE
, MAX_LUN_NBYTE);

545 
	`munm≠
(
lunöfo
, 
°©
.
°_size
);

546 
	`˛o£
(
fd
);

547 
	}
}

549 
	$sh™n⁄_lunöfo_›s_ußge
()

551 
	`¥ötf
("Description:\n");

552 
	`¥ötf
("\tFakeÜuninfo file which incluesÇlun/ndatalun/parity/bbt_bitmap\n\n");

554 
	`¥ötf
("Usage:\n");

555 
	`¥ötf
("\tluninfoÜuninfo-file bbt-file [option]\n\n");

557 
	`¥ötf
("Option:\n");

558 
	`¥ötf
("\t-e, --bbt-seed=SEED\n"

560 
	`¥ötf
("\t-E, --parity-lun-seed=SEED\n"

562 
	`¥ötf
("\t-h, --help\n"

564 
	}
}

566 
	$sh™n⁄_lunöfo_›s
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

568 
›ti⁄
 
l⁄g›ts
 [] = {

569 {"bbt-£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

570 {"∑rôy-lun-£ed", 
ªquúed_¨gumít
, 
NULL
, 'E'},

573 
›t
;

574 
i
, 
rc
 = 
ERR
;

575 
fd
, 
bbt_fd
;

576 
lun
, 
blk
;

577 
bbt_£ed
, 
∑rôy_lun_£ed
;

578 
sh™n⁄_bbt
 *
bbt
;

579 
°©
 stat;

580 
lunöfo_size
;

581 
sh™n⁄_lunöfo
 *
lunöfo
;

583 
bbt_£ed
 = 
∑rôy_lun_£ed
 = 0;

585 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":e:E:h", 
l⁄g›ts
, 
NULL
)) != -1) {

586 
›t
) {

588 
bbt_£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

591 
∑rôy_lun_£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

594 
	`sh™n⁄_lunöfo_›s_ußge
();

597 
	`sh™n⁄_lunöfo_›s_ußge
();

598  
ERR
;

602 i‡((
¨gc
 - 
›töd
) != 2) {

603 
	`sh™n⁄_lunöfo_›s_ußge
();

604  
ERR
;

608 i‡((
bbt_fd
 = 
	`›í
(
¨gv
[
›töd
 + 1], 
O_RDONLY
)) < 0) {

609 
	`≥º‹
("Open bbt file failed:");

610  
ERR
;

613 i‡(
	`f°©
(
bbt_fd
, &
°©
)) {

614 
	`≥º‹
("Fstat bbt file failed:");

615 
	`˛o£
(
bbt_fd
);

616  
ERR
;

619 
bbt
 = 
	`mÆloc
(
°©
.
°_size
);

620 i‡(
NULL
 =
bbt
) {

621 
	`˛o£
(
bbt_fd
);

622 
	`¥ötf
("Alloc bbt memory failed");

623  
ERR
;

626 i‡(
	`ªad
(
bbt_fd
, 
bbt
, 
°©
.
°_size
) != stat.st_size) {

627 
	`¥ötf
("Read bbt file failed\n");

628 
˛o£_bbt
;

630 
	`as£π
(
bbt
->
size
 =
°©
.
°_size
);

632 i‡(
	`check_bbt
(
dev
, 
bbt
)) {

633 
	`¥ötf
("The config of bbt doesn`t matchÖresent hardware config,Ölease use command 'bbt'Åo generateÖresent bbtfile\n");

634 
˛o£_bbt
;

638 i‡((
fd
 = 
	`›í
(
¨gv
[
›töd
], 
O_CREAT
|
O_TRUNC
|
O_RDWR
, 0666)) < 0) {

639 
	`≥º‹
("Create sb_luninfo_file failed:");

640 
˛o£_bbt
;

643 
lunöfo_size
 = (*
lunöfo
Ë+ (
dev
->
Êash
->
nblk
 / dev->
c⁄fig
->
≈œ√
Ë* (
sh™n⁄_sb_lunöfo
);

644 
lunöfo
 = 
	`zmÆloc
(
lunöfo_size
);

645 i‡(
NULL
 =
lunöfo
)

646 
˛o£_fd
;

647 
	`•rötf
(
lunöfo
->
«me
, "shannon-luninfo");

648 
lunöfo
->
nch™√l
 = 
dev
->
c⁄fig
->nchannel;

649 
lunöfo
->
¡hªad
 = 
dev
->
c⁄fig
->nthread;

650 
lunöfo
->
∆un
 = 
dev
->
c⁄fig
->nlun;

651 
lunöfo
->
≈œ√
 = 
dev
->
c⁄fig
->nplane;

652 
lunöfo
->
nblock
 = 
dev
->
Êash
->
nblk
;

653 
lunöfo
->
≈age
 = 
dev
->
Êash
->npage;

654 
lunöfo
->
size
 = 
lunöfo_size
;

657 i‡(
bbt_£ed
) {

658 
	`§™d
(
bbt_£ed
);

660 
	`f‹_dev_óch_block
(
dev
, 
blk
) {

661 
__u8
 
p
[
MAX_LUN_NBYTE
];

663 
	`∑d_ønd
(
p
, 
MAX_LUN_NBYTE
);

665 
i
 = 0; i < 
MAX_LUN_NBYTE
; i++)

666 ((
__u8
 *)
bbt
->
sb_bbt
[
blk
])[
i
] |
p
[i];

671 
	`§™d
(
∑rôy_lun_£ed
);

673 
	`f‹_dev_óch_block
(
dev
, 
blk
) {

674 
off
;

676 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

677 i‡(!
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

678 
lunöfo
->
sb_lunöfo
[
blk
].
luns
++;

680 
	`£t_bô
(
lun
, 
lunöfo
->
sb_lunöfo
[
blk
].
sb_bbt
);

683 i‡(
lunöfo
->
sb_lunöfo
[
blk
].
luns
 > 1) {

684 
lunöfo
->
sb_lunöfo
[
blk
].
nd©Æun
 =Üunöfo->sb_lunöfo[blk].
luns
 - 1;

686 
lunöfo
->
sb_lunöfo
[
blk
].
luns
 = 0;

691 i‡(
∑rôy_lun_£ed
)

692 
off
 = 
	`ønd
(Ë% 
lunöfo
->
sb_lunöfo
[
blk
].
luns
;

694 
off
 = 
lunöfo
->
sb_lunöfo
[
blk
].
luns
 - 1;

696 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

697 i‡(!
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

698 i‡(
off
-- == 0)

701 
lunöfo
->
sb_lunöfo
[
blk
].
∑rôy_lun
 = 
lun
;

704 i‡(
	`wrôe
(
fd
, 
lunöfo
, 
lunöfo_size
) !=Üuninfo_size) {

705 
	`≥º‹
("WriteÜuninfo file failed:");

706 
‰ì_lunöfo
;

709 
rc
 = 0;

710 
‰ì_lunöfo
:

711 
	`‰ì
(
lunöfo
);

712 
˛o£_fd
:

713 
	`˛o£
(
fd
);

714 
˛o£_bbt
:

715 
	`‰ì
(
bbt
);

716 
	`˛o£
(
bbt_fd
);

717  
rc
;

718 
	}
}

720 
	$check_lunöfo
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_lunöfo
 *
lunöfo
)

722 i‡(
	`°rcmp
("sh™n⁄-lunöfo", 
lunöfo
->
«me
))

723  
ERR
;

724 i‡(
dev
->
c⁄fig
->
nch™√l
 !
lunöfo
->nchannel)

725  
ERR
;

726 i‡(
dev
->
c⁄fig
->
¡hªad
 !
lunöfo
->nthread)

727  
ERR
;

728 i‡(
dev
->
c⁄fig
->
∆un
 !
lunöfo
->nlun)

729  
ERR
;

730 i‡(
dev
->
c⁄fig
->
≈œ√
 !
lunöfo
->nplane)

731  
ERR
;

732 i‡(
dev
->
Êash
->
nblk
 !
lunöfo
->
nblock
)

733  
ERR
;

734 i‡(
dev
->
Êash
->
≈age
 !
lunöfo
->npage)

735  
ERR
;

737 
	}
}

	@both.h

1 #i‚de‡
__BOTH_H__


2 
	#__BOTH_H__


	)

7 
	#SHANNONC_IOC_MAGIC
 'S'

	)

8 
	#SHANNONC_IOC_MAXNR
 16

	)

10 
	#SHANNONC_IOC_GM
 
	`_IO
(
SHANNONC_IOC_MAGIC
, 1Ë

	)

11 
	#SHANNONC_IOC_FM
 
	`_IO
(
SHANNONC_IOC_MAGIC
, 2Ë

	)

12 
	#SHANNONC_IOC_RM
 
	`_IO
(
SHANNONC_IOC_MAGIC
, 3Ë

	)

13 
	#SHANNONC_IOC_WM
 
	`_IO
(
SHANNONC_IOC_MAGIC
, 4Ë

	)

14 
	#SHANNONC_IOC_GF
 
	`_IO
(
SHANNONC_IOC_MAGIC
, 5Ë

	)

15 
	#SHANNONC_IOC_DK
 
	`_IO
(
SHANNONC_IOC_MAGIC
, 6Ë

	)

16 
	#SHANNONC_IOC_DI
 
	`_IO
(
SHANNONC_IOC_MAGIC
, 7Ë

	)

17 
	#SHANNONC_IOC_GB
 
	`_IO
(
SHANNONC_IOC_MAGIC
, 8Ë

	)

18 
	#SHANNONC_IOC_GD
 
	`_IO
(
SHANNONC_IOC_MAGIC
, 9Ë

	)

20 
	#DIRECT_IO_START
 0x10

	)

21 
	#DIRECT_IO_POLL
 0x11

	)

22 
	#DIRECT_IO_STOP
 0x12

	)

26 
	eHW_sy§eg
 {

27 
	mHW_sys_gíîÆ_öfo
,

28 
	mHW_sys_øid_öfo
,

29 
	mHW_sys_ecc_öfo
,

30 
	mHW_sys_wrbuf_öfo
,

33 
	eHW_cfgªg
 {

34 
	mHW_cfg_Êash
,

35 
	mHW_cfg_£˘o
,

36 
	mHW_cfg_chunk
,

37 
	mHW_cfg_øid
,

38 
	mHW_cfg_ecc
,

39 
	mHW_cfg_misc
,

40 
	mHW_cfg_£ed
,

41 
	mHW_cfg_mask
,

44 
	eHW_luƒeg
 {

45 
	mHW_cmdq_±e_lo
,

46 
	mHW_cmdq_±e_hi
,

47 
	mHW_cmpq_±e_lo
,

48 
	mHW_cmpq_±e_hi
,

49 
	mHW_cmdq_hód
,

50 
	mHW_cmpq_hód
,

51 
	mHW_cmdq_èû
,

52 
	mHW_c⁄åﬁ_°aus
,

55 
	shw_sysöfo
 {

57 
__u8
 
	mhw_vîsi⁄
;

58 
	#CE_NLUN_MASK
 0xF0

	)

59 
	#CE_NLUN_SHIFT
 4

	)

60 
__u8
 
	mhw_if_suµ‹t
;

61 
__u8
 
	mhw_nch™√l
;

62 
__u8
 
	mhw_¡hªad_∆un
;

65 
__u8
 
	mhw_øid_suµ‹t
;

66 
__u8
 
	mhw_ƒaid_hód
;

67 
__u8
 
	mhw_dbuf_øid_suµ‹t
;

68 
__u8
 
	mhw_misc_1
;

71 
__u8
 
	mhw_ecc_mode
;

72 
__u8
 
	mhw_ecc_tmode
;

73 
__u8
 
	mhw_dw2_rsv
[2];

76 
__u8
 
	mhw_wrbuf_suµ‹t
;

77 
__u8
 
	mhw_nwrbuf
;

78 
__u8
 
	mhw_dw3_rsv
[2];

81 
__u32
 
	mdw_rsv
[3];

84 
__u32
 
	mfúmw¨e_èg
;

87 
	shw_c⁄fig
 {

89 
__u8
 
	mhw_ifmode_™d_timög
;

90 
__u8
 
	mhw_∑ge_n£˘‹
;

91 
__u8
 
	mhw_blk_≈age
;

92 
__u8
 
	mhw_ª£t
;

95 
__u8
 
	mhw_£˘‹_nbyã
;

96 
__u8
 
	mhw_£˘‹_ncodew‹d
;

97 
__u16
 
	mhw_fuŒ_£˘‹_nbyã
;

100 
__u8
 
	mhw_∂™e_mask
;

101 
__u8
 
	mhw_lun_mask
;

102 
__u16
 
	mhw_fuŒ_∑ge_nbyã
;

105 
__u8
 
	mhw_øid_íabÀ
;

106 
__u8
 
	mhw_chunk_n£˘‹
;

107 
__u8
 
	mhw_chunk_nbyã
;

108 
__u8
 
	mhw_dw3_rsv
;

111 
__u8
 
	mhw_ecc_mode
;

112 
__u8
 
	mhw_ecc_powî
;

113 
__u16
 
	mhw_codew‹d_nbyã
;

116 
__u8
 
	mhw_öt_dñay
;

117 
__u8
 
	mhw_dw5_rsv
;

118 
__u8
 
	mhw_powî_budgë
;

119 
__u8
 
	mhw_£ed_ö3432
;

122 
__u32
 
	mhw_dw6_§v
;

125 
__u8
 
	mu£r_mask
;

126 
__u8
 
	mthrŸée_limô
;

127 
__u8
 
	mmax_ecc_limô
;

128 
__u8
 
	mdam_ªad_limô
;

132 
	uÊash_id
 {

134 
__u8
 
	mvíd‹_id
;

135 
__u8
 
	mdevi˚_id
;

136 
__u8
 
	m„©uª_id
;

137 
__u8
 
	mŸhîs
[5];

139 
__u8
 
	mbyãid
[8];

140 
__u64
 
	ml⁄gid
;

143 
	su§_Êash
 {

144 
	m«me
[32];

145 
Êash_id
 
	mid
;

146 
	mvíd‹_id
;

147 
	mdevi˚_id
;

148 
	m„©uª_id
;

150 
	mnblk
;

151 
	m≈age
;

152 
	m∑ge_size_shi·
;

153 
	m∑ge_size
;

154 
	moob_size
;

155 
	mítúe_∑ge_size
;

157 
	mlun_mask
;

158 
	m≈œ√
;

159 
	m∂™e_mask
;

161 
	mifmode
;

163 
	s__Á˘‹y_ivb
 {

164 
	mrow
;

165 
	mlo_cﬁ
;

166 
	mhi_cﬁ
;

167 } 
	mÁ˘‹y_ivb
[8];

169 
	s__drv£âög
 {

170 
__u8
 
	md©a
[16];

171 
__u8
 
	md©™um
;

172 } 
	mdrv£âög
;

174 
	msuc˚ss_°©us
;

175 
	msuc˚ss_mask
;

178 
	su§_c⁄fig
 {

180 
	mnch™√l
;

181 
	m¡hªad
;

182 
	m∆un
;

184 
	m£˘‹_size_shi·
;

185 
	m£˘‹_ncodew‹d
;

187 
	m›timÆ_ncodew‹d
;

188 
	m›timÆ_codew‹d_size
;

189 
	m›timÆ_∑ge_n£˘‹
;

191 
	mu£r_£˘‹_size_shi·
;

193 
	m≈œ√
;

194 
	m≈œ√_u£d
;

196 
	mlun_mask
;

197 
u32
 
	mdrvmode
;

198 
	mifmode
;

199 
	masync_cy˛es
;

200 
	mecc_mode
;

201 
	møid_mode
;

202 
	movî¥ovisi⁄_øã
;

204 
	mvíd‹_id
;

205 
u32
 
	mh¨dw¨e_vîsi⁄
;

206 
u32
 
	mso·w¨e_vîsi⁄
;

209 
	mthªads
;

210 
	mluns
;

211 
	m£˘‹_size
;

212 
	mcodew‹d_size
;

213 
	mfuŒ_£˘‹_size
;

214 
	m∑ge_n£˘‹
;

215 
	mchunk_n£˘‹
;

217 
	mnd©a
;

218 
	mnmëa
;

219 
	mchunk_nd©a
;

220 
	mchunk_nmëa
;

224 
	sthªad_mem
 {

225 *
	mkî√l_addr
;

226 
dma_addr_t
 
	mdma_addr
;

229 
	#TYPE_FLASH
 0x111

	)

230 
	#TYPE_CONFIG
 0x112

	)

232 
	ssh™n⁄_io˘l
 {

234 
	msize
;

235 
	mty≥
;

236 
	mb¨
;

238 *
	mkî√l_addr
;

239 
dma_addr_t
 
	mdma_addr
;

240 *
	mu£r_addr
;

243 
	sdúe˘_io
 {

244 
	mty≥
;

245 
	m›code
;

246 
	mhód
;

247 
	mnblk
;

248 
	m≈œ√
;

249 
	m≈age
;

250 
	mn£˘‹
;

251 
	m£˘‹_size
;

252 
	mphylun_bôm≠
[8];

253 
	md⁄e_phylun_bôm≠
[8];

254 
	md⁄e_µa
;

255 
timevÆ
 
	mtv
;

258 
	mcmdÀn
;

259 
	mnˇchîód
;

260 
	mlimôµa
;

264 
	esh™n⁄_cmd
 {

265 
	msh_¥îód_cmd
 = 0x00,

266 
	msh_ˇchîód_cmd
 = 0x01,

267 
	msh_œ°_ˇchîód_cmd
 = 0x02,

268 
	msh_îa£_cmd
 = 0x10,

269 
	msh_wrôe_cmd
 = 0x20,

270 
	msh_bufwrôe_cmd
 = 0x30,

271 
	msh_bu‰ód_cmd
 = 0x32,

272 
	msh_ªadid_cmd
 = 0x40,

273 
	msh_wrôîeg_cmd
 = 0x50,

274 
	msh_øidwrôe_cmd
 = 0x80,

275 
	msh_øidöô_cmd
 = 0x90,

276 
	msh_ª£t_cmd
 = 0xF0,

277 
	msh_ªad_cmd
 = 0xF8,

278 
	msh_ˇchîód_adv_cmd
 = 0x08,

281 
	ssh_ª£t
 {

282 
__u8
 
	m›code
;

283 
__u8
 
	mrsv
[6];

284 
__u8
 
	mlun
;

287 
	ssh_ªadid
 {

288 
__u8
 
	m›code
;

289 
__u8
 
	mrsv
[3];

290 
__u8
 
	maddr
;

291 
__u8
 
	mnbyã
;

292 
__u8
 
	mcmd
;

293 
__u8
 
	mlun
;

296 
	ssh_îa£
 {

297 
__u8
 
	m›code
;

298 
__u8
 
	mrsv_1
;

299 
__u8
 
	mrsv_2
;

300 
	#SH_ERASE_PLANE_SHIFT
 4

	)

301 
__u8
 
	mhód
;

303 
__u32
 
	mµa
;

306 
	ssh_wrôe
 {

307 
__u8
 
	m›code
;

308 
__u8
 
	mrsv_1
;

309 
__u8
 
	mrsv_2
;

310 
	#SH_WRITE_PLANE_SHIFT
 4

	)

311 
	#SH_WRITE_DUMMY_SHIFT
 5

	)

312 
__u8
 
	mhód
;

314 
__u32
 
	mµa
;

316 
	ssh_wrôe_£˘‹
 {

317 
__u64
 
	m±e
;

318 
__u64
 
	mmëad©a
;

319 } 
	m£˘‹
[0];

322 
	ssh_¥îód
 {

323 
__u8
 
	m›code
;

324 
__u8
 
	mrsv_1
;

325 
__u8
 
	mrsv_2
;

326 
	#SH_READ_PLANE_SHIFT
 4

	)

327 
__u8
 
	mhód
;

329 
__u32
 
	mµa
;

332 
	ssh_ˇchîód
 {

333 
__u8
 
	m›code
;

334 
__u8
 
	mn£˘‹
;

335 
__u8
 
	mb£˘‹
;

336 
	#SH_READ_PLANE_SHIFT
 4

	)

337 
__u8
 
	mhód
;

339 
__u32
 
	mµa
;

340 
__u64
 
	m±e
[0];

343 
	ssh_bufwrôe
 {

344 
__u8
 
	m›code
;

345 
__u8
 
	mlun
;

346 
__u8
 
	mb£˘‹
;

347 
__u8
 
	mhód
;

349 
__u32
 
	mµa
;

350 
__u64
 
	m±e
;

351 
__u64
 
	mmëad©a
;

354 
	ssh_øidöô
 {

355 
__u8
 
	m›code
;

356 
__u8
 
	mnd©Æun
;

357 
__u8
 
	mrsv
;

358 
__u8
 
	mhód
;

360 
__u32
 
	mµa
;

363 
	ssh_øidwrôe
 {

364 
__u8
 
	m›code
;

365 
__u8
 
	mrsv_1
;

366 
__u8
 
	mrsv_2
;

367 
	#SH_RAIDWRITE_PLANE_SHIFT
 4

	)

368 
	#SH_RAIDWRITE_DUMMY_SHIFT
 5

	)

369 
__u8
 
	mhód
;

371 
__u32
 
	mµa
;

374 
	ssh_wrôîeg
 {

375 
__u8
 
	m›code
;

376 
__u8
 
	mrsv
[3];

377 
__u8
 
	maddr
;

378 
__u8
 
	mnbyã
;

379 
__u8
 
	mcmd
;

380 
__u8
 
	m∑ddög
;

381 
__u8
 
	md©a
[0];

	@bufwrite.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

10 
	~<time.h
>

12 
	~"toﬁ.h
"

15 
	$dio
(
sh™n⁄_dev
 *
dev
, 
›code
, 
hód
, 
begö
, 
cou¡
)

17 **
¨gv
;

18 
i
, 
rc
, 
¨gc
 = 5;

20 
¨gv
 = 
	`mÆloc
((*¨gvË* 
¨gc
);

21 
	`as£π
 (
NULL
 !
¨gv
);

23 
i
 = 0; i < 
¨gc
; i++) {

24 
¨gv
[
i
] = 
	`mÆloc
(64);

25 
	`as£π
(
NULL
 !
¨gv
[
i
]);

28 
	`as£π
(
HEAD0
 =
hód
 || 
HEAD1
 == head);

29 
	`as£π
(
sh_wrôe_cmd
 =
›code
 || 
sh_ªad_cmd
 == opcode);

31 
	`•rötf
(
¨gv
[0], "dio");

32 
	`•rötf
(
¨gv
[1], "%s", (
sh_wrôe_cmd
 =
›code
) ? "write" : "read");

33 
	`•rötf
(
¨gv
[2], "--hód=%d", 
hód
);

34 
	`•rötf
(
¨gv
[3], "--just-start=1982");

35 
	`•rötf
(
¨gv
[4], "--ßm∂e-block-z⁄e=%d,%d", 
begö
, 
cou¡
);

37 
i
 = 0; i < 
¨gc
; i++)

38 
	`¥ötf
("%†", 
¨gv
[
i
]);

39 
	`¥ötf
("\n");

41 
›töd
 = 1;

42 
rc
 = 
	`sh™n⁄_dio
(
dev
, 
¨gc
, 
¨gv
);

44 
i
 = 0; i < 
¨gc
; i++)

45 
	`‰ì
(
¨gv
[
i
]);

46 
	`‰ì
(
¨gv
);

48  
rc
;

49 
	}
}

51 
	$sh™n⁄_bufwrôe_ußge
()

53 
	`¥ötf
("Description:\n");

54 
	`¥ötf
("\tWrite singleÜunÖage\n\n");

56 
	`¥ötf
("Usage:\n");

57 
	`¥ötf
("\tbufwrite [option]Üun blockÖage\n\n");

59 
	`¥ötf
("Option:\n");

60 
	`¥ötf
("\t-e, --seed=SEED\n"

62 
	`¥ötf
("\t-p, --print\n"

64 
	`¥ötf
("\t-H, --head=HEAD\n"

66 
	`¥ötf
("\t-h, --help\n"

68 
	}
}

70 
	$sh™n⁄_bufwrôe
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

72 
›ti⁄
 
l⁄g›ts
 [] = {

73 {"£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

74 {"¥öt", 
no_¨gumít
, 
NULL
, 'p'},

75 {"hód", 
ªquúed_¨gumít
, 
NULL
, 'H'},

76 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

79 
›t
;

80 
£ed
, 
¥
, 
hód
;

81 
rc
 = 0;

82 
lun
, 
block
, 
∑ge
, 
£˘‹
;

83 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

84 
li°_hód
 
ªq_hód
;

87 
¥
 = 0;

88 
£ed
 = 
	`gë£ed
(0);

89 
hód
 = 
HEAD0
;

91 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":e:pH:h", 
l⁄g›ts
, 
NULL
)) != -1) {

92 
›t
) {

94 
£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

97 
¥
 = 1;

100 
hód
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

101 i‡(
HEAD0
 !
hód
 && 
HEAD1
 != head) {

102 
	`¥ötf
("Bufwrite head choices: 0 1\n");

103  
ERR
;

107 
	`sh™n⁄_bufwrôe_ußge
();

110 
	`sh™n⁄_bufwrôe_ußge
();

111  
ERR
;

115 i‡((
¨gc
 - 
›töd
) != 3) {

116 
	`sh™n⁄_bufwrôe_ußge
();

117  
ERR
;

120 
lun
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

121 
block
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

122 
∑ge
 = 
	`°πoul
(
¨gv
[
›töd
 + 2], 
NULL
, 10);

124 i‡(
lun
 > 
dev
->
c⁄fig
->
luns
 || 
block
 > dev->
Êash
->
nblk
 / dev->c⁄fig->
≈œ√
 || 
∑ge
 > dev->Êash->
≈age
) {

125 
	`¥ötf
("Overflowáddress\n");

126  
OVERFLOW_ADDR
;

130 i‡(!
dev
->
c⁄fig
->
øid_mode
) {

131 
	`¥ötf
("Bufwrite: RAID must beÉnabled\n");

132  
ERR
;

135 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidöô_cmd
, 
	`su≥rblock_∑rôylun
(dev, 
block
),

136 
block
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, 
	`su≥rblock_nd©Æun
(dev, block));

137 i‡(
NULL
 =
ªq
) {

138 
rc
 = 
ALLOCMEM_FAILED
;

139 
out
;

142 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
))) {

143 
	`‰ì_ªque°
(
ªq
);

144 
out
;

147 i‡((
rc
 = 
	`upd©e_pﬁl_cmdqueue
(
dev
, 
	`su≥rblock_∑rôylun
(dev, 
block
)))) {

148 
	`‰ì_ªque°
(
ªq
);

149 
out
;

153 
	`§™d
(
£ed
);

154 
	`INIT_LIST_HEAD
(&
ªq_hód
);

157 
£˘‹
 = 0; sector < 2; sector++) {

158 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_bufwrôe_cmd
, 
lun
,

160 
block
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 
£˘‹
, 1);

161 i‡(
NULL
 =
ªq
) {

162 
rc
 = 
ALLOCMEM_FAILED
;

163 
out
;

165 
	`∑d_ønd
(
ªq
->
d©a
, 
dev
->
c⁄fig
->
£˘‹_size
);

166 
	`∑d_ønd
(
ªq
->
mëad©a
, 
METADATA_SIZE
);

167 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

171 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

172 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

173 
‰ì_ªq_out
;

176 i‡((
rc
 = 
	`upd©e_pﬁl_bufcmdqueue
(
dev
, 
hód
)))

177 
‰ì_ªq_out
;

179 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

180 i‡((
rc
 = 
	`check_ªq_°©us
(
ªq
)))

181 
‰ì_ªq_out
;

185 i‡(
¥
) {

186 
	`¥ötf
("#metadata:");

187 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

188 i‡(0 =(
ªq
->
b£˘‹
 % 
dev
->
c⁄fig
->
∑ge_n£˘‹
) ||

189 0 =((
ªq
->
b£˘‹
 % 
dev
->
c⁄fig
->
∑ge_n£˘‹
) % 8))

190 
	`¥ötf
("\n");

192 
	`¥ötf
("%016lX ", 
ªq
->
mëad©a
[0]);

194 
	`¥ötf
("\n");

196 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

197 
	`¥ötf
("#£˘‹: %d\n", 
ªq
->
b£˘‹
);

198 
	`¥_u8_¨øy_n›ªfix
(
ªq
->
d©a
, 
dev
->
c⁄fig
->
£˘‹_size
, 32);

204 
‰ì_ªq_out
:

205 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

206 
	`li°_dñ
(&
ªq
->
li°
);

207 
	`‰ì_ªque°
(
ªq
);

209 
out
:

210 i‡(
rc
 !
FAILED_FLASH_STATUS
 &&Ñc != 0)

211 
	`¥ötf
("Bufwrite:Éncounter someÉrror\n");

212  
rc
;

213 
	}
}

	@dev-type.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/mm™.h
>

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

11 
	~<time.h
>

13 
	~"toﬁ.h
"

15 
subˇrd_size
 
	gsc_size
;

18 c⁄° 
	gdev_pkg_phylun_k7f
[][8+
PKG_ATTR
] = {

20 {0,1,4,5,8,9,12,13,
HBYTE
}, {2,3,6,7,10,11,14,15,HBYTE}, {64,65,68,69,72,73,76,77,
LBYTE
}, {66,67,70,71,74,75,78,79,LBYTE},

21 {0,1,4,5,8,9,12,13,
LBYTE
}, {2,3,6,7,10,11,14,15,LBYTE}, {64,65,68,69,72,73,76,77,
HBYTE
}, {66,67,70,71,74,75,78,79,HBYTE},

22 {128,129,132,133,136,137,140,141,
HBYTE
}, {130,131,134,135,138,139,142,143,HBYTE}, {192,193,196,197,200,201,204,205,
LBYTE
}, {194,195,198,199,202,203,206,207,LBYTE},

23 {128,129,132,133,136,137,140,141,
LBYTE
}, {130,131,134,135,138,139,142,143,LBYTE}, {192,193,196,197,200,201,204,205,
HBYTE
}, {194,195,198,199,202,203,206,207,HBYTE},

26 {82,83,86,87,90,91,94,95,
LBYTE
}, {80,81,84,85,88,89,92,93,LBYTE}, {18,19,22,23,26,27,30,31,
HBYTE
}, {16,17,20,21,24,25,28,29,HBYTE},

27 {82,83,86,87,90,91,94,95,
HBYTE
}, {80,81,84,85,88,89,92,93,HBYTE}, {18,19,22,23,26,27,30,31,
LBYTE
}, {16,17,20,21,24,25,28,29,LBYTE},

28 {210,211,214,215,218,219,222,223,
LBYTE
}, {208,209,212,213,216,217,220,221,LBYTE}, {146,147,150,151,154,155,158,159,
HBYTE
}, {144,145,148,149,152,153,156,157,HBYTE},

29 {210,211,214,215,218,219,222,223,
HBYTE
}, {208,209,212,213,216,217,220,221,HBYTE}, {146,147,150,151,154,155,158,159,
LBYTE
}, {144,145,148,149,152,153,156,157,LBYTE},

32 {224,225,228,229,232,233,236,237,
HBYTE
}, {226,227,230,231,234,235,238,239,HBYTE}, {160,161,164,165,168,169,172,173,
LBYTE
}, {162,163,166,167,170,171,174,175,LBYTE},

33 {224,225,228,229,232,233,236,237,
LBYTE
}, {226,227,230,231,234,235,238,239,LBYTE}, {160,161,164,165,168,169,172,173,
HBYTE
}, {162,163,166,167,170,171,174,175,HBYTE},

34 {32,33,36,37,40,41,44,45,
HBYTE
}, {34,35,38,39,42,43,46,47,HBYTE}, {96,97,100,101,104,105,108,109,
LBYTE
}, {98,99,102,103,106,107,110,111,LBYTE},

35 {32,33,36,37,40,41,44,45,
LBYTE
}, {34,35,38,39,42,43,46,47,LBYTE}, {96,97,100,101,104,105,108,109,
HBYTE
}, {98,99,102,103,106,107,110,111,HBYTE},

38 {178,179,182,183,186,187,190,191,
LBYTE
}, {176,177,180,181,184,185,188,189,LBYTE}, {242,243,246,247,250,251,254,255,
HBYTE
}, {240,241,244,245,248,249,252,253,HBYTE},

39 {178,179,182,183,186,187,190,191,
HBYTE
}, {176,177,180,181,184,185,188,189,HBYTE}, {242,243,246,247,250,251,254,255,
LBYTE
}, {240,241,244,245,248,249,252,253,LBYTE},

40 {114,115,118,119,122,123,126,127,
LBYTE
}, {112,113,116,117,120,121,124,125,LBYTE}, {50,51,54,55,58,59,62,63,
HBYTE
}, {48,49,52,53,56,57,60,61,HBYTE},

41 {114,115,118,119,122,123,126,127,
HBYTE
}, {112,113,116,117,120,121,124,125,HBYTE}, {50,51,54,55,58,59,62,63,
LBYTE
}, {48,49,52,53,56,57,60,61,LBYTE},

44 c⁄° *
	gpkg_∑πRef_k7f_m≠
[] = {

72 c⁄° 
	gdev_pkg_phylun_k7h_duÆ
[][8+
PKG_ATTR
] = {

74 {0,1,2,3,8,9,10,11,
LBYTE
}, {0,1,2,3,8,9,10,11,
HBYTE
}, {16,17,18,19,24,25,26,27,LBYTE}, {16,17,18,19,24,25,26,27,HBYTE},

75 {32,33,34,35,40,41,42,43,
LBYTE
}, {32,33,34,35,40,41,42,43,
HBYTE
}, {48,49,50,51,56,57,58,59,LBYTE}, {48,49,50,51,56,57,58,59,HBYTE},

78 {20,21,22,23,28,29,30,31,
HBYTE
}, {20,21,22,23,28,29,30,31,
LBYTE
}, {4,5,6,7,12,13,14,15,HBYTE}, {4,5,6,7,12,13,14,15,LBYTE},

79 {52,53,54,55,60,61,62,63,
HBYTE
}, {52,53,54,55,60,61,62,63,
LBYTE
}, {36,37,38,39,44,45,46,47,HBYTE}, {36,37,38,39,44,45,46,47,LBYTE},

82 {64,65,66,67,72,73,74,75,
LBYTE
}, {64,65,66,67,72,73,74,75,
HBYTE
}, {80,81,82,83,88,89,90,91,LBYTE}, {80,81,82,83,88,89,90,91,HBYTE},

83 {96,97,98,99,104,105,106,107,
LBYTE
}, {96,97,98,99,104,105,106,107,
HBYTE
}, {112,113,114,115,120,121,122,123,LBYTE}, {112,113,114,115,120,121,122,123,HBYTE},

86 {84,85,86,87,92,93,94,95,
HBYTE
}, {84,85,86,87,92,93,94,95,
LBYTE
}, {68,69,70,71,76,77,78,79,HBYTE}, {68,69,70,71,76,77,78,79,LBYTE},

87 {116,117,118,119,124,125,126,127,
HBYTE
}, {116,117,118,119,124,125,126,127,
LBYTE
}, {100,101,102,103,108,109,110,111,HBYTE}, {100,101,102,103,108,109,110,111,LBYTE},

90 c⁄° *
	gpkg_∑πRef_k7h_duÆ_m≠
[] = {

110 c⁄° 
	gdev_pkg_phylun_fiji
[][8+
PKG_ATTR
] = {

112 {32,33,34,35,36,37,38,39,
HBYTE
}, {32,33,34,35,36,37,38,39,
LBYTE
},

113 {16,17,18,19,20,21,22,23,
HBYTE
}, {16,17,18,19,20,21,22,23,
LBYTE
},

114 {0,1,2,3,4,5,6,7,
HBYTE
}, {0,1,2,3,4,5,6,7,
LBYTE
},

117 {56,57,58,59,60,61,62,63,
HBYTE
}, {56,57,58,59,60,61,62,63,
LBYTE
},

118 {72,73,74,75,76,77,78,79,
HBYTE
}, {72,73,74,75,76,77,78,79,
LBYTE
},

119 {88,89,90,91,92,93,94,95,
HBYTE
}, {88,89,90,91,92,93,94,95,
LBYTE
},

122 {48,49,50,51,52,53,54,55,
LBYTE
}, {48,49,50,51,52,53,54,55,
HBYTE
},

123 {64,65,66,67,68,69,70,71,
LBYTE
}, {64,65,66,67,68,69,70,71,
HBYTE
},

124 {80,81,82,83,84,85,86,87,
LBYTE
}, {80,81,82,83,84,85,86,87,
HBYTE
},

127 {40,41,42,43,44,45,46,47,
LBYTE
}, {40,41,42,43,44,45,46,47,
HBYTE
},

128 {24,25,26,27,28,29,30,31,
LBYTE
}, {24,25,26,27,28,29,30,31,
HBYTE
},

129 {8,9,10,11,12,13,14,15,
LBYTE
}, {8,9,10,11,12,13,14,15,
HBYTE
},

132 c⁄° *
	gpkg_∑πRef_fiji_m≠
[] = {

155 
	$c⁄fig_dev_ty≥
(
subˇrd_size
 *
sc_size
, 
dev_ty≥
)

157 
dev_ty≥
) {

159 
K7F_MAP
:

160 
sc_size
->
subˇrd_row
 = 4;

161 
sc_size
->
subˇrd_cﬁ
 = 4;

162 
sc_size
->
subˇrd_˙t
 = 4;

164 
K7h_DUAL_MAP
:

165 
sc_size
->
subˇrd_row
 = 2;

166 
sc_size
->
subˇrd_cﬁ
 = 4;

167 
sc_size
->
subˇrd_˙t
 = 4;

169 
FIJI_MAP
:

170 
sc_size
->
subˇrd_row
 = 3;

171 
sc_size
->
subˇrd_cﬁ
 = 2;

172 
sc_size
->
subˇrd_˙t
 = 4;

174 
	}
}

	@dev-type.h

1 #i‚de‡
__DEV_TYPE_H


2 
	#__DEV_TYPE_H


	)

5 
	ssubˇrd_size
 {

6 
	msubˇrd_row
;

7 
	msubˇrd_cﬁ
;

8 
	msubˇrd_˙t
;

11 
	edevi˚_ty≥
 {

12 
	mK7F_MAP
 = 0,

13 
	mK7h_DUAL_MAP
,

14 
	mFIJI_MAP
,

15 
	m_8639_MAP
,

16 
	mDEV_TOTAL


20 
subˇrd_size
 
sc_size
;

22 c⁄° 
dev_pkg_phylun_k7f
[][8+
PKG_ATTR
];

23 c⁄° *
pkg_∑πRef_k7f_m≠
[];

25 c⁄° 
dev_pkg_phylun_k7h_duÆ
[][8+
PKG_ATTR
];

26 c⁄° *
pkg_∑πRef_k7h_duÆ_m≠
[];

28 c⁄° 
dev_pkg_phylun_fiji
[][8+
PKG_ATTR
];

29 c⁄° *
pkg_∑πRef_fiji_m≠
[];

32 
c⁄fig_dev_ty≥
(
subˇrd_size
 *
sc_size
, 
dev_ty≥
);

	@dio.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

10 
	~<sig«l.h
>

11 
	~<time.h
>

13 
	~"toﬁ.h
"

15 
sh™n⁄_dev
 *
	ggdev
;

17 
	$sigöt_h™dÀr
(
signo
)

19 
sh™n⁄_dev
 *
dev
 = 
gdev
;

20 
dúe˘_io
 
dio
;

22 
dio
.
ty≥
 = 
DIRECT_IO_STOP
;

23 
	`¥ötf
("\nStop measure\n");

24 
dev
->
	`do_dúe˘_io
(dev, &
dio
);

26 
	`exô
(
EXIT_SUCCESS
);

27 
	}
}

30 
	$sh™n⁄_dio_ußge
()

32 
	`¥ötf
("Description:\n");

33 
	`¥ötf
("\tMeasureÑead/write bandwidth by direct IO\n\n");

35 
	`¥ötf
("Usage:\n");

36 
	`¥ötf
("\tdio write/read [option]\n\n");

38 
	`¥ötf
("Options:\n");

39 
	`¥ötf
("\t-t, --absent-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

41 
	`¥ötf
("\t-T, --present-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

43 
	`¥ötf
("\t-h, --help\n"

45 
	}
}

47 
	$sh™n⁄_dio
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

49 
›ti⁄
 
l⁄g›ts
 [] = {

50 {"ab£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 't'},

51 {"¥e£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 'T'},

52 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

55 
lun
;

56 
›t
;

57 
dúe˘_io
 
dio
;

58 
timevÆ
 
öô_tv
, 
tv
;

59 
d⁄e_µa
, 
öô_d⁄e_µa
;

60 
ts
, 
tms
, 
avtms
, 
•ìd
, 
av•ìd
;

61 
di•œy
[1024];

62 
vÆidluns
, 
d⁄ñuns
;

64 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":f:aN°:T:h", 
l⁄g›ts
, 
NULL
)) != -1) {

65 
›t
) {

67 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 1);

70 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 0);

73 
	`sh™n⁄_dio_ußge
();

76 
	`sh™n⁄_dio_ußge
();

77  
ERR
;

81 
gdev
 = 
dev
;

82 i‡(
	`sig«l
(
SIGINT
, 
sigöt_h™dÀr
Ë=
SIG_ERR
) {

83 
	`¥ötf
("Can`tÑegister user`s SIGINT handler\n");

84 
	`exô
(
EXIT_FAILURE
);

87 
dio
.
ty≥
 = 
DIRECT_IO_START
;

88 
dio
.
›code
 = 
sh_ªad_cmd
;

89 
dio
.
hód
 = 0;

90 
dio
.
nblk
 = 
dev
->
Êash
->nblk;

91 
dio
.
≈age
 = 
dev
->
Êash
->npage;

92 
dio
.
≈œ√
 = 
dev
->
c⁄fig
->nplane;

93 
dio
.
n£˘‹
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

94 
dio
.
£˘‹_size
 = 
dev
->
c⁄fig
->sector_size;

96 
	`mem£t
(
dio
.
phylun_bôm≠
, 0xFF, (dio.phylun_bitmap));

97 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

98 
	`˛ór_bô
(
	`log2phy_lun
(
dev
, 
lun
), 
dio
.
phylun_bôm≠
);

100 
dev
->
	`do_dúe˘_io
(dev, &
dio
);

101 
	`¶ìp
(1);

104 
ts
 = 0;

105 
tms
 = 0;

107 
dio
.
ty≥
 = 
DIRECT_IO_POLL
;

108 
dev
->
	`do_dúe˘_io
(dev, &
dio
);

110 
öô_tv
.
tv_£c
 = 
tv
.tv_£¯
dio
.tv.tv_sec;

111 
öô_tv
.
tv_u£c
 = 
tv
.tv_u£¯
dio
.tv.tv_usec;

112 
öô_d⁄e_µa
 = 
d⁄e_µa
 = 
dio
.done_ppa;

114 
	`¥ötf
("%†%†", (
dev
->
c⁄fig
->
≈œ√
 > 1Ë? "MP" : "SP", (
sh_wrôe_cmd
 =
dio
.
›code
) ? "WR" : "RD");

115 
	`¥ötf
("\033[s");

117 
vÆidluns
 = 0;

118 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

119 
vÆidluns
++;

122 
	`¶ìp
(1);

123 
ts
++;

125 
dio
.
ty≥
 = 
DIRECT_IO_POLL
;

126 
dev
->
	`do_dúe˘_io
(dev, &
dio
);

127 
tms
 = ((
dio
.
tv
.
tv_£c
 * 1000000 + dio.tv.
tv_u£c
) - (tv.tv_sec * 1000000 +Åv.tv_usec)) / 1000;

128 
avtms
 = ((
dio
.
tv
.
tv_£c
 * 1000000 + dio.tv.
tv_u£c
Ë- (
öô_tv
.tv_sec * 1000000 + init_tv.tv_usec)) / 1000;

129 
tv
.
tv_u£c
 = 
dio
.tv.tv_usec;

130 
tv
.
tv_£c
 = 
dio
.tv.tv_sec;

132 
•ìd
 = ((
dio
.
d⁄e_µa
 - d⁄e_µaË* 
dev
->
c⁄fig
->
nd©a
Ë/ (
tms
 * 1024);

133 
av•ìd
 = ((
dio
.
d⁄e_µa
 - 
öô_d⁄e_µa
Ë* 
dev
->
c⁄fig
->
nd©a
Ë/ (
avtms
 * 1024);

134 
d⁄e_µa
 = 
dio
.done_ppa;

136 
d⁄ñuns
 = 0;

137 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

138 i‡(
	`ã°_bô
(
	`log2phy_lun
(
dev
, 
lun
), 
dio
.
d⁄e_phylun_bôm≠
)) {

140 
d⁄ñuns
++;

144 
	`•rötf
(
di•œy
, "[%ds]: %dMB/s,ávîagê%dMB/s, %dÜun†com∂ëe", 
ts
, 
•ìd
, 
av•ìd
, 
d⁄ñuns
);

145 
	`¥ötf
("\033[u");

146 
	`¥ötf
("\033[K");

147 
	`¥öt
("%s", 
di•œy
);

149 i‡(
d⁄ñuns
 >
vÆidluns
)

152 
	`¥ötf
("\n");

155 
dio
.
ty≥
 = 
DIRECT_IO_STOP
;

156 
dev
->
	`do_dúe˘_io
(dev, &
dio
);

158 
	}
}

	@ecc.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/mm™.h
>

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

11 
	~<time.h
>

13 
	~"toﬁ.h
"

15 
	gmax_ecc_îrbôs
 = -1;

16 
	gfixed_ecc_îrbôs
 = -1;

17 
	gfixed_ecc_øtio
 = -1;

19 
	g‹g_ncodew‹d
 = 0, 
	g‹g_codew‹d_size
 = 0;

22 
	$__modify_îr‹_bô
(
__u8
 *
d©a
, 
num
)

24 
i
, 
off
, 
byã
, 
mask
;

26 
off
 = 
	`ønd
();

28 
i
 = 0; i < 
num
; i++, 
off
++) {

29 
byã
 = 
	`gë_ƒ™d
(
off
) / 8;

30 
mask
 = 1 << (
	`gë_ƒ™d
(
off
) % 8);

33 i‡(
d©a
[
byã
] & 
mask
)

34 
d©a
[
byã
] &~
mask
;

36 
d©a
[
byã
] |
mask
;

39 
	}
}

41 
	$__ecc_n€cc_wrôe
(
sh™n⁄_dev
 *
dev
, 
hód
, 
blk
, 
∑ge
, 
£ed
)

43 
i
, 
rc
 = 0;

44 
__u8
 *
d©a
;

45 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

46 
lun
, 
∂™e
, 
µa
;

47 
li°_hód
 
ªq_hód
, 
tmp_hód
;

49 
	`as£π
(
‹g_ncodew‹d
 !0 && 
‹g_codew‹d_size
 != 0);

51 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
 + 
∑ge
;

53 
	`INIT_LIST_HEAD
(&
ªq_hód
);

54 
hód
 = (hód & ~
HEAD_MASK
Ë| 
INDEP_HEAD
;

56 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

57 i‡(
	`is_bad_lunblock
(
dev
, 
lun
, 
blk
))

60 
chunk_hód_ªq
 = 
NULL
;

63 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

64 
ns
, 
bs
 = 0;

65 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

67 
d©a
 = 
	`mÆloc
(
dev
->
c⁄fig
->
∑ge_n£˘‹
 * (dev->c⁄fig->
£˘‹_size
 + 
METADATA_SIZE
));

69 
ªmaö_ns
) {

70 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

72 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 
bs
, 0);

73 i‡(
NULL
 =
ªq
) {

74 
rc
 = 
ALLOCMEM_FAILED
;

75 
‰ì_ªq_out
;

77 
ªq
->
b‰ì
 = 0;

78 
ªq
->
rw_ítúe_buf„r
 = 1;

79 
ªq
->
n£˘‹
 = 
ns
;

80 
ªq
->
d©a
 = d©®+ 
bs
 * (
dev
->
c⁄fig
->
£˘‹_size
 + 
METADATA_SIZE
);

81 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

83 
bs
 +
ns
;

84 
ªmaö_ns
 -
ns
;

88 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

89 i‡(
NULL
 =
ªq
) {

90 
rc
 = 
ALLOCMEM_FAILED
;

91 
‰ì_ªq_out
;

93 
ªq
->
rw_ítúe_buf„r
 = 1;

94 
ªq
->
n£˘‹
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

95 
ªq
->
d©a
 = data;

97 i‡(
NULL
 !
chunk_hód_ªq
) {

98 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

100 
chunk_hód_ªq
 = 
ªq
;

101 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

107 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

108 i‡(
ªq
->
›code
 =
sh_ˇchîód_cmd
) {

109 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

110 
‰ì_ªq_out
;

114 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

115 
	`upd©e_cmdqueue
(
dev
, 
lun
);

117 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

118 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

119 
‰ì_ªq_out
;

122 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

123 i‡(
ªq
->
›code
 =
sh_ˇchîód_cmd
) {

124 
	`li°_dñ
(&
ªq
->
li°
);

125 
	`‰ì_ªque°
(
ªq
);

130 
	`INIT_LIST_HEAD
(&
tmp_hód
);

131 
	`§™d
(
£ed
);

132 
	`as£π
(
max_ecc_îrbôs
 !-1 || 
fixed_ecc_îrbôs
 != -1);

134 
	`li°_f‹_óch_íåy
(
chunk_hód_ªq
, &
ªq_hód
, 
li°
) {

135 
	`li°_add_èû
(&
tmp_hód
, &
chunk_hód_ªq
->
chunk_li°
);

136 
	`li°_f‹_óch_íåy
(
ªq
, &
tmp_hód
, 
chunk_li°
) {

137 
i
 = 0; i < 
‹g_ncodew‹d
; i++) {

138 i‡(
max_ecc_îrbôs
 != -1) {

139 
	`__modify_îr‹_bô
(
ªq
->
d©a
 + 
i
 * 
‹g_codew‹d_size
, 
	`ønd
(Ë% (
max_ecc_îrbôs
 + 1));

141 i‡(-1 =
fixed_ecc_øtio
) {

142 
	`__modify_îr‹_bô
(
ªq
->
d©a
 + 
i
 * 
‹g_codew‹d_size
, 
fixed_ecc_îrbôs
);

144 i‡(0 =
	`ønd
(Ë% 
fixed_ecc_øtio
)

145 
	`__modify_îr‹_bô
(
ªq
->
d©a
 + 
i
 * 
‹g_codew‹d_size
, 
fixed_ecc_îrbôs
);

150 
	`li°_dñ
(&
tmp_hód
);

154 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

155 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

156 
‰ì_ªq_out
;

159 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

160 
	`upd©e_cmdqueue
(
dev
, 
lun
);

162 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

163 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

164 
‰ì_ªq_out
;

167 
‰ì_ªq_out
:

168 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

169 
	`li°_dñ
(&
ªq
->
li°
);

170 
	`‰ì_ªque°
(
ªq
);

172  
rc
;

173 
	}
}

175 
	$__ecc_dummy_wrôe
(
sh™n⁄_dev
 *
dev
, 
hód
, 
blk
, 
∑ge
, 
£ed
)

177 
i
, 
rc
 = 0;

178 
£˘‹_£ed
;

179 
lun
, 
∂™e
, 
µa
;

180 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

181 
li°_hód
 
ªq_hód
;

183 
	`as£π
(
dev
->
c⁄fig
->
ecc_mode
 !
ECCMODE_DISABLE
);

185 
hód
 |(1 << 
SH_WRITE_DUMMY_SHIFT
);

186 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
 + 
∑ge
;

188 
	`INIT_LIST_HEAD
(&
ªq_hód
);

191 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
) {

192 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidöô_cmd
, 
	`su≥rblock_∑rôylun
(dev, 
blk
), 
µa
, 
hód
, 0, 
	`su≥rblock_nd©Æun
(dev, blk));

193 i‡(
NULL
 =
ªq
) {

194 
rc
 = 
ALLOCMEM_FAILED
;

195 
‰ì_ªq_out
;

197 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

201 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

202 i‡(
	`is_bad_lunblock
(
dev
, 
lun
, 
blk
))

205 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
 && 
	`su≥rblock_∑rôylun
(dev, 
blk
Ë=
lun
)

208 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
, 
hód
, 0, dev->
c⁄fig
->
∑ge_n£˘‹
);

209 i‡(
NULL
 =
chunk_hód_ªq
) {

210 
rc
 = 
ALLOCMEM_FAILED
;

211 
‰ì_ªq_out
;

213 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++) {

214 
£˘‹_£ed
 = (
µa
 * 
dev
->
c⁄fig
->
∑ge_n£˘‹
 + 
i
Ë+ ((
lun
 + 
£ed
)<<24);

215 
	`§™d
(
£˘‹_£ed
);

216 
	`∑d_ønd
(
chunk_hód_ªq
->
d©a
 + 
i
 * 
dev
->
c⁄fig
->
£˘‹_size
, dev->config->sector_size);

217 
	`∑d_ønd
(
chunk_hód_ªq
->
mëad©a
 + 
i
, 
METADATA_SIZE
);

221 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

223 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

224 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, dev->
c⁄fig
->
∑ge_n£˘‹
);

225 i‡(
NULL
 ==
ªq
) {

226 
rc
 = 
ALLOCMEM_FAILED
;

227 
‰ì_ªq_out
;

229 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++) {

230 
£˘‹_£ed
 = ((
µa
 + 
∂™e
 * 
dev
->
Êash
->
≈age
Ë* dev->
c⁄fig
->
∑ge_n£˘‹
 + 
i
Ë+ ((
lun
 + 
£ed
)<<24);

231 
	`§™d
(
£˘‹_£ed
);

232 
	`∑d_ønd
(
ªq
->
d©a
 + 
i
 * 
dev
->
c⁄fig
->
£˘‹_size
, dev->config->sector_size);

233 
	`∑d_ønd
(
ªq
->
mëad©a
 + 
i
, 
METADATA_SIZE
);

237 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

242 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
) {

243 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidwrôe_cmd
, 
	`su≥rblock_∑rôylun
(dev, 
blk
), 
µa
, 
hód
, 0, 0);

244 i‡(
NULL
 =
chunk_hód_ªq
) {

245 
rc
 = 
ALLOCMEM_FAILED
;

246 
‰ì_ªq_out
;

248 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

250 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

251 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidwrôe_cmd
, 
	`su≥rblock_∑rôylun
(dev, 
blk
), 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

252 i‡(
NULL
 =
ªq
) {

253 
rc
 = 
ALLOCMEM_FAILED
;

254 
‰ì_ªq_out
;

256 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

261 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

262 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

263 
‰ì_ªq_out
;

266 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

267 
	`upd©e_cmdqueue
(
dev
, 
lun
);

269 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

270 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

271 
‰ì_ªq_out
;

275 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

276 i‡(
sh_øidöô_cmd
 =
ªq
->
›code
)

278 
rc
 |
	`check_ªq_°©us_sûít
(
ªq
);

282 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

283 
	`li°_dñ
(&
ªq
->
li°
);

284 
	`‰ì_ªque°
(
ªq
);

287 
‰ì_ªq_out
:

288 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

289 
	`li°_dñ
(&
ªq
->
li°
);

290 
	`‰ì_ªque°
(
ªq
);

292  
rc
;

293 
	}
}

296 
	$sh™n⁄_Áke_ecc_ußge
()

298 
	`¥ötf
("Description:\n");

299 
	`¥ötf
("\tFake specifiedÇumber ofÉccÉrrbits in flash cell\n\n");

301 
	`¥ötf
("Usage:\n");

302 
	`¥ötf
("\tfake-ecc [option] begin_chunkblock count\n\n");

304 
	`¥ötf
("Option:\n");

305 
	`¥ötf
("\t-f, --luninfo=luninfo-file\n"

307 
	`¥ötf
("\t-e, --seed=SEDD\n"

309 
	`¥ötf
("\t-H, --head=HEAD\n"

311 
	`¥ötf
("\t-F, --fixed-ecc-errbits=num\n"

313 
	`¥ötf
("\t-R, --fixed-ecc-ratio=ratio\n"

315 
	`¥ötf
("\t-M, --max-ecc-errbits=num\n"

317 
	`¥ötf
("\t-N, --noprogress\n"

319 
	`¥ötf
("\t-t, --absent-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

321 
	`¥ötf
("\t-T, --present-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

323 
	`¥ötf
("\t-h, --help\n"

326 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk.\n\tDo super-eraseÖreviousÅhis command!!!\n");

327 
	}
}

329 
	$sh™n⁄_Áke_ecc
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

331 
›ti⁄
 
l⁄g›ts
 [] = {

332 {"lunöfo", 
ªquúed_¨gumít
, 
NULL
, 'f'},

333 {"£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

334 {"hód", 
ªquúed_¨gumít
, 
NULL
, 'H'},

335 {"fixed-ecc-îrbôs", 
ªquúed_¨gumít
, 
NULL
, 'F'},

336 {"fixed-ecc-øtio", 
ªquúed_¨gumít
, 
NULL
, 'R'},

337 {"max-ecc-îrbôs", 
ªquúed_¨gumít
, 
NULL
, 'M'},

338 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

339 {"ab£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 't'},

340 {"¥e£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 'T'},

341 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

344 
rc
 = 0;

345 
›t
;

346 *
lunöfo_fûe
;

347 
öc
, 
£ed
, 
£ed_way
;

348 
begö_chunkblock
, 
cou¡
;

349 
hód
, 
blk
, 
∑ge
;

350 
n›rogªss
, 
¥e_˚¡
, 
now_˚¡
;

351 
ômp
, 
Áke_oob_size
;

353 i‡(
ECCMODE_DISABLE
 =
dev
->
c⁄fig
->
ecc_mode
) {

354 
	`¥ötf
("Ecc must beÉnabled\n");

355  
ERR
;

358 
lunöfo_fûe
 = 
NULL
;

359 
öc
 = 0;

360 
£ed
 = 
	`gë£ed
(0);

361 
£ed_way
 = 0;

362 
hód
 = 
INDEP_HEAD
;

363 
n›rogªss
 = 0;

365 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":f:e:H:F:R:M:Nt:T:h", 
l⁄g›ts
, 
NULL
)) != -1) {

366 
›t
) {

368 
lunöfo_fûe
 = 
›èrg
;

371 
£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

372 
£ed_way
 = 1;

375 
hód
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

376 i‡(
HEAD0
 !
hód
 && 
HEAD1
 !hód && 
INDEP_HEAD
 != head) {

377 
	`¥ötf
("Head choices: 0 1 2\n");

378  
ERR
;

382 i‡(
max_ecc_îrbôs
 != -1) {

383 
	`¥ötf
("Don`t set option 'max-ecc-errbits'ánd 'fixed-ecc-errbits'átÅhe sameÅime\n");

384  
ERR
;

386 
fixed_ecc_îrbôs
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

387 i‡(
fixed_ecc_îrbôs
 < 0 || fixed_ecc_îrbô†> 
dev
->
tmode
) {

388 
	`¥ötf
("Thi†vÆuêshould bê[0, %d]\n", 
dev
->
tmode
);

389  
ERR
;

393 
fixed_ecc_øtio
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

394 i‡(
fixed_ecc_øtio
 <= 0) {

395 
	`¥ötf
("This value should > 0\n");

396  
ERR
;

400 i‡(
fixed_ecc_îrbôs
 != -1) {

401 
	`¥ötf
("Don`t set option 'max-ecc-errbits'ánd 'fixed-ecc-errbits'átÅhe sameÅime\n");

402  
ERR
;

404 
max_ecc_îrbôs
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

405 i‡(
max_ecc_îrbôs
 < 0 || max_ecc_îrbô†> 
dev
->
tmode
) {

406 
	`¥ötf
("Thi†vÆuêshould bê[0, %d]\n", 
dev
->
tmode
);

407  
ERR
;

411 
n›rogªss
 = 1;

414 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 1);

417 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 0);

420 
	`sh™n⁄_Áke_ecc_ußge
();

423 
	`sh™n⁄_Áke_ecc_ußge
();

424  
ERR
;

428 i‡(
¨gc
 - 
›töd
 != 2) {

429 
	`sh™n⁄_Áke_ecc_ußge
();

430  
ERR
;

433 i‡(-1 =
max_ecc_îrbôs
 && -1 =
fixed_ecc_îrbôs
) {

434 
	`¥ötf
("Please set option [-F, fixed-ecc-errbits] or [-M, max-ecc-errbits]\n");

435  
ERR
;

438 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

439 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

441 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
/dev->
c⁄fig
->
≈œ√
) {

442 
	`¥ötf
("Overflowáddress\n");

443  
OVERFLOW_ADDR
;

446 i‡(
HEAD0
 =
hód
 || 
HEAD1
 == head) {

447 i‡(!
dev
->
c⁄fig
->
øid_mode
) {

448 
	`¥ötf
("You mustÉnableÑaid when write by head0 or head1. PleaseÑm file 'config'ÅhenÑeconfig hardware\n");

449  
ERR
;

454 i‡(
HEAD0
 =
hód
 || 
HEAD1
 == head) {

455 i‡(!
dev
->
c⁄fig
->
øid_mode
) {

456 
	`¥ötf
("You mustÉnableÑaid when write by head0 or head1. PleaseÑm file 'config'ÅhenÑeconfig hardware\n");

457  
ERR
;

462 i‡(
NULL
 !
lunöfo_fûe
) {

463 i‡(
	`c⁄°ru˘_sb_lunöfo
(
dev
, 
lunöfo_fûe
))

464  
ERR
;

467 i‡(!
£ed_way
)

468 
	`¥öt
("£ed=%d\n", 
£ed
);

470 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

471 
hód
 |(1 << 
SH_WRITE_PLANE_SHIFT
);

473 i‡(!
n›rogªss
) {

474 
¥e_˚¡
 = 
now_˚¡
 = 0;

475 
	`¥öt
("Fake-ec¯öÖro˚ss...%%%02d", 
now_˚¡
);

479 
‹g_codew‹d_size
 = 
dev
->
c⁄fig
->
codew‹d_size
;

480 
‹g_ncodew‹d
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
 * dev->c⁄fig->
£˘‹_ncodew‹d
;

482 
dev
->
c⁄fig
->
ecc_mode
 = 
ECCMODE_DISABLE
;

483 
	`ˇlcuœã_ödúe˘_c⁄fig
(
dev
);

484 
ômp
 = (
‹g_ncodew‹d
 * 
‹g_codew‹d_size
 + 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 * dev->c⁄fig->
codew‹d_size
 - 1) /

485 (
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 * dev->c⁄fig->
codew‹d_size
);

486 
Áke_oob_size
 = 
ômp
 * 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 * dev->c⁄fig->
codew‹d_size
 - dev->
Êash
->
∑ge_size
;

487 i‡(
Áke_oob_size
 < 0)

488 
Áke_oob_size
 = 
dev
->
Êash
->
oob_size
;

490 
dev
->
c⁄fig
->
ecc_mode
 = dev->
c⁄fig_bakup
->ecc_mode;

491 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = dev->
c⁄fig_bakup
->sector_ncodeword;

492 
	`ˇlcuœã_ödúe˘_c⁄fig
(
dev
);

495 
	`öô_ƒ™d
(
‹g_codew‹d_size
 * 8, 
£ed
);

498 
blk
 = 
begö_chunkblock
; blk < begö_chunkblock + 
cou¡
; blk++) {

499 i‡(
	`is_bad_su≥rblock
(
dev
, 
blk
))

502 
	`f‹_dev_óch_∑ge
(
dev
, 
∑ge
) {

504 
dev
->
Êash
->
oob_size
 = dev->
Êash_bakup
->oob_size;

505 
dev
->
Êash
->
ítúe_∑ge_size
 = dev->Êash->
∑ge_size
 + dev->Êash->
oob_size
;

507 
dev
->
c⁄fig
->
øid_mode
 = dev->
c⁄fig_bakup
->raid_mode;

508 
dev
->
c⁄fig
->
ecc_mode
 = dev->
c⁄fig_bakup
->ecc_mode;

509 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = dev->
c⁄fig_bakup
->sector_ncodeword;

510 
	`ª_öô_devi˚
(
dev
);

512 i‡((
rc
 = 
	`__ecc_dummy_wrôe
(
dev
, 
hód
, 
blk
, 
∑ge
, 
£ed
))) {

513 
	`¥ötf
("__ecc_dummy_write() failed\n");

514  
rc
;

518 
dev
->
Êash
->
oob_size
 = 
Áke_oob_size
;

519 
dev
->
Êash
->
ítúe_∑ge_size
 = dev->Êash->
∑ge_size
 + dev->Êash->
oob_size
;

521 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

522 
dev
->
c⁄fig
->
ecc_mode
 = 
ECCMODE_DISABLE
;

523 
	`ª_öô_devi˚
(
dev
);

525 i‡((
rc
 = 
	`__ecc_n€cc_wrôe
(
dev
, 
hód
, 
blk
, 
∑ge
, 
£ed
 + 
öc
))) {

526 
	`¥ötf
("__ecc_noecc_write() failed\n");

527  
rc
;

531 
öc
++;

533 i‡(
n›rogªss
)

536 
now_˚¡
 = 100 * ((
blk
 - 
begö_chunkblock
Ë* 
dev
->
Êash
->
≈age
 + 
∑ge
 + 1Ë/ (
cou¡
 * dev->flash->npage);

538 i‡(
now_˚¡
 > 
¥e_˚¡
) {

539 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

540 
¥e_˚¡
 = 
now_˚¡
;

545 
	`¥ötf
("\n");

547 
	`exô_ƒ™d
();

548  
rc
;

549 
	}
}

552 
	$¥ï¨e_skù_em±y_block
(
sh™n⁄_dev
 *
dev
)

554 
i
, 
j
, 
a˘ive
;

555 
hód
, 
∑ge
, 
µa
, 
∂™e
, 
blk
, 
lun
, 
vÆid_blks
;

556 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

557 
li°_hód
 
ªq_hód
;

558 
cur_blk_bôm≠
[
MAX_LUN_NLONG
];

559 
ßved_blk_bôm≠
[
MAX_LUN_NLONG
];

560 
Êag
;

562 i‡(
	`sh™n⁄_m±_ªadbbt
(
dev
, 0)) {

563 
	`¥ötf
("Read bbt failed\n");

564  
ERR
;

567 
	`mem˝y
(
dev
->
c⁄fig
, dev->
c⁄fig_bakup
, (*dev->config));

568 i‡(
	`ª_öô_devi˚
(
dev
)) {

569 
	`¥ötf
("Re-init-device (WRITE-MBR) failed\n");

570  
ERR
;

572 
dev
->
	`˛ór_queue
(dev);

574 
a˘ive
 = 0;

575 
hód
 = 
INDEP_HEAD
;

576 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

577 
hód
 |(1 << 
SH_READ_PLANE_SHIFT
);

578 
	`INIT_LIST_HEAD
(&
ªq_hód
);

580 
	`¥öt
("%s()...", 
__func__
);

583 
blk
 = 0; blk < 4 / 
dev
->
c⁄fig
->
≈œ√
; blk++) {

584 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

585 
	`£t_bô
(
lun
, 
dev
->
sb
[
blk
].
sb_lunöfo
.
sb_bbt
);

589 
	`f‹_dev_óch_block
(
dev
, 
blk
) {

590 
vÆid_blks
 = 0;

592 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

593 i‡(!
	`ã°_bô
(
lun
, 
dev
->
sb
[
blk
].
sb_lunöfo
.
sb_bbt
))

594 
vÆid_blks
++;

597 i‡(
vÆid_blks
 > 
dev
->
c⁄fig
->
luns
 / 2) {

598 
dev
->
sb
[
blk
].
sb_lunöfo
.
luns
 = 
vÆid_blks
;

601 
dev
->
sb
[
blk
].
sb_lunöfo
.
luns
 = 0;

603 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

604 
	`£t_bô
(
lun
, 
dev
->
sb
[
blk
].
sb_lunöfo
.
sb_bbt
);

610 
lb
;

612 
	`¥ötf
("BBT map\n");

613 
	`f‹_dev_óch_block
(
dev
, 
lb
)

614 
	`¥ötf
("blk=%04d: %016lX\n", 
lb
, 
dev
->
sb
[lb].
sb_lunöfo
.
sb_bbt
[0]);

615 
	`¥ötf
("\n");

620 
	`f‹_dev_óch_block
(
dev
, 
blk
) {

621 i‡(
	`is_bad_su≥rblock
(
dev
, 
blk
))

624 
∑ge
 = 0;

625 
µa
 = 
blk
 * 
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
;

627 
	`mem˝y
(
ßved_blk_bôm≠
, 
dev
->
sb
[
blk
].
sb_lunöfo
.
sb_bbt
, (saved_blk_bitmap));

628 
œ°_∑ge
:

629 
	`mem£t
(
cur_blk_bôm≠
, 0x00, (cur_blk_bitmap));

631 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

632 i‡(
	`ã°_bô
(
lun
, 
dev
->
sb
[
blk
].
sb_lunöfo
.
sb_bbt
))

635 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∑ge
, 
hód
, 0, 0);

636 i‡(
NULL
 =
chunk_hód_ªq
)

637  
ERR
;

638 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

640 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

641 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∑ge
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

642 i‡(
NULL
 =
ªq
)

643  
ERR
;

644 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

647 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

648 
ns
, 
bs
 = 0;

649 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

651 
ªmaö_ns
) {

652 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

654 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
 + 
∑ge
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 
bs
, 
ns
);

655 i‡(
NULL
 =
ªq
)

656  
ERR
;

657 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

659 
bs
 +
ns
;

660 
ªmaö_ns
 -
ns
;

665 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

666 i‡(
dev
->
	`submô_ªque°
(
ªq
)) {

667 
	`¥ötf
("submit_request failed\n");

668  
ERR
;

672 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

673 
	`upd©e_cmdqueue
(
dev
, 
lun
);

675 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

676 i‡(
	`pﬁl_cmdqueue
(
dev
, 
lun
)) {

677 
	`¥ötf
("poll_cmdqueue failed\n");

678  
ERR
;

682 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

683 i‡(
sh_ˇchîód_cmd
 =
ªq
->
›code
) {

684 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

685 i‡(0xFB =
ªq
->
ecc
[
i
]) {

686 
	`£t_bô
(
ªq
->
lun
, 
dev
->
sb
[ªq->
chunk_block
].
sb_lunöfo
.
sb_bbt
);

687 
	`£t_bô
(
ªq
->
lun
, 
cur_blk_bôm≠
);

688 i‡(0 !
∑ge
) {

689 
j
 = 0; j < 
a˘ive
; j++) {

690 i‡(
ªq
->
chunk_block
 =
dev
->
a˘ive_block
[
j
])

693 i‡(
j
 =
a˘ive
)

694 
dev
->
a˘ive_block
[
a˘ive
++] = 
ªq
->
chunk_block
;

696 } i‡(
ªq
->
ecc
[
i
] > 0xFB) {

697 
	`¥ötf
("INVALIDÉc¯vÆuêblock=%dÉcc=0x%02X\n", 
ªq
->
chunk_block
,Ñeq->
ecc
[
i
]);

698  
ERR
;

702 
	`li°_dñ
(&
ªq
->
li°
);

703 
	`‰ì_ªque°
(
ªq
);

707 
	`f‹_dev_óch_lun
 (
dev
, 
lun
) {

708 i‡(!
	`ã°_bô
(
lun
, 
ßved_blk_bôm≠
)) {

709 
Êag
 = 
	`ã°_bô
(0, 
cur_blk_bôm≠
);

714 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

715 i‡(
	`ã°_bô
(
lun
, 
ßved_blk_bôm≠
))

718 i‡(
	`ã°_bô
(
lun
, 
cur_blk_bôm≠
Ë!
Êag
) {

719 
	`¥ötf
("FTL bug: föd un£ÆedÖagêlun=%d blk=%dÖage=%d\n", 
lun
, 
blk
, 
∑ge
);

720  
ERR
;

725 i‡(0 =
∑ge
) {

726 
∑ge
 = 
dev
->
Êash
->
≈age
 - 1;

727 
œ°_∑ge
;

733 
lb
;

735 
	`¥ötf
("BBT |Émpty map\n");

736 
	`f‹_dev_óch_block
(
dev
, 
lb
)

737 
	`¥ötf
("blk=%04d: %016lX\n", 
lb
, 
dev
->
sb
[lb].
sb_lunöfo
.
sb_bbt
[0]);

738 
	`¥ötf
("\n");

742 i‡(
a˘ive
 > 2) {

743 
	`¥ötf
("ERR: dëe˘ m‹êth™ 2á˘ivêblock %d\n", 
a˘ive
);

744  
ERR
;

746 
	`¥ötf
("active_block is: ");

747 
i
 = 0; i < 
a˘ive
; i++)

748 
	`¥ötf
("%d ", 
dev
->
a˘ive_block
[
i
]);

749 
	`¥ötf
("\n");

753 
	`f‹_dev_óch_block
(
dev
, 
blk
) {

754 
vÆid_blks
 = 0;

756 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

757 i‡(!
	`ã°_bô
(
lun
, 
dev
->
sb
[
blk
].
sb_lunöfo
.
sb_bbt
))

758 
vÆid_blks
++;

760 
dev
->
sb
[
blk
].
sb_lunöfo
.
luns
 = 
vÆid_blks
;

764 
	}
}

766 
	#gë_d©a_buf
(Ë(
d©a
 + 
∑ge
 * 
su≥Ωage_size
 + \

767 
lun
 * (
dev
->
c⁄fig
->
chunk_nd©a
 + dev->c⁄fig->
chunk_nmëa
) + \

768 
∂™e
 * (
dev
->
c⁄fig
->
nd©a
 + dev->c⁄fig->
nmëa
)) \

769 

	)

770 
	$sh™n⁄_rmw_Áke_ecc_ußge
()

772 
	`¥ötf
("Description:\n");

773 
	`¥ötf
("\tRead, modifyÉrror bitsÅhenÉrase/write flashÅo fakeÉrror bits\n\n");

775 
	`¥ötf
("Usage:\n");

776 
	`¥ötf
("\trmw-fake-ecc [option] begin_chunkblock count\n\n");

778 
	`¥ötf
("Option:\n");

779 
	`¥ötf
("\t-e, --seed=SEED\n"

781 
	`¥ötf
("\t-F, --fixed-ecc-errbits=num\n"

783 
	`¥ötf
("\t-R, --fixed-ecc-ratio=ratio\n"

785 
	`¥ötf
("\t-M, --max-ecc-errbits=num\n"

787 
	`¥ötf
("\t-p, --page-range=num\n"

789 
	`¥ötf
("\t-a, --enable-fd\n"

791 
	`¥ötf
("\t-o,--overflow-ecc-bits=num\n"

793 
	`¥ötf
("\t-n, --fd-num=num\n"

795 
	`¥ötf
("\t-x, --fd-fixed-lun=lun\n"

797 
	`¥ötf
("\t-r, --fd-ratio\n"

799 
	`¥ötf
("\t-d, --disable-same-lun\n"

801 
	`¥ötf
("\t-N, --noprogress\n"

803 
	`¥ötf
("\t-t, --absent-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

805 
	`¥ötf
("\t-T, --present-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

807 
	`¥ötf
("\t-h, --help\n"

810 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk\n");

811 
	}
}

813 
	$sh™n⁄_rmw_Áke_ecc
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

815 
›ti⁄
 
l⁄g›ts
 [] = {

816 {"£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

817 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

818 {"fixed-ecc-îrbôs", 
ªquúed_¨gumít
, 
NULL
, 'F'},

819 {"fixed-ecc-øtio", 
ªquúed_¨gumít
, 
NULL
, 'R'},

820 {"max-ecc-îrbôs", 
ªquúed_¨gumít
, 
NULL
, 'M'},

821 {"∑ge-ønge", 
ªquúed_¨gumít
, 
NULL
, 'p'},

822 {"íabÀ-fd", 
no_¨gumít
, 
NULL
, 'a'},

823 {"ovîÊow-ecc-bôs", 
ªquúed_¨gumít
, 
NULL
, 'o'},

824 {"fd-øtio", 
ªquúed_¨gumít
, 
NULL
, 'r'},

825 {"fd-num", 
ªquúed_¨gumít
, 
NULL
, 'n'},

826 {"fd-fixed-lun", 
ªquúed_¨gumít
, 
NULL
, 'x'},

827 {"dißbÀ-ßme-lun", 
no_¨gumít
, 
NULL
, 'd'},

828 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

829 {"ab£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 't'},

830 {"¥e£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 'T'},

831 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

834 
›t
;

835 
i
, 
rc
 = 0;

836 
£ed
;

837 
rmw_fix
, 
rmw_fix_øtio
, 
rmw_max
;

838 
begö_chunkblock
, 
cou¡
;

839 
ä
, 
oob_size
;

840 
«tive_ncodew‹d
, 
«tive_codew‹d_size
, 
«tive_pz
;

841 
«tive_£˘‹_ncodew‹d
, 
«tive_∑ge_n£˘‹
;

842 
__u8
 *
d©a
;

843 
su≥Ωage_size
, 
su≥rblock_size
;

844 
lun
, 
blk
, 
∂™e
, 
∑ge
, 
µa
, 
hód
;

845 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

846 
li°_hód
 
ªq_hód
;

847 
n›rogªss
, 
¥e_˚¡
, 
now_˚¡
;

848 
∑ge˙t
;

849 
dißbÀ_ßme_lun
, 
èrgë_lun
, 
fd_num
, 
fuŒ_fd
, 
£˘‹_off
, 
cw_off
, *
uniq_buf„r
;

850 
lun_cw_size
, 
lun_£˘‹_size
;

851 
íabÀ_fd
, 
fd_øtio
, 
fd_num_Êag
;

852 *
lun_cw_m≠
;

853 
cur_îrbôs
, 
ovîbôs
;

854 
fd_fixed_lun
;

856 
£ed
 = 
	`gë£ed
(0);

857 
n›rogªss
 = 0;

858 
rmw_fix
 = 
rmw_fix_øtio
 = 
rmw_max
 = -1;

859 
	`öô_ƒ™d
(
dev
->
c⁄fig
->
codew‹d_size
 * 8, 
£ed
);

860 
∑ge˙t
 = 
dev
->
Êash
->
≈age
;

861 
dißbÀ_ßme_lun
 = 0;

862 
fuŒ_fd
 = 0;

863 
íabÀ_fd
 = 0;

864 
fd_øtio
 = 1;

865 
fd_num_Êag
 = 0;

866 
ovîbôs
 = 32;

867 
fd_fixed_lun
 = -1;

869 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":e:F:R:M:p:ao:r:n:x:dNt:T:h", 
l⁄g›ts
, 
NULL
)) != -1) {

870 
›t
) {

872 
£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

875 i‡(
rmw_max
 != -1) {

876 
	`¥ötf
("Don`t set option 'max-ecc-errbits'ánd 'fixed-ecc-errbits'átÅhe sameÅime\n");

877  
ERR
;

879 
rmw_fix
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

880 i‡(
rmw_fix
 < 0 ||Ñmw_fix > 
dev
->
tmode
) {

881 
	`¥ötf
("Thi†vÆuêshould bê[0, %d]\n", 
dev
->
tmode
);

882  
ERR
;

886 
rmw_fix_øtio
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

887 i‡(
rmw_fix_øtio
 <= 0) {

888 
	`¥ötf
("This value should > 0\n");

889  
ERR
;

893 i‡(
rmw_fix
 != -1) {

894 
	`¥ötf
("Don`t set option 'max-ecc-errbits'ánd 'fixed-ecc-errbits'átÅhe sameÅime\n");

895  
ERR
;

897 
rmw_max
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

898 i‡(
rmw_max
 < 0 ||Ñmw_max > 
dev
->
tmode
) {

899 
	`¥ötf
("Thi†vÆuêshould bê[0, %d]\n", 
dev
->
tmode
);

900  
ERR
;

904 
∑ge˙t
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

905 i‡(
∑ge˙t
 < 1 ||Öage˙à> 
dev
->
Êash
->
≈age
) {

906 
	`¥ötf
("InvalidÖage select\n");

907  
ERR
;

911 
íabÀ_fd
 = 1;

914 
ovîbôs
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

915 i‡(
ovîbôs
 < 0 || overbits > 1024) {

916 
	`¥ötf
("Invalid option value for 'overflow-ecc-bits'\n");

917  
ERR
;

921 
fd_øtio
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

924 
fd_num
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

925 
fd_num_Êag
 = 1;

928 
fd_fixed_lun
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

929 i‡(
fd_fixed_lun
 < 0 || fd_fixed_lu¿> 
dev
->
c⁄fig
->
luns
) {

930 
	`¥ötf
("No suchÜun\n");

931  
ERR
;

935 
dißbÀ_ßme_lun
 = 1;

938 
n›rogªss
 = 1;

941 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 1);

944 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 0);

947 
	`sh™n⁄_rmw_Áke_ecc_ußge
();

950 
	`sh™n⁄_rmw_Áke_ecc_ußge
();

951  
ERR
;

955 i‡(2 !(
¨gc
 - 
›töd
)) {

956 
	`sh™n⁄_rmw_Áke_ecc_ußge
();

957  
ERR
;

960 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

961 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

962 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
 / dev->
c⁄fig
->
≈œ√
) {

963 
	`¥ötf
("Overflowáddress\n");

964  
ERR
;

967 i‡(-1 =
rmw_fix
 && -1 =
rmw_max
) {

968 
	`¥ötf
("Please set option [-F, fixed-ecc-errbits] or [-M, max-ecc-errbits]\n");

969  
ERR
;

972 i‡(
íabÀ_fd
) {

973 i‡(
	`¥ï¨e_skù_em±y_block
(
dev
)) {

974 
	`¥ötf
("prepare skipÉmpty block failed\n");

975 
	`exô
(
EXIT_FAILURE
);

980 
«tive_ncodew‹d
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
 * dev->c⁄fig->
£˘‹_ncodew‹d
;

981 
«tive_codew‹d_size
 = 
dev
->
c⁄fig
->
codew‹d_size
;

982 
«tive_pz
 = 
«tive_ncodew‹d
 * 
«tive_codew‹d_size
;

984 
«tive_∑ge_n£˘‹
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

985 
«tive_£˘‹_ncodew‹d
 = 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
;

987 
uniq_buf„r
 = 
	`mÆloc
(
dev
->
c⁄fig
->
chunk_n£˘‹
 * ());

988 
lun_£˘‹_size
 = 
dev
->
c⁄fig
->
luns
 * dev->c⁄fig->
chunk_n£˘‹
;

989 
lun_cw_size
 = 
lun_£˘‹_size
 * 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
;

990 
lun_cw_m≠
 = 
	`mÆloc
(
lun_cw_size
);

991 i‡(
NULL
 =
uniq_buf„r
 || NULL =
lun_cw_m≠
) {

992 
	`¥ötf
("malloc failed\n");

993 
	`exô
(
EXIT_FAILURE
);

996 
dev
->
c⁄fig
->
ecc_mode
 = 
ECCMODE_DISABLE
;

997 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

998 
	`ˇlcuœã_ödúe˘_c⁄fig
(
dev
);

1000 
ä
 = (
«tive_pz
 + 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 * dev->c⁄fig->
codew‹d_size
 - 1) /

1001 (
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 * dev->c⁄fig->
codew‹d_size
);

1003 
oob_size
 = 
ä
 * 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 * dev->c⁄fig->
codew‹d_size
 - dev->
Êash
->
∑ge_size
;

1004 i‡(
oob_size
 > 0)

1005 
dev
->
Êash
->
oob_size
 = oob_size;

1006 
dev
->
Êash
->
ítúe_∑ge_size
 = dev->Êash->
∑ge_size
 + dev->Êash->
oob_size
;

1008 i‡(
	`ª_öô_devi˚
(
dev
)) {

1009 
	`¥ötf
("%s(Ëªöô devi˚ faûed\n", 
__func__
);

1010  
ERR
;

1013 
su≥Ωage_size
 = 
dev
->
c⁄fig
->
luns
 * (dev->c⁄fig->
chunk_nd©a
 + dev->c⁄fig->
chunk_nmëa
);

1014 
su≥rblock_size
 = 
dev
->
Êash
->
≈age
 * 
su≥Ωage_size
;

1015 
d©a
 = 
	`mÆloc
(
su≥rblock_size
);

1016 i‡(
NULL
 =
d©a
) {

1017 
	`¥ötf
("malloc buffer for superblock failed\n");

1018 
rc
 = 
ALLOCMEM_FAILED
;

1019  
ERR
;

1022 
	`§™d
(
£ed
);

1025 i‡(!
n›rogªss
) {

1026 
¥e_˚¡
 = 
now_˚¡
 = 0;

1027 
	`¥öt
("Rmw-Áke-ec¯öÖro˚ss...%%%02d", 
now_˚¡
);

1030 
hód
 = 
INDEP_HEAD
;

1031 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

1032 
hód
 |(1 << 
SH_READ_PLANE_SHIFT
);

1033 
	`INIT_LIST_HEAD
(&
ªq_hód
);

1034 
blk
 = 
begö_chunkblock
;

1036 
√xt_block
:

1037 i‡(
	`is_bad_su≥rblock
(
dev
, 
blk
))

1038 
skù_bad_sb
;

1040 
µa
 = 
blk
 * 
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
;

1042 
∑ge
 = 0;Öagê< 
∑ge˙t
;Öage++) {

1043 
	`mem£t
(
lun_cw_m≠
, 0xFF, 
lun_cw_size
);

1045 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1046 i‡(
	`is_bad_lunblock
(
dev
, 
lun
, 
blk
))

1049 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∑ge
, 
hód
, 0, 0);

1050 i‡(
NULL
 =
chunk_hód_ªq
) {

1051 
rc
 = 
ALLOCMEM_FAILED
;

1052 
‰ì_ªq_out
;

1054 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

1056 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

1057 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∑ge
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

1058 i‡(
NULL
 =
ªq
) {

1059 
rc
 = 
ALLOCMEM_FAILED
;

1060 
‰ì_ªq_out
;

1062 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

1065 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

1066 
ns
, 
bs
 = 0;

1067 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

1069 
ªmaö_ns
) {

1070 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

1072 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
 + 
∑ge
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 
bs
, 0);

1073 i‡(
NULL
 =
ªq
) {

1074 
rc
 = 
ALLOCMEM_FAILED
;

1075 
‰ì_ªq_out
;

1077 
ªq
->
b‰ì
 = 0;

1078 
ªq
->
rw_ítúe_buf„r
 = 1;

1079 
ªq
->
n£˘‹
 = 
ns
;

1080 
ªq
->
d©a
 = 
	`gë_d©a_buf
(Ë+ 
bs
 * (
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 * dev->c⁄fig->
codew‹d_size
);

1081 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

1083 
bs
 +
ns
;

1084 
ªmaö_ns
 -
ns
;

1089 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1090 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

1091 
‰ì_ªq_out
;

1094 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

1095 
	`upd©e_cmdqueue
(
dev
, 
lun
);

1097 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1098 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

1099 
‰ì_ªq_out
;

1102 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1103 
	`li°_dñ
(&
ªq
->
li°
);

1104 
	`‰ì_ªque°
(
ªq
);

1108 i‡(
íabÀ_fd
 && (0 =
	`ønd
(Ë% 
fd_øtio
)) {

1109 i‡(
fd_num_Êag
) {

1110 i‡(
fd_num
 < 0 || fd_num > 
«tive_∑ge_n£˘‹
 * 
dev
->
c⁄fig
->
≈œ√
)

1111 
fd_num
 = 
«tive_∑ge_n£˘‹
 * 
dev
->
c⁄fig
->
≈œ√
;

1113 
fd_num
 = 
	`ønd
(Ë% (
«tive_∑ge_n£˘‹
 * 
dev
->
c⁄fig
->
≈œ√
) + 1;

1116 
	`uniq_ønd
(
«tive_∑ge_n£˘‹
 * 
dev
->
c⁄fig
->
≈œ√
, 0, 
uniq_buf„r
);

1117 i‡(!
dißbÀ_ßme_lun
) {

1118 i‡(0 =
	`ønd
() % 32) {

1119 
èrgë_lun
 = 
	`ønd
(Ë% 
dev
->
c⁄fig
->
luns
;

1120 i‡(
fuŒ_fd
++ == 3) {

1121 
fuŒ_fd
 = 0;

1122 
fd_num
 = 
«tive_∑ge_n£˘‹
 * 
dev
->
c⁄fig
->
≈œ√
;

1125 
èrgë_lun
 = -1;

1129 
i
 = 0; i < 
fd_num
; i++) {

1130 i‡(
dißbÀ_ßme_lun
)

1131 
lun
 = 
	`ønd
(Ë% 
dev
->
c⁄fig
->
luns
;

1133 
lun
 = (
èrgë_lun
 =-1Ë? (
	`ønd
(Ë% 
dev
->
c⁄fig
->
luns
) :Åarget_lun;

1135 i‡(-1 !
fd_fixed_lun
)

1136 
lun
 = 
fd_fixed_lun
;

1138 i‡(
	`is_bad_lunblock
(
dev
, 
lun
, 
blk
))

1141 
∂™e
 = 
uniq_buf„r
[
i
] / 
«tive_∑ge_n£˘‹
;

1142 
£˘‹_off
 = 
uniq_buf„r
[
i
] % 
«tive_∑ge_n£˘‹
;

1143 
cw_off
 = 
	`ønd
(Ë% 
«tive_£˘‹_ncodew‹d
;

1145 
	`__modify_îr‹_bô
(
	`gë_d©a_buf
(Ë+ (
£˘‹_off
 * 
«tive_£˘‹_ncodew‹d
 + 
cw_off
Ë* 
«tive_codew‹d_size
, (
cur_îrbôs
 = ((
	`ønd
(Ë% 
ovîbôs
 + 1Ë+ 
dev
->
tmode
)));

1146 
lun_cw_m≠
[
lun
 * 
«tive_ncodew‹d
 * 
dev
->
c⁄fig
->
≈œ√
 + 
∂™e
 *Ç©ive_ncodew‹d + 
£˘‹_off
 * 
«tive_£˘‹_ncodew‹d
 + 
cw_off
] = 
cur_îrbôs
;

1150 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1151 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

1152 
i
 = 0; i < 
«tive_ncodew‹d
; i++) {

1153 
cur_îrbôs
 = 0;

1155 i‡(
	`is_bad_lunblock
(
dev
, 
lun
, 
blk
))

1158 i‡(
íabÀ_fd
) {

1159 i‡(0xFF !
lun_cw_m≠
[
lun
 * 
«tive_ncodew‹d
 * 
dev
->
c⁄fig
->
≈œ√
 + 
∂™e
 *Ç©ive_ncodew‹d + 
i
])

1163 i‡(-1 !
rmw_fix
) {

1164 i‡(-1 !
rmw_fix_øtio
) {

1165 i‡(0 =
	`ønd
(Ë% 
rmw_fix_øtio
)

1166 
	`__modify_îr‹_bô
(
	`gë_d©a_buf
(Ë+ 
i
 * 
«tive_codew‹d_size
, (
cur_îrbôs
 = 
rmw_fix
));

1168 
	`__modify_îr‹_bô
(
	`gë_d©a_buf
(Ë+ 
i
 * 
«tive_codew‹d_size
, (
cur_îrbôs
 = 
rmw_fix
));

1171 
	`__modify_îr‹_bô
(
	`gë_d©a_buf
(Ë+ 
i
 * 
«tive_codew‹d_size
, (
cur_îrbôs
 = (
	`ønd
(Ë% (
rmw_max
 + 1))));

1174 
lun_cw_m≠
[
lun
 * 
«tive_ncodew‹d
 * 
dev
->
c⁄fig
->
≈œ√
 + 
∂™e
 *Ç©ive_ncodew‹d + 
i
] = 
cur_îrbôs
;

1179 
now_˚¡
 = 100 * (2 * (
blk
 - 
begö_chunkblock
Ë* 
dev
->
Êash
->
≈age
 +

1180 
∑ge
 + 1Ë/ (
cou¡
 * 
dev
->
Êash
->
≈age
 * 2);

1181 i‡(
now_˚¡
 > 
¥e_˚¡
) {

1182 
	`¥öt
("\b\b%02d", 
now_˚¡
);

1183 
¥e_˚¡
 = 
now_˚¡
;

1188 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1189 i‡(
	`is_bad_lunblock
(
dev
, 
lun
, 
blk
))

1192 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

1193 i‡(
NULL
 =
chunk_hód_ªq
) {

1194 
rc
 = 
ALLOCMEM_FAILED
;

1195 
‰ì_ªq_out
;

1197 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

1199 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

1200 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

1201 i‡(
NULL
 =
ªq
) {

1202 
rc
 = 
ALLOCMEM_FAILED
;

1203 
‰ì_ªq_out
;

1205 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

1209 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1210 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

1211 
‰ì_ªq_out
;

1214 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

1215 
	`upd©e_cmdqueue
(
dev
, 
lun
);

1217 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1218 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

1219 
‰ì_ªq_out
;

1222 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1223 
	`li°_dñ
(&
ªq
->
li°
);

1224 
	`‰ì_ªque°
(
ªq
);

1228 
∑ge
 = 0;Öagê< 
∑ge˙t
;Öage++) {

1229 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1230 i‡(
	`is_bad_lunblock
(
dev
, 
lun
, 
blk
))

1233 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
 + 
∑ge
, 
hód
, 0, 0);

1234 i‡(
NULL
 =
chunk_hód_ªq
) {

1235 
rc
 = 
ALLOCMEM_FAILED
;

1236 
‰ì_ªq_out
;

1238 
∂™e
 = 0;

1239 
chunk_hód_ªq
->
b‰ì
 = 0;

1240 
chunk_hód_ªq
->
rw_ítúe_buf„r
 = 1;

1241 
chunk_hód_ªq
->
n£˘‹
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

1242 
chunk_hód_ªq
->
d©a
 = 
	`gë_d©a_buf
();

1243 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

1245 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

1246 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
 + 
∑ge
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

1247 i‡(
NULL
 =
ªq
) {

1248 
rc
 = 
ALLOCMEM_FAILED
;

1249 
‰ì_ªq_out
;

1251 
ªq
->
b‰ì
 = 0;

1252 
ªq
->
rw_ítúe_buf„r
 = 1;

1253 
ªq
->
n£˘‹
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

1254 
ªq
->
d©a
 = 
	`gë_d©a_buf
();

1255 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

1259 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1260 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

1261 
‰ì_ªq_out
;

1264 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

1265 
	`upd©e_cmdqueue
(
dev
, 
lun
);

1267 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1268 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

1269 
‰ì_ªq_out
;

1272 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1273 
	`li°_dñ
(&
ªq
->
li°
);

1274 
	`‰ì_ªque°
(
ªq
);

1277 
now_˚¡
 = 100 * (2 * (
blk
 - 
begö_chunkblock
Ë* 
dev
->
Êash
->
≈age
 + dev->flash->npage +

1278 
∑ge
 + 1Ë/ (
cou¡
 * 
dev
->
Êash
->
≈age
 * 2);

1279 i‡(
now_˚¡
 > 
¥e_˚¡
) {

1280 
	`¥öt
("\b\b%02d", 
now_˚¡
);

1281 
¥e_˚¡
 = 
now_˚¡
;

1285 
skù_bad_sb
:

1286 
blk
++;

1287 i‡(
blk
 < (
begö_chunkblock
 + 
cou¡
))

1288 
√xt_block
;

1290 i‡(!
n›rogªss
)

1291 
	`¥ötf
("\n");

1294 
‰ì_ªq_out
:

1295 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1296 
	`li°_dñ
(&
ªq
->
li°
);

1297 
	`‰ì_ªque°
(
ªq
);

1299 
	`‰ì
(
d©a
);

1300 
	`exô_ƒ™d
();

1301 i‡(
rc
)

1302 
	`¥ötf
("%s(Ëícou¡î somêîr‹\n", 
__func__
);

1303  
rc
;

1304 
	}
}

	@graphics.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/mm™.h
>

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

11 
	~<time.h
>

13 
	~"toﬁ.h
"

15 
	$døw_h‹iz⁄èl_löe
(
sx
, 
sy
, 
Àngth
, 
cﬁ‹
)

17 
pos
;

18 
íd
;

20 
íd
 = 
sx
 + 
Àngth
;

22 
	`ßve_curs‹
();

23 
	`£t_curs‹
(
sx
, 
sy
);

25 
pos
 = 
sx
;Öo†< 
íd
;Öos++)

26 
	`¥öt
("\033[1m\033[%dm.\033[0m", 
cﬁ‹
);

28 
	`lﬂd_curs‹
();

29 
	}
}

31 
	$døw_vîtiˇl_löe
(
sx
, 
sy
, 
width
, 
cﬁ‹
)

33 
pos
;

34 
íd
;

36 
íd
 = 
sy
 + 
width
;

38 
	`ßve_curs‹
();

39 
	`£t_curs‹
(
sx
, 
sy
);

41 
pos
 = 
sy
;Öo†< 
íd
;Öos++) {

42 
	`¥öt
("\033[1m\033[%dm.\033[0m", 
cﬁ‹
);

43 
	`move_down
(1);

44 
	`move_À·
(1);

47 
	`lﬂd_curs‹
();

48 
	}
}

50 
	$døw_ãxt
(
sx
, 
sy
, c⁄° *
ãxt
, 
cﬁ‹
)

52 
	`ßve_curs‹
();

53 
	`£t_curs‹
(
sx
, 
sy
);

55 
	`¥öt
("\033[1m\033[%dm%s\033[0m", 
cﬁ‹
, 
ãxt
);

57 
	`lﬂd_curs‹
();

58 
	}
}

60 
	$døw_ª˘™gÀ
(
sx
, 
sy
, 
Àngth
, 
width
, 
cﬁ‹
)

62 
	`døw_h‹iz⁄èl_löe
(
sx
, 
sy
, 
Àngth
, 
cﬁ‹
);

63 
	`døw_h‹iz⁄èl_löe
(
sx
, 
sy
+
width
-1, 
Àngth
, 
cﬁ‹
);

64 
	`døw_vîtiˇl_löe
(
sx
, 
sy
, 
width
, 
cﬁ‹
);

65 
	`døw_vîtiˇl_löe
(
sx
+
Àngth
-1, 
sy
, 
width
, 
cﬁ‹
);

66 
	}
}

68 
	$døw_∑ckage
(
sx
, 
sy
, 
Àngth
, 
width
, c⁄° *
∑πRef
, 
cﬁ‹
)

70 
	`døw_ª˘™gÀ
(
sx
, 
sy
, 
Àngth
, 
width
, 
cﬁ‹
);

71 
	`døw_ãxt
(
sx
+1, 
sy
+1, 
∑πRef
, 
cﬁ‹
);

72 
	}
}

74 
	$døw_subˇrd
(
sx
, 
sy
, 
row
, 
cﬁ
, c⁄° *
∑πRef
[], *
cﬁ‹_∑ckage
)

76 
r
 = 0;

77 
c
 = 0;

79 
r
 = 0;Ñ < 
row
;Ñ++) {

80 
c
 = 0; c < 
cﬁ
; c++) {

81 
	`døw_∑ckage
(
sx
+
c
*(
LENGTH
+
INNER_COL_SPAN
), 
sy
+
r
*(
WIDTH
+
INNER_ROW_SPAN
), LENGTH, WIDTH, *(
∑πRef
+
cﬁ
*r+c), *(
cﬁ‹_∑ckage
+col*r+c));

84 
	}
}

86 
	$døw_lun_m≠
(
sx
, 
sy
, 
row
, 
cﬁ
, c⁄° *
pkg_∑πRef_m≠
[], *
subˇrd_cﬁ‹_pkg
)

88 
lfs_sx
, 
lfs_sy
;

89 
lbs_sx
, 
lbs_sy
;

90 
rfs_sx
, 
rfs_sy
;

91 
rbs_sx
, 
rbs_sy
;

93 
lfs_sx
 = 
sx
; 
lfs_sy
 = 
sy
;

94 
lbs_sx
 = 
sx
; 
lbs_sy
 = 
sy
+
row
*(
INNER_ROW_SPAN
+
WIDTH
)+
UP_DOWN_SPAN
;

95 
rfs_sx
 = 
sx
+
cﬁ
*(
INNER_COL_SPAN
+
LENGTH
)+
LEFT_RIGHT_SPAN
; 
rfs_sy
 = 
sy
;

96 
rbs_sx
 = 
rfs_sx
; 
rbs_sy
 = 
lbs_sy
;

98 
	`døw_h‹iz⁄èl_löe
(
sx
, 
lbs_sy
-
UP_DOWN_SPAN
/2-1, 
rfs_sx
+
cﬁ
*(
INNER_COL_SPAN
+
LENGTH
), 
WHITE
);

99 
	`døw_vîtiˇl_löe
(
rfs_sx
-
LEFT_RIGHT_SPAN
/2-1, 
sy
, 
lbs_sy
+
row
*(
INNER_ROW_SPAN
+
WIDTH
), 
WHITE
);

101 
	`døw_ãxt
(
lfs_sx
+
LENGTH
, 
lfs_sy
+
row
*(
INNER_ROW_SPAN
+
WIDTH
), "À· fr⁄àside", 
WHITE
);

102 
	`døw_ãxt
(
lbs_sx
+
LENGTH
, 
lbs_sy
+
row
*(
INNER_ROW_SPAN
+
WIDTH
), "À· back side", 
WHITE
);

103 
	`døw_ãxt
(
rfs_sx
+
LENGTH
, 
rfs_sy
+
row
*(
INNER_ROW_SPAN
+
WIDTH
), "righà‰⁄àside", 
WHITE
);

104 
	`døw_ãxt
(
rbs_sx
+
LENGTH
, 
rbs_sy
+
row
*(
INNER_ROW_SPAN
+
WIDTH
), "righàback side", 
WHITE
);

106 
	`døw_subˇrd
(
lfs_sx
, 
lfs_sy
, 
row
, 
cﬁ
, 
pkg_∑πRef_m≠
, 
subˇrd_cﬁ‹_pkg
);

107 
	`døw_subˇrd
(
lbs_sx
, 
lbs_sy
, 
row
, 
cﬁ
, 
pkg_∑πRef_m≠
+
SUBCARD_PKGS
, 
subˇrd_cﬁ‹_pkg
+SUBCARD_PKGS);

108 
	`døw_subˇrd
(
rfs_sx
, 
rfs_sy
, 
row
, 
cﬁ
, 
pkg_∑πRef_m≠
+2*
SUBCARD_PKGS
, 
subˇrd_cﬁ‹_pkg
+2*SUBCARD_PKGS);

109 
	`døw_subˇrd
(
rbs_sx
, 
rbs_sy
, 
row
, 
cﬁ
, 
pkg_∑πRef_m≠
+3*
SUBCARD_PKGS
, 
subˇrd_cﬁ‹_pkg
+3*SUBCARD_PKGS);

112 
	}
}

114 
gë_pkg_cﬁ‹
(c⁄° *
pkg
, (*
phy_lun_m≠_cﬁ‹
)[256])

116 
	ghl_ödex
 = 0;

117 
	gpkg_∆un
 = 0;

118 
	gcﬁ‹
;

120 
	ghl_ödex
 = ((
pkg
[8]=
HBYTE
Ë? HBYTE : 
LBYTE
);

122 
	gcﬁ‹
 = 
phy_lun_m≠_cﬁ‹
[
hl_ödex
][
pkg
[
pkg_∆un
]];

124 
	gpkg_∆un
 = 0;Ökg_∆u¿< 
	gPKG_LUNS
;Ökg_nlun++) {

125 i‡(
	gphy_lun_m≠_cﬁ‹
[
hl_ödex
][
pkg
[
pkg_∆un
]] =
RED
)

126 
cﬁ‹
 = 
RED
;

129  
	gcﬁ‹
;

	@graphics.h

1 #i‚de‡
__GRAPHICS_H


2 
	#__GRAPHICS_H


	)

5 
	#move_up
(
n
Ëdÿ{ 
	`¥ötf
("\033[%dA",Ç); } 0)

6 
	#move_down
(
n
Ëdÿ{ 
	`¥ötf
("\033[%dB",Ç); } 0)

7 
	#move_right
(
n
Ëdÿ{ 
	`¥ötf
("\033[%dC",Ç); } 0)

8 
	#move_À·
(
n
Ëdÿ{ 
	`¥ötf
("\033[%dD",Ç); } 0)

9 
	#movëo_hód
(Ëdÿ{ 
	`¥ötf
("\r"); } 0)

10 
	#˛ór_löe
(Ëdÿ{ 
	`¥ötf
("\033[K"); } 0)

11 

	)

12 
	#ßve_curs‹
(Ëdÿ{ 
	`¥ötf
("\033[s"); } 0)

13 
	#lﬂd_curs‹
(Ëdÿ{ 
	`¥ötf
("\033[u"); } 0)

14 

	)

15 
	#˛ór_s¸ìn
(Ëdÿ{ 
	`¥ötf
("\033[2J"); } 0)

16 
	#hide_curs‹
 dÿ{ 
	`¥ötf
("\033[?25l"); } 0)

17 
	#show_curs‹
 dÿ{ 
	`¥ötf
("\033[?25h"); } 0)

18 
	#£t_curs‹
(
x
,
y
Ëdÿ{ 
	`¥ötf
("\033[%d;%dH", y, x); } 0)

19 
	#ª£t_curs‹
(Ë
	`£t_curs‹
(0,0)

	)

21 
	#LENGTH
 5

	)

22 
	#WIDTH
 3

	)

23 
	#PKG_ATTR
 1

	)

24 
	#PKG_LUNS
 8

	)

25 
	#SUBCARD_ROW
 
sc_size
.
subˇrd_row


	)

26 
	#SUBCARD_COL
 
sc_size
.
subˇrd_cﬁ


	)

27 
	#SUBCARD_CNT
 
sc_size
.
subˇrd_˙t


	)

28 
	#SUBCARD_PKGS
 (
SUBCARD_ROW
 * 
SUBCARD_COL
)

	)

29 
	#TOTAL_PKG_CNT
 (
SUBCARD_CNT
 * 
SUBCARD_PKGS
)

	)

30 
	#UP_DOWN_SPAN
 3

	)

31 
	#LEFT_RIGHT_SPAN
 8

	)

32 
	#INNER_COL_SPAN
 2

	)

33 
	#INNER_ROW_SPAN
 1

	)

34 
	#LUN_MAP_SX
 2

	)

35 
	#LUN_MAP_SY
 2

	)

38 
	ecﬁ‹
 {

39 
	mBLACK
 = 30,

40 
	mRED
,

41 
	mGREEN
,

42 
	mYELLOW
,

43 
	mBLUE
,

44 
	mPURPLE
,

45 
	mDARK_GREEN
,

46 
	mWHITE
,

47 
	mCOLOR_TOTAL


50 
	ehigh_low_byã
 {

51 
	mLBYTE
 = 0,

52 
	mHBYTE
 = 1,

53 
	mBYTE_TOTLE


57 
døw_h‹iz⁄èl_löe
(
sx
, 
sy
, 
Àngth
, 
cﬁ‹
);

58 
døw_vîtiˇl_löe
(
sx
, 
sy
, 
width
, 
cﬁ‹
);

59 
døw_ãxt
(
sx
, 
sy
, c⁄° *
ãxt
, 
cﬁ‹
);

60 
døw_ª˘™gÀ
(
sx
, 
sy
, 
Àngth
, 
width
, 
cﬁ‹
);

61 
døw_∑ckage
(
sx
, 
sy
, 
Àngth
, 
width
, c⁄° *
∑πRef
, 
cﬁ‹
);

62 
døw_subˇrd
(
sx
, 
sy
, 
row
, 
cﬁ
, c⁄° *
∑πRef
[], *
cﬁ‹_∑ckage
);

63 
døw_lun_m≠
(
sx
, 
sy
, 
row
, 
cﬁ
, c⁄° *
pkg_∑πRef_m≠
[], *
subˇrd_cﬁ‹_pkg
);

64 
gë_pkg_cﬁ‹
(c⁄° *
pkg
, (*
phy_lun_m≠_cﬁ‹
)[256]);

	@help.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~<as£π.h
>

4 
	~<°rögs.h
>

5 
	~<sys/time.h
>

8 *
	gƒ™d_d©a
;

9 
	gƒ™d_max
, 
	gƒ™d_pos
;

11 
	$öô_ƒ™d
(
num
, 
£ed
)

13 
i
, 
j
, 
tmp
;

15 
ƒ™d_d©a
 = 
	`mÆloc
(
num
 * ());

16 
	`as£π
(
NULL
 !
ƒ™d_d©a
);

17 
ƒ™d_pos
 = 0;

18 
ƒ™d_max
 = 
num
;

20 
i
 = 0; i < 
num
; i++)

21 
ƒ™d_d©a
[
i
] = i;

23 i‡(
£ed
)

24 
	`§™d
(
£ed
);

26 
i
 = 
num
 - 1; i > 0; i--) {

27 
j
 = 
	`ønd
(Ë% 
i
;

29 
tmp
 = 
ƒ™d_d©a
[
i
];

30 
ƒ™d_d©a
[
i
] =Çønd_d©a[
j
];

31 
ƒ™d_d©a
[
j
] = 
tmp
;

36 
	}
}

38 
	$exô_ƒ™d
()

40 
	`‰ì
(
ƒ™d_d©a
);

41 
ƒ™d_pos
 = 0;

42 
ƒ™d_max
 = 0;

43 
	}
}

45 
	$ƒ™d
()

47 
	`as£π
(
ƒ™d_pos
 < 
ƒ™d_max
);

48  
ƒ™d_d©a
[
ƒ™d_pos
++];

49 
	}
}

51 
	$gë_ƒ™d
(
idx
)

53  
ƒ™d_d©a
[
idx
 % 
ƒ™d_max
];

54 
	}
}

56 
	$uniq_ønd
(
num
, 
£ed
, 
uniq_buf„r
[])

58 
i
, 
j
, 
tmp
;

59 
timevÆ
 
tv
;

61 
	`as£π
(
NULL
 !
uniq_buf„r
);

63 
i
 = 0; i < 
num
; i++)

64 
uniq_buf„r
[
i
] = i;

66 i‡(
£ed
) {

67 
	`§™d
(
£ed
);

69 i‡(
	`gëtimeofday
(&
tv
, 
NULL
)) {

70 
	`¥ötf
("gettimeofday failed when generate seed\n");

71 
	`exô
(
EXIT_FAILURE
);

73 
	`§™d
(
tv
.
tv_u£c
);

76 
i
 = 
num
 - 1; i > 0; i--) {

77 
j
 = 
	`ønd
(Ë% 
i
;

79 
tmp
 = 
uniq_buf„r
[
i
];

80 
uniq_buf„r
[
i
] = uniq_buf„r[
j
];

81 
uniq_buf„r
[
j
] = 
tmp
;

86 
	}
}

	@ifmode.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/mm™.h
>

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

11 
	~<time.h
>

13 
	~"toﬁ.h
"

16 
__u8
 *
	$gë_°ïwr
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_ªque°
 *
wrhód
, 
off
, 
ty≥
)

18 
idx
, 
∂™eidx
, 
∂™eoff
;

19 
sh™n⁄_ªque°
 *
tmp
;

21 
idx
 = 0;

23 i‡(!
ty≥
) {

24 
∂™eidx
 = 
off
 / 
dev
->
c⁄fig
->
nd©a
;

25 
∂™eoff
 = 
off
 % 
dev
->
c⁄fig
->
nd©a
;

27 
∂™eidx
 = 
off
 / 
dev
->
c⁄fig
->
nmëa
;

28 
∂™eoff
 = 
off
 % 
dev
->
c⁄fig
->
nmëa
;

32 i‡(0 =
∂™eidx
)

33  (!
ty≥
Ë? (
__u8
 *)
wrhód
->
d©a
 + 
∂™eoff
 : (__u8 *)wrhód->
mëad©a
 +Ölaneoff;

35 
	`li°_f‹_óch_íåy
(
tmp
, &
wrhód
->
chunk_li°
, chunk_list) {

36 i‡(++
idx
 =
∂™eidx
)

39 i‡(
tmp
 =
wrhód
) {

40 
	`¥ötf
("%s(Ë%d BUG!!!\n", 
__func__
, 
__LINE__
);

41 
	`exô
(
EXIT_FAILURE
);

44  (!
ty≥
Ë? (
__u8
 *)
tmp
->
d©a
 + 
∂™eoff
 : (__u8 *Èmp->
mëad©a
 +Ölaneoff;

45 
	}
}

47 
__u8
 *
	$gë_°ïrd
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_ªque°
 *
rdhód
, 
off
, 
ty≥
)

49 
lun
, 
idx
, 
∂™eidx
, 
∂™eoff
, 
ªqidx
, 
ªqoff
;

50 
sh™n⁄_ªque°
 *
tmp
;

52 
idx
 = 0;

53 
lun
 = 
rdhód
->lun;

55 i‡(!
ty≥
) {

56 
∂™eidx
 = 
off
 / 
dev
->
c⁄fig
->
nd©a
;

57 
∂™eoff
 = 
off
 % 
dev
->
c⁄fig
->
nd©a
;

58 
ªqidx
 = 
∂™eoff
 / (
dev
->
c⁄fig
->
£˘‹_size
 * 8Ë+ 
∂™eidx
 * ((dev->c⁄fig->
∑ge_n£˘‹
 + 8 - 1) / 8);

59 
ªqoff
 = 
∂™eoff
 % (
dev
->
c⁄fig
->
£˘‹_size
 * 8);

61 
∂™eidx
 = 
off
 / 
dev
->
c⁄fig
->
nmëa
;

62 
∂™eoff
 = 
off
 % 
dev
->
c⁄fig
->
nmëa
;

63 
ªqidx
 = 
∂™eoff
 / (8 * 8Ë+ 
∂™eidx
 * ((
dev
->
c⁄fig
->
∑ge_n£˘‹
 + 8 -1) / 8);

64 
ªqoff
 = 
∂™eoff
 % (8 * 8);

68 i‡(0 =
ªqidx
)

69  (!
ty≥
Ë? (
__u8
 *)
rdhód
->
d©a
 + 
ªqoff
 : (__u8 *Ïdhód->
mëad©a
 +Ñeqoff;

71 
	`li°_f‹_óch_íåy
(
tmp
, &
rdhód
->
li°
,Üist) {

72 i‡(++
idx
 =
ªqidx
)

75 i‡(
tmp
 =
rdhód
 ||Åmp->
lun
 !=Üun) {

76 
	`¥ötf
("%s(Ë%d BUG!!!\n", 
__func__
, 
__LINE__
);

77 
	`exô
(
EXIT_FAILURE
);

80  (!
ty≥
Ë? (
__u8
 *)
tmp
->
d©a
 + 
ªqoff
 : (__u8 *Èmp->
mëad©a
 +Ñeqoff;

81 
	}
}

83 
	$byã_diff_numbî
(
__u8
 
x
, __u8 
y
)

85 
i
, 
˙t
;

86 
__u8
 
mask
 = 1;

88 
˙t
 = 0, 
i
 = 0; i < 8; i++) {

89 i‡–(
x
 & (
mask
 << 
i
)Ë!(
y
 & (mask << i)) )

90 
˙t
++;

93  
˙t
;

94 
	}
}

96 
	$com∑ª_n€cc_rdwr_ªque°s
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_ªque°
 *
wrhód
, sh™n⁄_ªque° *
rdhód
, **
lun_ecc_°©i°ics
)

98 
i
, 
off
, 
°ï
, 
∆
;

99 
__u8
 *
°ïwr
, *
°ïrd
;

102 
∆
 = 0;

103 
°ï
 = 16;

105 
off
 = 0; of‡< 
dev
->
c⁄fig
->
chunk_nd©a
; of‡+
°ï
) {

106 
°ïwr
 = 
	`gë_°ïwr
(
dev
, 
wrhód
, 
off
, 0);

107 
°ïrd
 = 
	`gë_°ïrd
(
dev
, 
rdhód
, 
off
, 0);

110 i‡(0 =
	`øndom
() % (65536 * 128))

111 
°ïwr
[
	`øndom
() % 16] =Ñandom();

114 i‡(
	`memcmp
(
°ïwr
, 
°ïrd
, 
°ï
)) {

115 i‡(0 =
∆
)

116 
	`¥ötf
("\n\033[0;35m--> DATA (sb=%dÜun=%dÖage=%d)\033[0m:\n", 
wrhód
->
chunk_block
, wrhód->
lun
, wrhód->
∑ge
);

117 
∆
++;

118 
	`¥ötf
("0x%04X: ", 
off
);

120 
i
 = 0; i < 
°ï
; i++) {

121 i‡(
°ïwr
[
i
] =
°ïrd
[i])

122 
	`¥ötf
("%02X ", 
°ïwr
[
i
]);

124 
	`¥ötf
("\033[0;1;32m%02X\033[0m ", 
°ïwr
[
i
]);

126 
	`¥ötf
(" | ");

128 
i
 = 0; i < 
°ï
; i++) {

129 i‡(
°ïrd
[
i
] =
°ïwr
[i]) {

130 
	`¥ötf
("%02X ", 
°ïrd
[
i
]);

132 
lun_ecc_°©i°ics
[
wrhód
->
lun
][0] +
	`byã_diff_numbî
(
°ïwr
[
i
], 
°ïrd
[i]);

133 
	`¥ötf
("\033[0;1;31m%02X\033[0m ", 
°ïrd
[
i
]);

136 
	`¥ötf
("\n");

141 
∆
 = 0;

142 
°ï
 =8;

144 
off
 = 0; of‡< 
dev
->
c⁄fig
->
chunk_nmëa
; of‡+
°ï
) {

145 
°ïwr
 = 
	`gë_°ïwr
(
dev
, 
wrhód
, 
off
, 1);

146 
°ïrd
 = 
	`gë_°ïrd
(
dev
, 
rdhód
, 
off
, 1);

149 i‡(0 =
	`øndom
() % 65536)

150 
°ïwr
[
	`øndom
() % 16] =Ñandom();

153 i‡(
	`memcmp
(
°ïwr
, 
°ïrd
, 
°ï
)) {

154 i‡(0 =
∆
)

155 
	`¥ötf
("\n\033[0;34m--> METADATA (sb=%dÜun=%dÖage=%d)\033[0m:\n", 
wrhód
->
chunk_block
, wrhód->
lun
, wrhód->
∑ge
);

156 
∆
++;

157 
	`¥ötf
("0x%04X: ", 
off
);

159 
i
 = 0; i < 
°ï
; i++) {

160 i‡(
°ïwr
[
i
] =
°ïrd
[i])

161 
	`¥ötf
("%02X ", 
°ïwr
[
i
]);

163 
	`¥ötf
("\033[0;1;32m%02X\033[0m ", 
°ïwr
[
i
]);

165 
	`¥ötf
(" | ");

167 
i
 = 0; i < 
°ï
; i++) {

168 i‡(
°ïrd
[
i
] =
°ïwr
[i]) {

169 
	`¥ötf
("%02X ", 
°ïrd
[
i
]);

171 
lun_ecc_°©i°ics
[
wrhód
->
lun
][0] +
	`byã_diff_numbî
(
°ïwr
[
i
], 
°ïrd
[i]);

172 
	`¥ötf
("\033[0;1;31m%02X\033[0m ", 
°ïrd
[
i
]);

175 
	`¥ötf
("\n");

178 
	}
}

180 
	$memcmp_hlbyã
(
__u8
 *
buf1
, __u8 *
buf2
, 
cou¡
, 
HLBYTE
)

182 
i
 = 0;

183 
°©us
 = 0;

184 
°¨tPos
 = 0;

186 i‡(
HLBYTE
 !
LBYTE
 && HLBYTE !
HBYTE
)

187  
	`memcmp
(
buf1
, 
buf2
, 
cou¡
);

189 
°¨tPos
 = (
LBYTE
 =
HLBYTE
 ? 0 : 1);

191 
i
 = 
°¨tPos
; i < 
cou¡
; i+=2) {

192 i‡(
buf1
[
i
] !
buf2
[i]) {

193 
°©us
 = (
buf1
[
i
] < 
buf2
[i] ? -1 : 1);

198  
°©us
;

199 
	}
}

201 
	$com∑ª_n€cc_rdwr_ªque°s_hÕage
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_ªque°
 *
wrhód
, sh™n⁄_ªque° *
rdhód
, **
lun_ecc_°©i°ics
, 
HLBYTE
)

203 
i
, 
off
, 
°ï
;

204 
__u8
 *
°ïwr
, *
°ïrd
;

205 
°¨tPos
;

208 
°ï
 = 16;

209 
°¨tPos
 = 0;

211 i‡(
HBYTE
 !
HLBYTE
 && 
LBYTE
 != HLBYTE) {

212 
	`¥ötf
("\n%s(Ë%d BUG!!!\n", 
__func__
, 
__LINE__
);

213 
	`exô
(
EXIT_FAILURE
);

216 
°¨tPos
 = ((
LBYTE
 =
HLBYTE
) ? 0 : 1);

218 
off
 = 0; of‡< 
dev
->
c⁄fig
->
chunk_nd©a
; of‡+
°ï
) {

219 
°ïwr
 = 
	`gë_°ïwr
(
dev
, 
wrhód
, 
off
, 0);

220 
°ïrd
 = 
	`gë_°ïrd
(
dev
, 
rdhód
, 
off
, 0);

222 i‡(
	`memcmp_hlbyã
(
°ïwr
, 
°ïrd
, 
°ï
, 
HLBYTE
)) {

223 
i
 = 
°¨tPos
; i < 
°ï
; i += 2) {

224 i‡(
°ïrd
[
i
] !
°ïwr
[i])

225 
lun_ecc_°©i°ics
[
wrhód
->
lun
][0] +
	`byã_diff_numbî
(
°ïwr
[
i
], 
°ïrd
[i]);

231 
°ï
 =8;

233 
off
 = 0; of‡< 
dev
->
c⁄fig
->
chunk_nmëa
; of‡+
°ï
) {

234 
°ïwr
 = 
	`gë_°ïwr
(
dev
, 
wrhód
, 
off
, 1);

235 
°ïrd
 = 
	`gë_°ïrd
(
dev
, 
rdhód
, 
off
, 1);

237 i‡(
	`memcmp_hlbyã
(
°ïwr
, 
°ïrd
, 
°ï
, 
HLBYTE
)) {

238 
i
 = 
°¨tPos
; i < 
°ï
; i += 2) {

239 i‡(
°ïrd
[
i
] !
°ïwr
[i])

240 
lun_ecc_°©i°ics
[
wrhód
->
lun
][0] +
	`byã_diff_numbî
(
°ïwr
[
i
], 
°ïrd
[i]);

244 
	}
}

247 
	$sh™n⁄_ifmode_ußge
()

249 
	`¥ötf
("Description:\n");

250 
	`¥ötf
("\tUse dummy write/cachereadÅo verify hardware interface of dataÅransmission\n\n");

252 
	`¥ötf
("Usage:\n");

253 
	`¥ötf
("\tifmode begin_chunkblock count [option]\n\n");

255 
	`¥ötf
("Options:\n");

256 
	`¥ötf
("\t-e, seed=SEED\n"

258 
	`¥ötf
("\t-w, --write-ifmode=[async/sync]\n"

260 
	`¥ötf
("\t-r, --read-ifmode=[async/sync]\n"

262 
	`¥ötf
("\t-t, --absent-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

264 
	`¥ötf
("\t-T, --present-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

266 
	`¥ötf
("\t-o, --print-old-format\n"

268 
	`¥ötf
("\t-N, --noprogress\n"

270 
	`¥ötf
("\t-b, --write-fixed-byte=BYTE(hex)\n"

272 
	`¥ötf
("\t-i, --write-inc-byte\n"

274 
	`¥ötf
("\t-s, --highbyte-same-lowbyte\n"

276 
	`¥ötf
("\t-n, --highbyte-not-lowbyte\n"

278 
	`¥ötf
("\t-k, --evenclock-not-oddclock\n"

280 
	`¥ötf
("\t-l, --lun-total-ecc-limit=N\n"

282 
	`¥ötf
("\t-m, --lun-max-ecc-limit=N\n"

284 
	`¥ötf
("\t-g, --logfile=FILE\n"

286 
	`¥ötf
("\t-d, --draw-lun-map\n"

288 
	`¥ötf
("\t-y, --high-low-byte=N\n"

290 
	`¥ötf
("\t-h, --help\n"

293 
	`¥ötf
("Examples:\n");

294 
	`¥ötf
("\tifmode 0 1 -tÜoglun:3-6,7,9\n"

296 
	`¥ötf
("\tifmode 0 1 -tÖhylun:3,5-7,12\n"

298 
	`¥ötf
("\tifmode 0 1 -TÜoglun:2,7,10-12\n"

301 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk\n");

302 
	}
}

304 
	#logout
(
x
...Ëdÿ{ 
	`¥ötf
(x); i‡(
NULL
 !
logÂ
Ë
	`Ârötf
÷ogÂ, x); } 0)

	)

306 
gë_pkg_ödex
(
phylun
, c⁄° 
pkg_phylun_num
[][8+
PKG_ATTR
], 
HLBYTE
)

308 
	gpkg_˙t
 = 0;

309 
	gpkg_∆uns
 = 0;

310 c⁄° *
	gpkg
 = 
NULL
;

312 
	gpkg_˙t
 = 0;Ökg_˙à< 
	gTOTAL_PKG_CNT
;Ökg_cnt++) {

314 
	gpkg
 = 
pkg_phylun_num
[
pkg_˙t
];

316 i‡(
	gHLBYTE
 !
pkg
[8])

319 
	gpkg_∆uns
 = 0;Ökg_∆un†< 
	gPKG_LUNS
;Ökg_nluns++) {

320 i‡(
	gphylun
 =
pkg
[
pkg_∆uns
])

321  
pkg_˙t
;

329 
	$sh™n⁄_ifmode
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

331 
›ti⁄
 
l⁄g›ts
 [] = {

332 {"£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

333 {"wrôe-ifmode", 
ªquúed_¨gumít
, 
NULL
, 'w'},

334 {"ªad-ifmode", 
ªquúed_¨gumít
, 
NULL
, 'r'},

335 {"ab£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 't'},

336 {"¥e£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 'T'},

337 {"¥öt-ﬁd-f‹m©", 
no_¨gumít
, 
NULL
, 'o'},

338 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

339 {"wrôe-fixed-byã", 
ªquúed_¨gumít
, 
NULL
, 'b'},

340 {"wrôe-öc-byã", 
no_¨gumít
, 
NULL
, 'i'},

341 {"highbyã-ßme-lowbyã", 
no_¨gumít
, 
NULL
, 's'},

342 {"highbyã-nŸ-lowbyã", 
no_¨gumít
, 
NULL
, 'n'},

343 {"eví˛ock-nŸ-odd˛ock", 
no_¨gumít
, 
NULL
, 'k'},

344 {"lun-tŸÆ-ecc-limô", 
ªquúed_¨gumít
, 
NULL
, 'l'},

345 {"lun-max-ecc-limô", 
ªquúed_¨gumít
, 
NULL
, 'm'},

346 {"logfûe", 
ªquúed_¨gumít
, 
NULL
, 'g'},

347 {"døw-lun-m≠", 
no_¨gumít
, 
NULL
, 'd'},

348 {"high-low-byã", 
ªquúed_¨gumít
, 
NULL
, 'y'},

349 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

352 
›t
;

353 
£ed
, 
wrifmode
, 
rdifmode
, 
¥_ﬁd_f‹m©
;

354 
i
, 
rc
 = 0;

355 
blk
, 
lun
, 
∂™e
, 
∑ge
, 
µa
;

356 
begö_chunkblock
, 
cou¡
;

357 
hód
;

358 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

359 
li°_hód
 
ªq_hód
;

360 **
lun_ecc_°©i°ics
;

361 
n›rogªss
, 
¥e_˚¡
, 
now_˚¡
;

362 
sh™n⁄_ªque°
 *
wrhód
 = 
NULL
, *
rdhód
 = NULL;

363 
bound¨y
, 
fixed
;

364 
hi_ßme_lo
 = 0, 
hi_nŸ_lo
 = 0, 
eví_nŸ_odd
 = 0;

365 
öc
 = 0;

366 
lun_tŸÆ_ecc_limô
 = 0x7FFFFFFFFFFFFFFFl;

367 
FILE
 *
logÂ
 = 
NULL
;

368 
lun_max_ecc_limô
 = 0xFB-1;

369 
døw_lun
 = 0;

370 
hlbyã
 = 
BYTE_TOTLE
;

371 
hlbyã_pbd
 = 
BYTE_TOTLE
;

372 c⁄° 
dev_pkg_phylun_num
[
TOTAL_PKG_CNT
][8+
PKG_ATTR
];

373 c⁄° *
pkg_∑πRef_m≠
[
TOTAL_PKG_CNT
];

375 
dev
->
dev_ty≥
) {

377 
K7F_MAP
:

378 
	`mem˝y
(
dev_pkg_phylun_num
, 
dev_pkg_phylun_k7f
, (dev_pkg_phylun_num));

379 
	`mem˝y
(
pkg_∑πRef_m≠
, 
pkg_∑πRef_k7f_m≠
, (pkg_partRef_map));

381 
K7h_DUAL_MAP
:

382 
	`mem˝y
(
dev_pkg_phylun_num
, 
dev_pkg_phylun_k7h_duÆ
, (dev_pkg_phylun_num));

383 
	`mem˝y
(
pkg_∑πRef_m≠
, 
pkg_∑πRef_k7h_duÆ_m≠
, (pkg_partRef_map));

385 
FIJI_MAP
:

386 
	`mem˝y
(
dev_pkg_phylun_num
, 
dev_pkg_phylun_fiji
, (dev_pkg_phylun_num));

387 
	`mem˝y
(
pkg_∑πRef_m≠
, 
pkg_∑πRef_fiji_m≠
, (pkg_partRef_map));

391 i‡(1 =
dev
->
≥r_byã_dißbÀ
) {

392 
hlbyã_pbd
 = 
HBYTE
;

393 } i‡(2 =
dev
->
≥r_byã_dißbÀ
) {

394 
hlbyã_pbd
 = 
LBYTE
;

397 
£ed
 = 
	`gë£ed
(0);

398 
wrifmode
 = 
rdifmode
 = 
dev
->
c⁄fig
->
ifmode
;

399 
¥_ﬁd_f‹m©
 = 0;

400 
n›rogªss
 = 0;

401 
fixed
 = -1;

403 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":e:w:r:t:T:oNb:i¢kl:m:g:dy:h", 
l⁄g›ts
, 
NULL
)) != -1) {

404 
›t
) {

406 
£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

409 i‡(!
	`°rcmp
("sync", 
›èrg
) || !strcmp("SYNC", optarg)) {

410 
wrifmode
 = 
IFMODE_SYNC
;

411 } i‡(!
	`°rcmp
("async", 
›èrg
) || !strcmp("ASYNC", optarg)) {

412 
wrifmode
 = 
IFMODE_ASYNC
;

414 
	`¥ötf
("[-w, --write-ifmode] must be 'async' or 'sync'\n");

415  
ERR
;

419 i‡(!
	`°rcmp
("sync", 
›èrg
) || !strcmp("SYNC", optarg)) {

420 
rdifmode
 = 
IFMODE_SYNC
;

421 } i‡(!
	`°rcmp
("async", 
›èrg
) || !strcmp("ASYNC", optarg)) {

422 
rdifmode
 = 
IFMODE_ASYNC
;

424 
	`¥ötf
("[-r, --read-ifmode] must be 'async' or 'sync'\n");

425  
ERR
;

429 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 1);

432 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 0);

435 
¥_ﬁd_f‹m©
 = 1;

438 
n›rogªss
 = 1;

441 
fixed
 = 
	`°πoul
(
›èrg
, 
NULL
, 16);

444 
öc
 = 1;

447 
hi_ßme_lo
 = 1;

450 
hi_nŸ_lo
 = 1;

453 
eví_nŸ_odd
 = 1;

456 
lun_tŸÆ_ecc_limô
 = 
	`©oi
(
›èrg
);

457 i‡(0 =
lun_tŸÆ_ecc_limô
) {

458 
	`¥ötf
("option -l, --lun-total-ecc-limit shouldÇot be 0!\n");

459 
	`exô
(
EXIT_FAILURE
);

463 
lun_max_ecc_limô
 = 
	`©oi
(
›èrg
);

464 i‡(0 =
lun_max_ecc_limô
) {

465 
	`¥ötf
("option -m, --lun-max-ecc-limit shouldÇot be 0!\n");

466 
	`exô
(
EXIT_FAILURE
);

470 
logÂ
 = 
	`°∫cmp
(
›èrg
, "+", 1Ë? 
	`f›í
(optarg, "w") : fopen(optarg + 1, "a");

471 i‡(
NULL
 =
logÂ
) {

472 
	`≥º‹
("ifmode openÜogfileÉrror:");

473 
	`exô
(
EXIT_FAILURE
);

475 
time_t
 
â
;

476 
â
 = 
	`time
(
NULL
);

477 
	`Ârötf
(
logÂ
, "[IFMODE LOG BEG %s] --> %s", 
dev
->
«me
, 
	`˘ime
(&
â
));

481 
døw_lun
 = 1;

484 
hlbyã
 = 
	`©oi
(
›èrg
);

487 
	`sh™n⁄_ifmode_ußge
();

490 
	`sh™n⁄_ifmode_ußge
();

491  
ERR
;

495 i‡(
¨gc
 - 
›töd
 != 2) {

496 
	`sh™n⁄_ifmode_ußge
();

497  
ERR
;

500 i‡(
døw_lun
 && (
DEV_TOTAL
 =
dev
->
dev_ty≥
)) {

501 
	`sh™n⁄_ifmode_ußge
();

502  
ERR
;

505 i‡(
hi_ßme_lo
 && 
hi_nŸ_lo
) {

506 
	`¥ötf
("option --highbyte-same-lowbyteánd --highbyte-not-lowbyteáre mutex!\n");

507 
	`exô
(
EXIT_FAILURE
);

510 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

511 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

512 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
/dev->
c⁄fig
->
≈œ√
) {

513 
	`¥ötf
("Overflowáddress\n");

514  
OVERFLOW_ADDR
;

518 
lun_ecc_°©i°ics
 = 
	`zmÆloc
(
dev
->
c⁄fig
->
luns
 * (*lun_ecc_statistics));

519 i‡(
NULL
 =
lun_ecc_°©i°ics
) {

520 
rc
 = 
ALLOCMEM_FAILED
;

521 
out
;

523 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

524 
lun_ecc_°©i°ics
[
lun
] = 
	`zmÆloc
(256 * (lun_ecc_statistics[lun]));

525 i‡(
NULL
 =
lun_ecc_°©i°ics
[
lun
]) {

526 
rc
 = 
ALLOCMEM_FAILED
;

527 
‰ì_lun_ecc_°©i°ics
;

531 
hód
 = 
INDEP_HEAD
;

532 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

533 
hód
 |(1 << 
SH_WRITE_PLANE_SHIFT
);

535 i‡(!
n›rogªss
) {

536 
¥e_˚¡
 = 
now_˚¡
 = 0;

537 
	`¥öt
("Su≥r-ifmodêöÖro˚ss...%%%02d", 
now_˚¡
);

540 
	`INIT_LIST_HEAD
(&
ªq_hód
);

541 
	`§™d
(
£ed
);

543 
blk
 = 
begö_chunkblock
; blk < begö_chunkblock + 
cou¡
; blk++) {

544 
µa
 = 
blk
 * 
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
;

545 
∑ge
 = 0;

547 
√xt_block_∑ge
:

548 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

550 
rc
 = (
IFMODE_ASYNC
 =
wrifmode
Ë? 
	`sh™n⁄_su≥r_async
(
dev
Ë: 
	`sh™n⁄_su≥r_sync
(dev);

551 i‡(
rc
)

552 
‰ì_ªq_out
;

554 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
 + 
∑ge
,

555 
hód
 | (1 << 
SH_WRITE_DUMMY_SHIFT
), 0, 
dev
->
c⁄fig
->
∑ge_n£˘‹
);

556 i‡(
NULL
 =
chunk_hód_ªq
) {

557 
rc
 = 
ALLOCMEM_FAILED
;

558 
‰ì_ªq_out
;

561 i‡(
öc
) {

562 
i
 = 0; i < 
dev
->
c⁄fig
->
nd©a
; i++)

563 
chunk_hód_ªq
->
d©a
[
i
] = i;

564 
i
 = 0; i < 
dev
->
c⁄fig
->
nmëa
; i++)

565 ((
__u8
 *)
chunk_hód_ªq
->
mëad©a
)[
i
] = i;

566 } i‡(-1 !
fixed
) {

567 
	`mem£t
(
chunk_hód_ªq
->
d©a
, 
fixed
, 
dev
->
c⁄fig
->
nd©a
);

568 
	`mem£t
(
chunk_hód_ªq
->
mëad©a
, 
fixed
, 
dev
->
c⁄fig
->
nmëa
);

570 
	`∑d_ønd
(
chunk_hód_ªq
->
d©a
, 
dev
->
c⁄fig
->
nd©a
);

571 
	`∑d_ønd
(
chunk_hód_ªq
->
mëad©a
, 
dev
->
c⁄fig
->
nmëa
);

574 i‡(
hi_ßme_lo
 || 
hi_nŸ_lo
) {

575 
i
 = 1; i < 
dev
->
c⁄fig
->
nd©a
; i+=2)

576 
chunk_hód_ªq
->
d©a
[
i
] = 
hi_ßme_lo
 ? chunk_head_req->data[i-1] : ~chunk_head_req->data[i-1];

577 
i
 = 1; i < 
dev
->
c⁄fig
->
nmëa
; i+=2)

578 ((
__u8
 *)
chunk_hód_ªq
->
mëad©a
)[
i
] = 
hi_ßme_lo
 ? ((__u8 *)chunk_head_req->metadata)[i-1] : ~((__u8 *)chunk_head_req->metadata)[i-1];

581 i‡(
eví_nŸ_odd
) {

582 i‡(2 =
dev
->
iowidth
) {

583 
i
 = 1; i < 
dev
->
c⁄fig
->
nd©a
/2; i+=2)

584 ((
__u16
 *)
chunk_hód_ªq
->
d©a
)[
i
] = ~((__u16 *)chunk_head_req->data)[i-1];

585 
i
 = 1; i < 
dev
->
c⁄fig
->
nmëa
/2; i+=2)

586 ((
__u16
 *)
chunk_hód_ªq
->
mëad©a
)[
i
] = ~((__u16 *)chunk_head_req->metadata)[i-1];

588 
i
 = 1; i < 
dev
->
c⁄fig
->
nd©a
; i+=2)

589 ((
__u8
 *)
chunk_hód_ªq
->
d©a
)[
i
] = ~((__u8 *)chunk_head_req->data)[i-1];

590 
i
 = 1; i < 
dev
->
c⁄fig
->
nmëa
; i+=2)

591 ((
__u8
 *)
chunk_hód_ªq
->
mëad©a
)[
i
] = ~((__u8 *)chunk_head_req->metadata)[i-1];

594 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

596 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

597 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
,

598 
hód
 | (1 << 
SH_WRITE_DUMMY_SHIFT
), 0, 
dev
->
c⁄fig
->
∑ge_n£˘‹
);

599 i‡(
NULL
 =
ªq
) {

600 
rc
 = 
ALLOCMEM_FAILED
;

601 
‰ì_ªq_out
;

604 i‡(
öc
) {

605 
i
 = 0; i < 
dev
->
c⁄fig
->
nd©a
; i++)

606 
ªq
->
d©a
[
i
] = i;

607 
i
 = 0; i < 
dev
->
c⁄fig
->
nmëa
; i++)

608 ((
__u8
 *)
ªq
->
mëad©a
)[
i
] = i;

609 } i‡(-1 !
fixed
) {

610 
	`mem£t
(
ªq
->
d©a
, 
fixed
, 
dev
->
c⁄fig
->
nd©a
);

611 
	`mem£t
(
ªq
->
mëad©a
, 
fixed
, 
dev
->
c⁄fig
->
nmëa
);

613 
	`∑d_ønd
(
ªq
->
d©a
, 
dev
->
c⁄fig
->
nd©a
);

614 
	`∑d_ønd
(
ªq
->
mëad©a
, 
dev
->
c⁄fig
->
nmëa
);

617 i‡(
hi_ßme_lo
 || 
hi_nŸ_lo
) {

618 
i
 = 1; i < 
dev
->
c⁄fig
->
nd©a
; i+=2)

619 
ªq
->
d©a
[
i
] = 
hi_ßme_lo
 ?Ñeq->data[i-1] : ~req->data[i-1];

620 
i
 = 1; i < 
dev
->
c⁄fig
->
nmëa
; i+=2)

621 ((
__u8
 *)
ªq
->
mëad©a
)[
i
] = 
hi_ßme_lo
 ? ((__u8 *)req->metadata)[i-1] : ~((__u8 *)req->metadata)[i-1];

624 i‡(
eví_nŸ_odd
) {

625 i‡(2 =
dev
->
iowidth
) {

626 
i
 = 1; i < 
dev
->
c⁄fig
->
nd©a
/2; i+=2)

627 ((
__u16
 *)
ªq
->
d©a
)[
i
] = ~((__u16 *)req->data)[i-1];

628 
i
 = 1; i < 
dev
->
c⁄fig
->
nmëa
/2; i+=2)

629 ((
__u16
 *)
ªq
->
mëad©a
)[
i
] = ~((__u16 *)req->metadata)[i-1];

631 
i
 = 1; i < 
dev
->
c⁄fig
->
nd©a
; i+=2)

632 ((
__u8
 *)
ªq
->
d©a
)[
i
] = ~((__u8 *)req->data)[i-1];

633 
i
 = 1; i < 
dev
->
c⁄fig
->
nmëa
; i+=2)

634 ((
__u8
 *)
ªq
->
mëad©a
)[
i
] = ~((__u8 *)req->metadata)[i-1];

637 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

641 
rc
 = (
IFMODE_ASYNC
 =
rdifmode
Ë? 
	`sh™n⁄_su≥r_async
(
dev
Ë: 
	`sh™n⁄_su≥r_sync
(dev);

642 i‡(
rc
)

643 
‰ì_ªq_out
;

645 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

646 
ns
, 
bs
 = 0;

647 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

649 
ªmaö_ns
) {

650 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

652 i‡(
ECCMODE_DISABLE
 =
dev
->
c⁄fig
->
ecc_mode
)

653 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 
bs
, 
ns
);

655 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 
bs
, 0);

656 i‡(
NULL
 =
ªq
) {

657 
rc
 = 
ALLOCMEM_FAILED
;

658 
‰ì_ªq_out
;

660 
ªq
->
n£˘‹
 = 
ns
;

661 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

663 
bs
 +
ns
;

664 
ªmaö_ns
 -
ns
;

670 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

671 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

672 
‰ì_ªq_out
;

675 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

676 
	`upd©e_cmdqueue
(
dev
, 
lun
);

678 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

679 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

680 
‰ì_ªq_out
;

684 i‡(
ECCMODE_DISABLE
 =
dev
->
c⁄fig
->
ecc_mode
) {

685 
bound¨y
 = 0;

687 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

688 i‡(
sh_wrôe_cmd
 =
ªq
->
›code
) {

689 
bound¨y
 = 1;

690 
wrhód
 = 
ªq
;

691 
	`check_ªq_°©us
(
ªq
);

695 i‡(
bound¨y
) {

696 
bound¨y
 = 0;

697 
rdhód
 = 
ªq
;

698 i‡(
HBYTE
 =
hlbyã
 || 
LBYTE
 == hlbyte) {

699 
	`com∑ª_n€cc_rdwr_ªque°s_hÕage
(
dev
, 
wrhód
, 
rdhód
, 
lun_ecc_°©i°ics
, 
hlbyã
);

701 
	`com∑ª_n€cc_rdwr_ªque°s
(
dev
, 
wrhód
, 
rdhód
, 
lun_ecc_°©i°ics
);

706 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

707 i‡(
sh_wrôe_cmd
 =
ªq
->
›code
) {

708 
	`check_ªq_°©us
(
ªq
);

709 } i‡(
sh_ˇchîód_cmd
 =
ªq
->
›code
){

710 
i
 = 0; i < 
ªq
->
n£˘‹
; i++)

711 
lun_ecc_°©i°ics
[
ªq
->
lun
][ªq->
ecc
[
i
]]++;

716 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

717 
	`li°_dñ
(&
ªq
->
li°
);

718 
	`‰ì_ªque°
(
ªq
);

722 i‡(!
n›rogªss
) {

723 
now_˚¡
 = 100 * ((
blk
 - 
begö_chunkblock
Ë* 
dev
->
Êash
->
≈age
 + 
∑ge
 + 1Ë/ (
cou¡
 * dev->flash->npage);

725 i‡(
now_˚¡
 > 
¥e_˚¡
) {

726 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

727 
¥e_˚¡
 = 
now_˚¡
;

731 i‡(++
∑ge
 < 
dev
->
Êash
->
≈age
)

732 
√xt_block_∑ge
;

735 i‡(!
n›rogªss
)

736 
	`¥ötf
("\n");

739 i‡(
ECCMODE_DISABLE
 =
dev
->
c⁄fig
->
ecc_mode
) {

740 
îrbôs
 = 0;

742 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

743 i‡(0 =
lun_ecc_°©i°ics
[
lun
][0])

746 
	`¥ötf
("#lun-%03dÖhylun-%03d *hwch™√l-%02d hwthªad-%02d hwlun-%02d ERR BITS=%ld\n", 
lun
, 
	`log2phy_lun
(
dev
,Üun),

747 
	`gë_phych™√l
(
dev
, 
lun
), 
	`gë_phythªad
(dev,Üun), 
	`gë_phylun
(dev,Üun), 
lun_ecc_°©i°ics
[lun][0]);

748 
îrbôs
 +
lun_ecc_°©i°ics
[
lun
][0];

750 
	`¥ötf
("ERR BITS SUM: %ld\n", 
îrbôs
);

751 } i‡(
¥_ﬁd_f‹m©
) {

752 
tŸÆ_bôs
 = 0;

754 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

755 
lun_tŸÆ
 = 0;

756 
lun_should_„n˚d
 = 0;

758 
i
 = 0; i < 256; i++)

759 
lun_tŸÆ
 +
i
 * 
lun_ecc_°©i°ics
[
lun
][i];

760 i‡(0 =
lun_tŸÆ
)

762 
tŸÆ_bôs
 +
lun_tŸÆ
;

763 
	`logout
("#lun-%03dÖhylun-%03d *hwch™√l-%02d hwthªad-%02d hwlun-%02d ECC sum=%ld", 
lun
, 
	`log2phy_lun
(
dev
,Üun),

764 
	`gë_phych™√l
(
dev
, 
lun
), 
	`gë_phythªad
(dev,Üun), 
	`gë_phylun
(dev,Üun), 
lun_tŸÆ
);

765 
i
 = 1; i < 256; i++) {

766 i‡(
lun_ecc_°©i°ics
[
lun
][
i
]) {

767 
	`logout
(" [%d]=%ld", 
i
, 
lun_ecc_°©i°ics
[
lun
][i]);

768 i‡(
i
 > 
lun_max_ecc_limô
)

769 
lun_should_„n˚d
 = 1;

772 
	`¥ötf
("%s\n", ((
lun_tŸÆ
 > 
lun_tŸÆ_ecc_limô
Ë|| 
lun_should_„n˚d
) ? " \033[0;33mShouldBeFenced\033[m" : "");

773 i‡(
NULL
 !
logÂ
)

774 
	`Ârötf
(
logÂ
, "%s\n", ((
lun_tŸÆ
 > 
lun_tŸÆ_ecc_limô
Ë|| 
lun_should_„n˚d
) ? " ShouldBeFenced" : "");

776 
	`logout
("Sum o‡ECC bô is: %ld\n", 
tŸÆ_bôs
);

778 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

779 
	`logout
("#lun-%02dÖhylun-%02d *hwch™√l-%02d hwthªad-%02d hwlun-%02d ECCÑesu…:\n", 
lun
, 
	`log2phy_lun
(
dev
,Üun),

780 
	`gë_phych™√l
(
dev
, 
lun
), 
	`gë_phythªad
(dev,Üun), 
	`gë_phylun
(dev,Üun));

782 
i
 = 0; i < 256; i++) {

783 i‡(
lun_ecc_°©i°ics
[
lun
][
i
])

784 
	`logout
("ecc[%2d] = %-8ld %%%.1f\n", 
i
, 
lun_ecc_°©i°ics
[
lun
][i],

785 (100.0 * 
lun_ecc_°©i°ics
[
lun
][
i
]Ë/ (
cou¡
 * 
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
chunk_n£˘‹
));

787 
	`logout
("\n");

790 
	`logout
("#Global ECCÑesult:\n");

791 
i
 = 0; i < 256; i++) {

792 
°rù_˙t
 = 0;

793 
vluns
 = 0;

795 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

796 
°rù_˙t
 +
lun_ecc_°©i°ics
[
lun
][
i
];

797 
vluns
++;

800 i‡(
°rù_˙t
)

801 
	`logout
("ecc[%2d] = %-8ld %%%.1f\n", 
i
, 
°rù_˙t
,

802 (100.0 * 
°rù_˙t
Ë/ (
vluns
 * 
cou¡
 * 
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
chunk_n£˘‹
));

806 i‡(
døw_lun
) {

807 
sx
 = 
LUN_MAP_SX
, 
sy
 = 
LUN_MAP_SY
;

808 
row
 = 
SUBCARD_ROW
, 
cﬁ
 = 
SUBCARD_COL
;

809 
ªt_posX
 = 0, 
ªt_posY
 = 
sy
+2*
row
*(
INNER_ROW_SPAN
+
WIDTH
)+
UP_DOWN_SPAN
+2;

811 
phy_lun_m≠_cﬁ‹
[
BYTE_TOTLE
][256];

812 
subˇrd_cﬁ‹_pkg
[
SUBCARD_CNT
][
SUBCARD_ROW
*
SUBCARD_COL
];

813 
subˇrd_pkg_˙t
 = 0;

814 
subˇrd_˙t
 = 0;

815 
pkg_lb_ödex
 = 0;

816 
pkg_hb_ödex
 = 0;

817 
pkg_ödex
 = 0;

819 
lun_tŸÆ
 = 0;

820 
tŸÆ_bôs
 = 0;

821 
lun_should_„n˚d
 = 0;

822 
phylun
 = 0;

824 
	`mem£t
(
phy_lun_m≠_cﬁ‹
, 
WHITE
, (phy_lun_map_color));

825 
	`mem£t
(
subˇrd_cﬁ‹_pkg
, 
WHITE
, (subcard_color_pkg));

827 i‡(
ECCMODE_DISABLE
 =
dev
->
c⁄fig
->
ecc_mode
) {

828 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

829 
lun_tŸÆ
 = 0;

831 
phylun
 = 
	`log2phy_lun
(
dev
, 
lun
);

833 
lun_tŸÆ
 +
lun_ecc_°©i°ics
[
lun
][0];

835 i‡(
lun_tŸÆ
 <
lun_tŸÆ_ecc_limô
) {

836 i‡(
HBYTE
 =
hlbyã
 || 
LBYTE
 == hlbyte) {

837 
phy_lun_m≠_cﬁ‹
[
hlbyã
][
phylun
] = 
GREEN
;

839 
phy_lun_m≠_cﬁ‹
[
LBYTE
][
phylun
] = 
GREEN
;

840 
phy_lun_m≠_cﬁ‹
[
HBYTE
][
phylun
] = 
GREEN
;

845 i‡(
lun_tŸÆ
 > 
lun_tŸÆ_ecc_limô
) {

846 i‡(
HBYTE
 =
hlbyã
 || 
LBYTE
 == hlbyte) {

847 
phy_lun_m≠_cﬁ‹
[
hlbyã
][
phylun
] = 
RED
;

849 
pkg_ödex
 = 
	`gë_pkg_ödex
(
phylun
, 
dev_pkg_phylun_num
, 
hlbyã
);

850 
	`logout
("\∆un-%03dÖhylun-%03dÖ¨tRef-%s\n", 
lun
, 
	`log2phy_lun
(
dev
,Üun),

851 
pkg_∑πRef_m≠
[
pkg_ödex
]);

854 
phy_lun_m≠_cﬁ‹
[
LBYTE
][
phylun
] = 
RED
;

855 
phy_lun_m≠_cﬁ‹
[
HBYTE
][
phylun
] = 
RED
;

857 
pkg_lb_ödex
 = 
	`gë_pkg_ödex
(
phylun
, 
dev_pkg_phylun_num
, 
LBYTE
);

858 
pkg_hb_ödex
 = 
	`gë_pkg_ödex
(
phylun
, 
dev_pkg_phylun_num
, 
HBYTE
);

859 
	`logout
("\∆un-%03dÖhylun-%03dÖ¨tRef-%†%s\n", 
lun
, 
	`log2phy_lun
(
dev
,Üun),

860 
pkg_∑πRef_m≠
[
pkg_lb_ödex
],Ökg_∑πRef_m≠[
pkg_hb_ödex
]);

865 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

866 
lun_tŸÆ
 = 0;

867 
lun_should_„n˚d
 = 0;

869 
phylun
 = 
	`log2phy_lun
(
dev
, 
lun
);

871 
i
 = 0; i < 256; i++)

872 
lun_tŸÆ
 +
i
 * 
lun_ecc_°©i°ics
[
lun
][i];

874 i‡(
lun_tŸÆ
 <
lun_tŸÆ_ecc_limô
) {

875 i‡(
HBYTE
 =
hlbyã_pbd
 || 
LBYTE
 == hlbyte_pbd) {

876 
phy_lun_m≠_cﬁ‹
[
hlbyã_pbd
][
phylun
] = 
GREEN
;

878 
phy_lun_m≠_cﬁ‹
[
LBYTE
][
phylun
] = 
GREEN
;

879 
phy_lun_m≠_cﬁ‹
[
HBYTE
][
phylun
] = 
GREEN
;

883 
tŸÆ_bôs
 +
lun_tŸÆ
;

885 
i
 = 1; i < 256; i++) {

886 i‡(
lun_ecc_°©i°ics
[
lun
][
i
]) {

887 i‡(
i
 > 
lun_max_ecc_limô
)

888 
lun_should_„n˚d
 = 1;

892 i‡((
lun_tŸÆ
 > 
lun_tŸÆ_ecc_limô
Ë|| 
lun_should_„n˚d
) {

893 i‡(
HBYTE
 =
hlbyã_pbd
 || 
LBYTE
 == hlbyte_pbd) {

894 
phy_lun_m≠_cﬁ‹
[
hlbyã_pbd
][
phylun
] = 
RED
;

896 
pkg_ödex
 = 
	`gë_pkg_ödex
(
phylun
, 
dev_pkg_phylun_num
, 
hlbyã_pbd
);

897 
	`logout
("\∆un-%03dÖhylun-%03dÖ¨tRef-%s\n", 
lun
, 
	`log2phy_lun
(
dev
,Üun),

898 
pkg_∑πRef_m≠
[
pkg_ödex
]);

901 
phy_lun_m≠_cﬁ‹
[
LBYTE
][
phylun
] = 
RED
;

902 
phy_lun_m≠_cﬁ‹
[
HBYTE
][
phylun
] = 
RED
;

904 
pkg_lb_ödex
 = 
	`gë_pkg_ödex
(
phylun
, 
dev_pkg_phylun_num
, 
LBYTE
);

905 
pkg_hb_ödex
 = 
	`gë_pkg_ödex
(
phylun
, 
dev_pkg_phylun_num
, 
HBYTE
);

906 
	`logout
("\∆un-%03dÖhylun-%03dÖ¨tRef-%†%s\n", 
lun
, 
	`log2phy_lun
(
dev
,Üun),

907 
pkg_∑πRef_m≠
[
pkg_lb_ödex
],Ökg_∑πRef_m≠[
pkg_hb_ödex
]);

913 
subˇrd_˙t
 = 0; subˇrd_˙à< 
SUBCARD_CNT
; subcard_cnt++)

914 
subˇrd_pkg_˙t
 = 0; subˇrd_pkg_˙à< 
SUBCARD_PKGS
; subcard_pkg_cnt++)

915 
subˇrd_cﬁ‹_pkg
[
subˇrd_˙t
][
subˇrd_pkg_˙t
] =

916 
	`gë_pkg_cﬁ‹
(
dev_pkg_phylun_num
[
subˇrd_˙t
 * 
SUBCARD_PKGS
 + 
subˇrd_pkg_˙t
], 
phy_lun_m≠_cﬁ‹
);

918 
	`ª£t_curs‹
();

919 
	`˛ór_s¸ìn
();

921 
	`døw_lun_m≠
(
sx
, 
sy
, 
row
, 
cﬁ
, 
pkg_∑πRef_m≠
, (*)
subˇrd_cﬁ‹_pkg
);

923 
	`£t_curs‹
(
ªt_posX
, 
ªt_posY
);

927 
‰ì_ªq_out
:

928 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

929 
	`li°_dñ
(&
ªq
->
li°
);

930 
	`‰ì_ªque°
(
ªq
);

932 
‰ì_lun_ecc_°©i°ics
:

933 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

934 i‡(
NULL
 =
lun_ecc_°©i°ics
[
lun
])

936 
	`‰ì
(
lun_ecc_°©i°ics
[
lun
]);

938 
	`‰ì
(
lun_ecc_°©i°ics
);

939 
out
:

940 i‡(
NULL
 !
logÂ
) {

941 
time_t
 
â
;

942 
â
 = 
	`time
(
NULL
);

943 
	`Ârötf
(
logÂ
, "[IFMODE LOG END %s] <-- %s", 
dev
->
«me
, 
	`˘ime
(&
â
));

944 
	`f˛o£
(
logÂ
);

947 i‡(
rc
 !
FAILED_FLASH_STATUS
 &&Ñc != 0)

948 
	`¥ötf
("IfmodeÉncounter someÉrror\n");

949  
rc
;

950 
	}
}

	@init.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

11 
	~"toﬁ.h
"

13 
__u32
 
	$øw_ªadl
(
sh™n⁄_dev
 *
dev
, 
dwoff
)

15 
__u32
 
ªg
;

17 
	`as£π
(0 !
dev
->
fd
);

19 i‡(
	`l£ek
(
dev
->
fd
, 
dwoff
 * 
DW_SIZE
, 
SEEK_SET
) < 0)

20 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

22 i‡(
	`ªad
(
dev
->
fd
, &
ªg
, 
DW_SIZE
) != DW_SIZE)

23 
	`≥º‹_exô
("%s(Ëªad faûed", 
__func__
);

25  
ªg
;

26 
	}
}

28 
__u32
 
	$i‹ód32
(
sh™n⁄_dev
 *
dev
, 
dwoff
)

30  
	`À32_to_˝u
(
	`øw_ªadl
(
dev
, 
dwoff
));

31 
	}
}

33 
	$øw_wrôñ
(
sh™n⁄_dev
 *
dev
, 
__u32
 
vÆue
, 
dwoff
)

35 
	`as£π
(0 !
dev
->
fd
);

37 i‡(
	`l£ek
(
dev
->
fd
, 
dwoff
 * 
DW_SIZE
, 
SEEK_SET
) < 0)

38 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

40 i‡(
	`wrôe
(
dev
->
fd
, &
vÆue
, 
DW_SIZE
) != DW_SIZE)

41 
	`≥º‹_exô
("%s(ËwrôêÁûed", 
__func__
);

42 
	}
}

44 
	$iowrôe32
(
sh™n⁄_dev
 *
dev
, 
__u32
 
vÆue
, 
dwoff
)

46 
__u32
 
v
 = 
	`˝u_to_À32
(
vÆue
);

47 
	`øw_wrôñ
(
dev
, 
v
, 
dwoff
);

48 
	}
}

50 
	$mu…i_øw_ªadl
(
sh™n⁄_dev
 *
dev
, 
__u32
 *
des
, 
dwoff
, 
dwÀn
)

52 
	`as£π
(0 !
dev
->
fd
);

54 i‡(
	`l£ek
(
dev
->
fd
, 
dwoff
 * 
DW_SIZE
, 
SEEK_SET
) < 0)

55 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

57 i‡(
	`ªad
(
dev
->
fd
, 
des
, 
dwÀn
 * 
DW_SIZE
) != dwlen * DW_SIZE)

58 
	`≥º‹_exô
("%s(Ëmu…òªad faûed", 
__func__
);

59 
	}
}

61 
	$mu…i_i‹ód32
(
sh™n⁄_dev
 *
dev
, 
__u32
 *
des
, 
dwoff
, 
dwÀn
)

63 
i
;

65 
	`as£π
(0 !
dev
->
fd
);

67 i‡(
	`l£ek
(
dev
->
fd
, 
dwoff
 * 
DW_SIZE
, 
SEEK_SET
) < 0)

68 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

70 i‡(
	`ªad
(
dev
->
fd
, 
des
, 
dwÀn
 * 
DW_SIZE
) != dwlen * DW_SIZE)

71 
	`≥º‹_exô
("%s(Ëmu…òªad faûed", 
__func__
);

73 
i
 = 0; i < 
dwÀn
; i++)

74 
	`À32_to_˝us
(&
des
[
i
]);

75 
	}
}

77 
	$mu…i_øw_wrôñ
(
sh™n⁄_dev
 *
dev
, 
__u32
 *
§c
, 
dwoff
, 
dwÀn
)

79 
	`as£π
(0 !
dev
->
fd
);

81 i‡(
	`l£ek
(
dev
->
fd
, 
dwoff
 * 
DW_SIZE
, 
SEEK_SET
) < 0)

82 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

84 i‡(
	`wrôe
(
dev
->
fd
, 
§c
, 
dwÀn
 * 
DW_SIZE
) != dwlen * DW_SIZE)

85 
	`≥º‹_exô
("%s(Ëmu…òwrôêÁûed", 
__func__
);

86 
	}
}

88 
	$mu…i_iowrôe32
(
sh™n⁄_dev
 *
dev
, 
__u32
 *
§c
, 
dwoff
, 
dwÀn
)

90 
i
;

91 
__u32
 *
v
 = 
	`mÆloc
(
dwÀn
 * 
DW_SIZE
);

93 
	`as£π
(
v
 !
NULL
);

94 
	`as£π
(0 !
dev
->
fd
);

96 i‡(
	`l£ek
(
dev
->
fd
, 
dwoff
 * 
DW_SIZE
, 
SEEK_SET
) < 0)

97 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

99 
i
 = 0; i < 
dwÀn
; i++)

100 
v
[
i
] = 
	`˝u_to_À32
(
§c
[i]);

102 i‡(
	`wrôe
(
dev
->
fd
, 
v
, 
dwÀn
 * 
DW_SIZE
) != dwlen * DW_SIZE)

103 
	`≥º‹_exô
("%s(Ëmu…òwrôêÁûed", 
__func__
);

105 
	`‰ì
(
v
);

106 
	}
}

108 
	$ª£t
(
sh™n⁄_dev
 *
dev
)

110 
__u32
 
ªg
;

112 
ªg
 = 
dev
->
	`i‹ód32
(dev, dev->
cfgªg_dwoff
 + 
HW_cfg_Êash
);

113 
ªg
 |= (1u << 24);

114 
dev
->
	`iowrôe32
(dev, 
ªg
, dev->
cfgªg_dwoff
 + 
HW_cfg_Êash
);

115 
	`u¶ìp
(1000);

116 
ªg
 &= (~(1u << 24));

117 
dev
->
	`iowrôe32
(dev, 
ªg
, dev->
cfgªg_dwoff
 + 
HW_cfg_Êash
);

118 
	}
}

120 
__u32
 
	$i‹ód_luƒeg
(
sh™n⁄_dev
 *
dev
, 
lun
, 
HW_luƒeg
 
dwoff
)

122 
__u32
 
ªg
;

123 
phylun
 = 
	`log2phy_lun
(
dev
, 
lun
);

125 
	`as£π
(0 !
dev
->
fd
);

127 i‡(
	`l£ek
(
dev
->
fd
, (dev->
luƒeg_dwoff
 + (
phylun
 / dev->
hw_∆un
Ë* dev->
luƒeg_dwsize
 + 
dwoff
Ë* 
DW_SIZE
, 
SEEK_SET
) < 0)

128 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

130 i‡(
	`ªad
(
dev
->
fd
, &
ªg
, 
DW_SIZE
) != DW_SIZE)

131 
	`≥º‹_exô
("%s(Ëªad faûed", 
__func__
);

133  
	`À32_to_˝u
(
ªg
);

134 
	}
}

136 
	$iowrôe_luƒeg
(
sh™n⁄_dev
 *
dev
, 
__u32
 
vÆue
, 
lun
, 
HW_luƒeg
 
dwoff
)

138 
__u32
 
v
 = 
	`˝u_to_À32
(
vÆue
);

139 
phylun
 = 
	`log2phy_lun
(
dev
, 
lun
);

141 
	`as£π
(0 !
dev
->
fd
);

143 i‡(
	`l£ek
(
dev
->
fd
, (dev->
luƒeg_dwoff
 + (
phylun
 / dev->
hw_∆un
Ë* dev->
luƒeg_dwsize
 + 
dwoff
Ë* 
DW_SIZE
, 
SEEK_SET
) < 0)

144 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

146 i‡(
	`wrôe
(
dev
->
fd
, &
v
, 
DW_SIZE
) != DW_SIZE)

147 
	`≥º‹_exô
("%s(Ëªad faûed", 
__func__
);

148 
	}
}

150 
__u32
 
	$i‹ód_buÊuƒeg
(
sh™n⁄_dev
 *
dev
, 
hód
, 
HW_luƒeg
 
dwoff
)

152 
__u32
 
ªg
;

154 
	`as£π
(0 !
dev
->
fd
 && 
hód
 < 2);

156 i‡(
	`l£ek
(
dev
->
fd
, (dev->
luƒeg_dwoff
 + dev->
hw_thªads
 * dev->
luƒeg_dwsize
 +

157 
hód
 * 
dev
->
luƒeg_dwsize
 + 
dwoff
Ë* 
DW_SIZE
, 
SEEK_SET
) < 0)

158 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

160 i‡(
	`ªad
(
dev
->
fd
, &
ªg
, 
DW_SIZE
) != DW_SIZE)

161 
	`≥º‹_exô
("%s(Ëªad faûed", 
__func__
);

163  
	`À32_to_˝u
(
ªg
);

164 
	}
}

166 
	$iowrôe_buÊuƒeg
(
sh™n⁄_dev
 *
dev
, 
__u32
 
vÆue
, 
hód
, 
HW_luƒeg
 
dwoff
)

168 
__u32
 
v
 = 
	`˝u_to_À32
(
vÆue
);

169 
	`as£π
(0 !
dev
->
fd
 && 
hód
 < 2);

171 i‡(
	`l£ek
(
dev
->
fd
, (dev->
luƒeg_dwoff
 + dev->
hw_thªads
 * dev->
luƒeg_dwsize
 +

172 
hód
 * 
dev
->
luƒeg_dwsize
 + 
dwoff
Ë* 
DW_SIZE
, 
SEEK_SET
) < 0)

173 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

175 i‡(
	`wrôe
(
dev
->
fd
, &
v
, 
DW_SIZE
) != DW_SIZE)

176 
	`≥º‹_exô
("%s(Ëªad faûed", 
__func__
);

177 
	}
}

179 
	$i‹ód_c⁄fig
(
sh™n⁄_dev
 *
dev
)

181 
	`as£π
(0 !
dev
->
fd
);

182 
	`as£π
(
NULL
 !
dev
->
hw_c⁄fig
);

184 i‡(
	`l£ek
(
dev
->
fd
, dev->
cfgªg_dwoff
 * 
DW_SIZE
, 
SEEK_SET
) < 0)

185 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

187 i‡(
	`ªad
(
dev
->
fd
, dev->
hw_c⁄fig
, (*dev->hw_config)) != (*dev->hw_config))

188 
	`≥º‹_exô
("%s(Ëªad faûed", 
__func__
);

190 
	`À16_to_˝us
(&
dev
->
hw_c⁄fig
->
hw_fuŒ_£˘‹_nbyã
);

191 
	`À16_to_˝us
(&
dev
->
hw_c⁄fig
->
hw_fuŒ_∑ge_nbyã
);

192 
	`À16_to_˝us
(&
dev
->
hw_c⁄fig
->
hw_codew‹d_nbyã
);

193 
	`À32_to_˝us
(&
dev
->
hw_c⁄fig
->
hw_dw6_§v
);

194 
	}
}

196 
	$iowrôe_c⁄fig
(
sh™n⁄_dev
 *
dev
)

198 
hw_c⁄fig
 
hwcfg
;

200 
	`as£π
(0 !
dev
->
fd
);

201 
	`as£π
(
NULL
 !
dev
->
hw_c⁄fig
);

203 i‡(
	`l£ek
(
dev
->
fd
, dev->
cfgªg_dwoff
 * 
DW_SIZE
, 
SEEK_SET
) < 0)

204 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

206 
	`mem˝y
(&
hwcfg
, 
dev
->
hw_c⁄fig
, (hwcfg));

207 
	`˝u_to_À16s
(&
hwcfg
.
hw_fuŒ_£˘‹_nbyã
);

208 
	`˝u_to_À16s
(&
hwcfg
.
hw_fuŒ_∑ge_nbyã
);

209 
	`˝u_to_À16s
(&
hwcfg
.
hw_codew‹d_nbyã
);

210 
	`˝u_to_À32s
(&
hwcfg
.
hw_dw6_§v
);

212 i‡(
	`wrôe
(
dev
->
fd
, &
hwcfg
, (hwcfg)) != (hwcfg))

213 
	`≥º‹_exô
("%s(Ëªad faûed", 
__func__
);

214 
	}
}

216 
	$gë_mem
(
sh™n⁄_dev
 *
dev
, 
mem‹y
 *
mem
)

218 
sh™n⁄_io˘l
 
io˘l_d©a
;

220 
	`as£π
(0 !
dev
->
fd
);

222 
	`INIT_LIST_HEAD
(&
mem
->
li°
);

223 
	`INIT_LIST_HEAD
(&
mem
->
gli°
);

225 
io˘l_d©a
.
size
 = 
mem
->size;

226 i‡(
	`io˘l
(
dev
->
fd
, 
SHANNONC_IOC_GM
, &
io˘l_d©a
))

227 
	`≥º‹_exô
("%s(ËÁûed", 
__func__
);

229 
mem
->
kî√l_addr
 = 
io˘l_d©a
.kernel_addr;

230 
mem
->
dma_addr
 = 
io˘l_d©a
.dma_addr;

232 
	`li°_add_èû
(&
mem
->
gli°
, &
dev
->
mem_gli°hód
);

233 
	}
}

235 
	$‰ì_mem
(
sh™n⁄_dev
 *
dev
, 
mem‹y
 *
mem
)

237 
sh™n⁄_io˘l
 
io˘l_d©a
;

239 
	`as£π
(0 !
dev
->
fd
);

241 
io˘l_d©a
.
size
 = 
mem
->size;

242 
io˘l_d©a
.
kî√l_addr
 = 
mem
->kernel_addr;

243 
io˘l_d©a
.
dma_addr
 = 
mem
->dma_addr;

244 i‡(
	`io˘l
(
dev
->
fd
, 
SHANNONC_IOC_FM
, &
io˘l_d©a
))

245 
	`≥º‹_exô
("%s(ËÁûed", 
__func__
);

247 
	`li°_dñ
(&
mem
->
gli°
);

248 
	}
}

250 
	$ªad_mem
(
sh™n⁄_dev
 *
dev
, *
u£r_addr
, *
kî√l_addr
, 
size
)

252 
sh™n⁄_io˘l
 
io˘l_d©a
;

254 
	`as£π
(0 !
dev
->
fd
);

256 
io˘l_d©a
.
size
 = size;

257 
io˘l_d©a
.
kî√l_addr
 = kernel_addr;

258 
io˘l_d©a
.
u£r_addr
 = user_addr;

259 i‡(
	`io˘l
(
dev
->
fd
, 
SHANNONC_IOC_RM
, &
io˘l_d©a
))

260 
	`≥º‹_exô
("%s(ËÁûed", 
__func__
);

262 
	}
}

264 
	$wrôe_mem
(
sh™n⁄_dev
 *
dev
, *
kî√l_addr
, *
u£r_addr
, 
size
)

266 
sh™n⁄_io˘l
 
io˘l_d©a
;

268 
	`as£π
(0 !
dev
->
fd
);

270 
io˘l_d©a
.
size
 = size;

271 
io˘l_d©a
.
kî√l_addr
 = kernel_addr;

272 
io˘l_d©a
.
u£r_addr
 = user_addr;

273 i‡(
	`io˘l
(
dev
->
fd
, 
SHANNONC_IOC_WM
, &
io˘l_d©a
))

274 
	`≥º‹_exô
("%s(ËÁûed", 
__func__
);

275 
	}
}

277 
	$dñivî_u£rd©a
(
sh™n⁄_dev
 *
dev
)

279 
sh™n⁄_io˘l
 
io˘l_d©a
;

281 
	`as£π
(0 !
dev
->
fd
);

282 
	`as£π
(1 =
dev
->
öô_d⁄e
);

284 
io˘l_d©a
.
ty≥
 = 
TYPE_FLASH
;

285 
io˘l_d©a
.
u£r_addr
 = 
dev
->
Êash
;

286 i‡(
	`io˘l
(
dev
->
fd
, 
SHANNONC_IOC_DK
, &
io˘l_d©a
))

287 
	`≥º‹_exô
("%s(Ëdevlivî fœshÅÿkî√»Áûed", 
__func__
);

289 
io˘l_d©a
.
ty≥
 = 
TYPE_CONFIG
;

290 
io˘l_d©a
.
u£r_addr
 = 
dev
->
c⁄fig
;

291 i‡(
	`io˘l
(
dev
->
fd
, 
SHANNONC_IOC_DK
, &
io˘l_d©a
))

292 
	`≥º‹_exô
("%s(Ëdevlivî c⁄figÅÿkî√»Áûed", 
__func__
);

293 
	}
}

295 
	$do_dúe˘_io
(
sh™n⁄_dev
 *
dev
, 
dúe˘_io
 *
dio
)

297 
sh™n⁄_io˘l
 
io˘l_d©a
;

299 
	`as£π
(0 !
dev
->
fd
);

300 
	`as£π
(1 =
dev
->
öô_d⁄e
);

301 
	`as£π
(
NULL
 !
dio
);

303 
io˘l_d©a
.
u£r_addr
 = 
dio
;

304 i‡(
	`io˘l
(
dev
->
fd
, 
SHANNONC_IOC_DI
, &
io˘l_d©a
))

305 
	`≥º‹_exô
("%s(ËÁûed", 
__func__
);

306 
	}
}

308 
	$gë_dev_domaös
(
sh™n⁄_dev
 *
dev
)

310 
sh™n⁄_io˘l
 
io˘l_d©a
;

312 
	`as£π
(0 !
dev
->
fd
);

314 
io˘l_d©a
.
u£r_addr
 = 
dev
->
domaös
;

315 
io˘l_d©a
.
size
 = (
dev
->
domaös
);

316 i‡(
	`io˘l
(
dev
->
fd
, 
SHANNONC_IOC_GD
, &
io˘l_d©a
))

317 
	`≥º‹_exô
("%s(ËÁûed", 
__func__
);

318 
	}
}

321 
	$˛ór_queue
(
sh™n⁄_dev
 *
dev
)

323 *
buf
;

324 
lun
, 
size
;

326 
size
 = (
dev
->
hw_sysöfo
->
hw_wrbuf_suµ‹t
 & 0x0FË? 4 * 
PAGE_SIZE
 : 2 * PAGE_SIZE;

327 
buf
 = 
	`zmÆloc
(
size
);

328 i‡(
NULL
 =
buf
) {

329 
	`¥ötf
("%s(ËmÆlo¯Áûed\n", 
__func__
);

333 
lun
 = 0;Üu¿< 
dev
->
hw_luns
 / dev->
hw_∆un
;Üun++)

334 
dev
->
	`wrôe_mem
(dev, dev->
phythªad_mem
[
lun
].
kî√l_addr
, 
buf
, 
size
);

336 
	`‰ì
(
buf
);

337 
	}
}

339 
	$c⁄fig_h¨dw¨e
(
sh™n⁄_dev
 *
dev
)

341 i‡(
	`check_ifmode_m©ch
(
dev
))

342 
	`exô
(
EXIT_FAILURE
);

344 
dev
->
	`i‹ód_c⁄fig
(dev);

346 
dev
->
hw_c⁄fig
->
hw_ifmode_™d_timög
 = dev->
c⁄fig
->
ifmode
 | (dev->c⁄fig->
async_cy˛es
 << 4);

347 
dev
->
hw_c⁄fig
->
hw_∑ge_n£˘‹
 = dev->
c⁄fig
->
∑ge_n£˘‹
 - 1;

348 
dev
->
hw_c⁄fig
->
hw_blk_≈age
 = (dev->
Êash
->
≈age
 / 64) -1;

350 
dev
->
hw_c⁄fig
->
hw_£˘‹_nbyã
 = dev->
c⁄fig
->
£˘‹_size
 / 512;

351 
dev
->
hw_c⁄fig
->
hw_£˘‹_ncodew‹d
 = dev->
c⁄fig
->
£˘‹_ncodew‹d
;

352 
dev
->
hw_c⁄fig
->
hw_fuŒ_£˘‹_nbyã
 = dev->
c⁄fig
->
codew‹d_size
 * dev->c⁄fig->
£˘‹_ncodew‹d
;

354 
dev
->
hw_c⁄fig
->
hw_∂™e_mask
 = (dev->
c⁄fig
->
≈œ√
 > 1Ë? (dev->
Êash
->
∂™e_mask
 >> 6) : 0;

355 
dev
->
hw_c⁄fig
->
hw_lun_mask
 = dev->
c⁄fig
->
lun_mask
;

356 
dev
->
hw_c⁄fig
->
hw_fuŒ_∑ge_nbyã
 = dev->
c⁄fig
->
∑ge_n£˘‹
 * dev->c⁄fig->
£˘‹_ncodew‹d
 * dev->c⁄fig->
codew‹d_size
;

358 
dev
->
hw_c⁄fig
->
hw_øid_íabÀ
 &= ~0x01;

359 
dev
->
hw_c⁄fig
->
hw_øid_íabÀ
 |(dev->
c⁄fig
->
øid_mode
 & 0x01);

360 
dev
->
hw_c⁄fig
->
hw_chunk_n£˘‹
 = dev->
c⁄fig
->
chunk_n£˘‹
 - 1;

361 
dev
->
hw_c⁄fig
->
hw_chunk_nbyã
 = dev->
c⁄fig
->
chunk_n£˘‹
 * dev->c⁄fig->
£˘‹_size
 / 512 - 1;

363 
dev
->
hw_c⁄fig
->
hw_ecc_mode
 = dev->
c⁄fig
->
ecc_mode
;

364 
dev
->
hw_c⁄fig
->
hw_codew‹d_nbyã
 = dev->
c⁄fig
->
codew‹d_size
;

366 i‡(
dev
->
powî_budgë
)

367 
dev
->
hw_c⁄fig
->
hw_powî_budgë
 = dev->
powî_budgë
;

369 
dev
->
	`iowrôe_c⁄fig
(dev);

370 
	`u¶ìp
(1000);

371 
dev
->
	`i‹ód_c⁄fig
(dev);

372 
	}
}

374 
	$ª°‹e_deÁu…_c⁄fig
(
sh™n⁄_dev
 *
dev
)

377 
dev
->
hw_c⁄fig
->
hw_ifmode_™d_timög
 = (4 << 4Ë| 
IFMODE_ASYNC
;

378 
dev
->
hw_c⁄fig
->
hw_∑ge_n£˘‹
 = 6;

379 
dev
->
hw_c⁄fig
->
hw_blk_≈age
 = 0;

380 
dev
->
hw_c⁄fig
->
hw_ª£t
 &= ~0x01;

382 
dev
->
hw_c⁄fig
->
hw_£˘‹_nbyã
 = 1;

383 
dev
->
hw_c⁄fig
->
hw_£˘‹_ncodew‹d
 = 1;

384 
dev
->
hw_c⁄fig
->
hw_fuŒ_£˘‹_nbyã
 = 0x0228;

386 
dev
->
hw_c⁄fig
->
hw_∂™e_mask
 = 0;

387 
dev
->
hw_c⁄fig
->
hw_lun_mask
 = 0;

388 
dev
->
hw_c⁄fig
->
hw_fuŒ_∑ge_nbyã
 = 0x0F18;

390 
dev
->
hw_c⁄fig
->
hw_øid_íabÀ
 = ((dev->
≥r_byã_dißbÀ
 << 4Ë| 
RAIDMODE_DISABLE
);

391 
dev
->
hw_c⁄fig
->
hw_chunk_n£˘‹
 = 6;

392 
dev
->
hw_c⁄fig
->
hw_chunk_nbyã
 = 6;

394 
dev
->
hw_c⁄fig
->
hw_ecc_mode
 = 
ECCMODE_DISABLE
;

395 
dev
->
hw_c⁄fig
->
hw_codew‹d_nbyã
 = 0x0228;

397 
dev
->
hw_c⁄fig
->
hw_öt_dñay
 = 5;

398 
dev
->
hw_c⁄fig
->
max_ecc_limô
 = 0xF0;

401 
dev
->
	`˛ór_queue
(dev);

402 
dev
->
	`ª£t
(dev);

403 
dev
->
	`iowrôe_c⁄fig
(dev);

404 
	`u¶ìp
(1000);

405 
dev
->
	`i‹ód_c⁄fig
(dev);

406 
	}
}

409 
	$mixed_Êash_check
(
sh™n⁄_dev
 *
dev
, 
lun
, 
u§_Êash
 *
Êash
)

411 i‡(
Êash
->
víd‹_id
 !
dev
->flash->vendor_id ||

413 
Êash
->
≈age
 !
dev
->flash->npage ||

414 
Êash
->
∑ge_size
 !
dev
->flash->page_size ||

415 
Êash
->
oob_size
 !
dev
->flash->oob_size ||

416 
Êash
->
≈œ√
 !
dev
->flash->nplane ||

417 
Êash
->
∂™e_mask
 !
dev
->flash->plane_mask ||

418 
Êash
->
ifmode
 !
dev
->flash->ifmode ||

419 
	`memcmp
(&
Êash
->
Á˘‹y_ivb
, &
dev
->flash->factory_ivb, (flash->factory_ivb)) ||

420 
	`memcmp
(&
Êash
->
drv£âög
, &
dev
->flash->drvsetting, (flash->drvsetting))) {

421 
	`¥ötf
("mixed flash failure\n");

422 
	`¥ötf
("FœshID: "); 
	`¥_u8_¨øy_n›ªfix
(
dev
->
Êash
->
id
.
byãid
, 8, 8);

423 
	`¥ötf
("FœshID: "); 
	`¥_u8_¨øy_n›ªfix
(
Êash
->
id
.
byãid
, 8, 8);

428 i‡(
Êash
->
nblk
 > 
dev
->flash->nblk) {

429 
	`¥ötf
("Lun 0 should be bigger capacity flash\n");

431 } i‡(
Êash
->
nblk
 < 
dev
->flash->nblk) {

432 
dev
->
èrgëlun
[
lun
].
blk_hﬁe_begö
 = 
Êash
->
nblk
;

433 
dev
->
èrgëlun
[
lun
].
blk_hﬁe_cou¡
 = dev->
Êash
->
nblk
 - flash->nblk;

438 
	}
}

440 
	$check_èrgë_lun
(
sh™n⁄_dev
 *
dev
)

442 
lun
;

443 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

444 
li°_hód
 
ªq_hód
;

446 
èrgë_lun
 *
tgéun
;;

447 
u§_Êash
 
Êash
;

449 
	`INIT_LIST_HEAD
(&
ªq_hód
);

451 
	`bzîo
(
dev
->
lun_bôm≠
, (dev->lun_bitmap));

453 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

454 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ªadid_cmd
, 
lun
, 0, 0, 0, 0);

455 i‡(
NULL
 =
ªq
)

456 
	`mÆloc_Áûed_exô
();

457 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

460 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

461 i‡(
dev
->
	`submô_ªque°
(
ªq
))

462 
	`submô_Áûed_exô
(
ªq
->
lun
);

465 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

466 
	`upd©e_cmdqueue
(
dev
, 
lun
);

468 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

469 i‡(
	`pﬁl_cmdqueue
(
dev
, 
lun
))

470 
	`pﬁl_Áûed_exô
(
lun
);

473 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

474 
tgéun
 = &
dev
->
èrgëlun
[
ªq
->
lun
];

476 
tgéun
->
loglun
 = 
ªq
->
lun
;

477 
tgéun
->
phylun
 = 
	`log2phy_lun
(
dev
,Ågéun->
loglun
);

478 
	`mem˝y
(
tgéun
->
id
.
byãid
, 
ªq
->id, (tgtlun->id.byteid));

480 
	`bzîo
(&
Êash
, (flash));

481 i‡(
	`Êash_öfo
(
dev
, 
tgéun
->
id
, &
Êash
))

484 i‡(1 =
dev
->
èrgëluns_suµ‹t
) {

485 i‡(0x00 !
Êash
.
lun_mask
) {

486 
	`¥ötf
("FATAL: FPGA firmware, 1-lun/CE; Flash, 2-luns/CE. FlashID: %02X %02X %02X\n",

487 
Êash
.
víd‹_id
, fœsh.
devi˚_id
, fœsh.
„©uª_id
);

488 
	`exô
(
EXIT_FAILURE
);

490 } i‡(2 =
dev
->
èrgëluns_suµ‹t
) {

491 i‡(0x00 =
Êash
.
lun_mask
) {

492 i‡(
tgéun
->
phylun
 % 2) {

493 
tgéun
->
shadow
 = 1;

494 
	`mem£t
(
tgéun
->
id
.
byãid
, 0xAB, (tgtlun->id.byteid));

495 
	`£t_bô
(
tgéun
->
loglun
, 
dev
->
lun_bôm≠
);

499 
	`¥ötf
("övÆidÅ¨gëluns_suµ‹t: %d\n", 
dev
->
èrgëluns_suµ‹t
);

500 
	`exô
(
EXIT_FAILURE
);

505 i‡(
	`mixed_Êash_check
(
dev
, 
ªq
->
lun
, &
Êash
))

506 
	`exô
(
EXIT_FAILURE
);

508 i‡(
dev
->
c⁄fig
->
lun_mask
 < 
Êash
.lun_mask)

509 
dev
->
c⁄fig
->
lun_mask
 = 
Êash
.lun_mask;

512 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

513 
	`li°_dñ
(&
ªq
->
li°
);

514 
	`‰ì_ªque°
(
ªq
);

516 
	}
}

519 
sh™n⁄_dev
 *
	$Æloc_devi˚
(*
dev«me
)

521 
b¨
;

522 
sh™n⁄_dev
 *
dev
;

523 
sh™n⁄_io˘l
 
io˘l_d©a
;

525 
dev
 = 
	`zmÆloc
((*dev));

526 i‡(
NULL
 =
dev
)

527 
out
;

528 
dev
->
√wlunm≠
 = 1;

529 
	`INIT_LIST_HEAD
(&
dev
->
mem_gli°hód
);

531 
dev
->
sy§eg_dwoff
 = 0;

532 
dev
->
cfgªg_dwoff
 = 0xc0;

533 
dev
->
luƒeg_dwoff
 = 0x100;

534 
dev
->
luƒeg_dwsize
 = 8;

537 
dev
->
i‹ód32
 = ioread32;

538 
dev
->
iowrôe32
 = iowrite32;

540 
dev
->
øw_ªadl
 =Ñaw_readl;

541 
dev
->
øw_wrôñ
 =Ñaw_writel;

543 
dev
->
mu…i_i‹ód32
 = multi_ioread32;

544 
dev
->
mu…i_iowrôe32
 = multi_iowrite32;

546 
dev
->
mu…i_øw_ªadl
 = multi_raw_readl;

547 
dev
->
mu…i_øw_wrôñ
 = multi_raw_writel;

549 
dev
->
i‹ód_luƒeg
 = ioread_lunreg;

550 
dev
->
iowrôe_luƒeg
 = iowrite_lunreg;

552 
dev
->
i‹ód_buÊuƒeg
 = ioread_buflunreg;

553 
dev
->
iowrôe_buÊuƒeg
 = iowrite_buflunreg;

555 
dev
->
i‹ód_c⁄fig
 = ioread_config;

556 
dev
->
iowrôe_c⁄fig
 = iowrite_config;

558 
dev
->
gë_mem
 = get_mem;

559 
dev
->
‰ì_mem
 = free_mem;

560 
dev
->
ªad_mem
 =Ñead_mem;

561 
dev
->
wrôe_mem
 = write_mem;

563 
dev
->
dñivî_u£rd©a
 = deliver_userdata;

564 
dev
->
do_dúe˘_io
 = do_direct_io;

566 
dev
->
ª£t
 =Ñeset;

568 
dev
->
˛ór_queue
 = clear_queue;

569 
dev
->
c⁄fig_h¨dw¨e
 = config_hardware;

570 
dev
->
submô_ªque°
 = submit_request;

573 
	`°r˝y
(
dev
->
«me
, 
dev«me
);

574 
dev
->
fd
 = 
	`›í
(dev->
«me
, 
O_RDWR
, 0666);

575 i‡(
dev
->
fd
 < 0) {

576 
	`¥öt
("O≥¿devi˚ %†îr‹", 
dev
->
«me
);

577 
	`≥º‹
(" ");

578 
‰ì_dev_out
;

582 
b¨
 = 0; bar < 2; bar++) {

583 
io˘l_d©a
.
b¨
 = bar;

584 i‡(
	`io˘l
(
dev
->
fd
, 
SHANNONC_IOC_GB
, &
io˘l_d©a
))

585 
	`≥º‹_exô
("%s(ËÁûed", 
__func__
);

586 
dev
->
b¨_dwÀn
[
b¨
] = 
io˘l_d©a
.
size
 / 
DW_SIZE
;

591 
dev
->
hw_sysöfo
 = 
	`mÆloc
((*dev->hw_sysinfo));

592 i‡(
NULL
 =
dev
->
hw_sysöfo
)

593 
˛o£_fd_out
;

594 i‡(
	`l£ek
(
dev
->
fd
, dev->
sy§eg_dwoff
 * 
DW_SIZE
, 
SEEK_SET
) < 0)

595 
	`≥º‹_exô
("%s(Ëªad-hw_sysöfÿl£ek faûed", 
__func__
);

596 i‡(
	`ªad
(
dev
->
fd
, dev->
hw_sysöfo
, (*dev->hw_sysinfo)) != (*dev->hw_sysinfo))

597 
	`≥º‹_exô
("%s(Ëªad-hw_sysöfÿªad faûed", 
__func__
);

598 
	`À32_to_˝us
(&
dev
->
hw_sysöfo
->
fúmw¨e_èg
);

599 
	`À32_to_˝us
(&
dev
->
hw_sysöfo
->
dw_rsv
[0]);

600 
	`À32_to_˝us
(&
dev
->
hw_sysöfo
->
dw_rsv
[1]);

601 
	`À32_to_˝us
(&
dev
->
hw_sysöfo
->
dw_rsv
[2]);

602 
dev
->
hw_nch™√l
 = dev->
hw_sysöfo
->hw_nchannel;

603 
dev
->
hw_¡hªad
 = dev->
hw_sysöfo
->
hw_¡hªad_∆un
 & 0x0F;

604 
dev
->
hw_∆un
 = ((dev->
hw_sysöfo
->
hw_¡hªad_∆un
 >> 4) & 0x0F) + 1;

605 
dev
->
hw_thªads
 = dev->
hw_nch™√l
 * dev->
hw_¡hªad
;

606 
dev
->
hw_luns
 = dev->
hw_thªads
 * dev->
hw_∆un
;

607 
dev
->
iowidth
 = ((dev->
hw_sysöfo
->
hw_misc_1
 >> 4) & 0x0F) + 1;

609 i‡(
dev
->
hw_sysöfo
->
hw_ecc_tmode
 & 0x02) {

610 
dev
->
tmode
 = 16;

611 } i‡(
dev
->
hw_sysöfo
->
hw_ecc_tmode
 & 0x04) {

612 
dev
->
tmode
 = 35;

613 } i‡(
dev
->
hw_sysöfo
->
hw_ecc_tmode
 & 0x08) {

614 
dev
->
tmode
 = 50;

615 } i‡(
dev
->
hw_sysöfo
->
hw_ecc_tmode
 & 0x10) {

616 
dev
->
tmode
 = 58;

618 
	`¥ötf
("D⁄'àsuµ‹àthi†ECC Tmode: 0x%02X\n", 
dev
->
hw_sysöfo
->
hw_ecc_tmode
);

619 
	`exô
(
EXIT_FAILURE
);

622 i‡(
dev
->
hw_sysöfo
->
hw_ecc_mode
 & 0x01) {

623 
dev
->
mmode
 = 13;

624 } i‡(
dev
->
hw_sysöfo
->
hw_ecc_mode
 & 0x02) {

625 
dev
->
mmode
 = 14;

627 
	`¥ötf
("D⁄'àsuµ‹àthi†ECC mode: 0x%02X\n", 
dev
->
hw_sysöfo
->
hw_ecc_mode
);

628 
	`exô
(
EXIT_FAILURE
);

631 
dev
->
èrgëluns_suµ‹t
 = ((dev->
hw_sysöfo
->
hw_if_suµ‹t
 & 
CE_NLUN_MASK
Ë>> 
CE_NLUN_SHIFT
) + 1;

634 
dev
->
phythªad_mem
 = 
	`mÆloc
((*dev->phythªad_memË* dev->
hw_thªads
);

635 i‡(
NULL
 =
dev
->
phythªad_mem
)

636 
‰ì_sys_out
;

637 
io˘l_d©a
.
size
 = (*
dev
->
phythªad_mem
Ë* dev->
hw_thªads
;

638 
io˘l_d©a
.
u£r_addr
 = 
dev
->
phythªad_mem
;

639 i‡(
	`io˘l
(
dev
->
fd
, 
SHANNONC_IOC_GF
, &
io˘l_d©a
))

640 
	`≥º‹_exô
("%s(ËÁûed", 
__func__
);

643 
dev
->
hw_c⁄fig
 = 
	`mÆloc
((*dev->hw_config));

644 i‡(
NULL
 =
dev
->
hw_c⁄fig
)

645 
‰ì_thªadmem_out
;

646 
dev
->
	`i‹ód_c⁄fig
(dev);

649 
dev
->
Êash
 = 
	`zmÆloc
((*dev->flash));

650 i‡(
NULL
 =
dev
->
Êash
)

651 
‰ì_cfg_out
;

652 
dev
->
Êash
->
suc˚ss_mask
 = 
FLASH_SUCCESS_MASK
;

653 
dev
->
Êash
->
suc˚ss_°©us
 = 
FLASH_SUCCESS_STATUS
;

655 
dev
->
c⁄fig
 = 
	`zmÆloc
((*dev->config));

656 i‡(
NULL
 =
dev
->
c⁄fig
)

657 
‰ì_Êash_out
;

660 
dev
->
Êash_bakup
 = 
	`zmÆloc
((*dev->flash_bakup));

661 i‡(
NULL
 =
dev
->
Êash_bakup
)

662 
‰ì_c⁄fig_out
;

664 
dev
->
c⁄fig_bakup
 = 
	`zmÆloc
((*dev->config_bakup));

665 i‡(
NULL
 =
dev
->
c⁄fig_bakup
)

666 
‰ì_Êash_bakup_out
;

669 
dev
->
mbr
 = 
	`zmÆloc
((*dev->mbr));

670 i‡(
NULL
 =
dev
->
mbr
)

671 
‰ì_c⁄fig_bakup_out
;

673 
dev
->
öhîít_mbr
 = 
	`zmÆloc
((*dev->
mbr
));

674 i‡(
NULL
 =
dev
->
öhîít_mbr
)

675 
‰ì_mbr_out
;

677 
	`gë_dev_domaös
(
dev
);

680 
	`sh™n⁄_ªad_n‹
(
dev
, &dev->
n‹öfo
, 
NORFLASH_INFO_ADDR
, (dev->norinfo));

681 i‡(
dev
->
n‹öfo
.
magic_numbî
 !
NORFLASH_INFO_MAGIC
) {

682 
	`•rötf
(
dev
->
n‹öfo
.
£rvi˚_èg
, "missing");

683 
	`•rötf
(
dev
->
n‹öfo
.
modñ_id
, "missing");

687  
dev
;

689 
‰ì_mbr_out
:

690 
	`‰ì
(
dev
->
mbr
);

691 
‰ì_c⁄fig_bakup_out
:

692 
	`‰ì
(
dev
->
c⁄fig_bakup
);

693 
‰ì_Êash_bakup_out
:

694 
	`‰ì
(
dev
->
Êash_bakup
);

695 
‰ì_c⁄fig_out
:

696 
	`‰ì
(
dev
->
c⁄fig
);

697 
‰ì_Êash_out
:

698 
	`‰ì
(
dev
->
Êash
);

699 
‰ì_cfg_out
:

700 
	`‰ì
(
dev
->
hw_c⁄fig
);

701 
‰ì_thªadmem_out
:

702 
	`‰ì
(
dev
->
phythªad_mem
);

703 
‰ì_sys_out
:

704 
	`‰ì
(
dev
->
hw_sysöfo
);

705 
˛o£_fd_out
:

706 
	`˛o£
(
dev
->
fd
);

707 
‰ì_dev_out
:

708 
	`‰ì
(
dev
);

709 
out
:

710  
NULL
;

711 
	}
}

713 
	$öô_devi˚
(
sh™n⁄_dev
 *
dev
)

715 
i
, 
phyå
, 
lun
, 
hód
;

716 
sh™n⁄_thªad
 *
thªad
;

718 
	`as£π
(
NULL
 !
dev
);

721 i‡(
dev
->
Êash_if˛ock
) {

722 
dev
->
	`iowrôe32
(dev, 0x0, 0x18);

723 
dev
->
	`iowrôe32
(dev, 0x80000000|dev->
Êash_if˛ock
, 0x18);

724 
	`u¶ìp
(1000);

728 i‡(1 !
dev
->
iowidth
 && 2 != dev->iowidth) {

729 
	`¥ötf
("FATAL: HARDWARE isÇeither 8bitÇor 16bit!\n");

730 
	`exô
(
EXIT_FAILURE
);

734 
dev
->
c⁄fig
->
nch™√l
 = dev->
hw_nch™√l
;

735 
dev
->
c⁄fig
->
¡hªad
 = dev->
hw_¡hªad
;

736 
dev
->
c⁄fig
->
∆un
 = dev->
hw_∆un
;

737 
dev
->
c⁄fig
->
thªads
 = dev->c⁄fig->
nch™√l
 * dev->c⁄fig->
¡hªad
;

738 
dev
->
c⁄fig
->
luns
 = dev->c⁄fig->
thªads
 * dev->c⁄fig->
∆un
;

739 
	`ª°‹e_deÁu…_c⁄fig
(
dev
);

740 i‡(
	`∑r£_Êash
(
dev
)) {

741 
	`¥ötf
("ERR:Öarse flash failed\n");

742  
ERR
;

744 
	`mem˝y
(
dev
->
Êash_bakup
, dev->
Êash
, (*dev->flash_bakup));

745 
dev
->
max∂™es
 = (((dev->
hw_sysöfo
->
hw_misc_1
 & 0x0FË+ 1Ë* 16 * 1024Ë/ dev->
Êash
->
∑ge_size
;

747 
dev
->
c⁄fig
->
nch™√l
 = 0;

748 
dev
->
c⁄fig
->
¡hªad
 = 0;

749 
dev
->
c⁄fig
->
∆un
 = 0;

750 
dev
->
c⁄fig
->
thªads
 = 0;

751 
dev
->
c⁄fig
->
luns
 = 0;

754 i‡(
	`∑r£_c⁄fig
(
dev
)) {

755 
	`¥ötf
("parse config failed\n");

756  
ERR
;

759 
dev
->
èrgëlun
 = 
	`mÆloc
(dev->
c⁄fig
->
luns
 * (*dev->targetlun));

760 i‡(
NULL
 =
dev
->
èrgëlun
)

761 
	`exô
(
EXIT_FAILURE
);

762 
	`bzîo
(
dev
->
èrgëlun
, dev->
c⁄fig
->
luns
 * (*dev->targetlun));

764 i‡(
	`check_ifmode_m©ch
(
dev
))

765 
	`exô
(
EXIT_FAILURE
);

768 
dev
->
∑ddög_buf„r
 = 
	`mÆloc
(dev->
c⁄fig
->
chunk_nd©a
);

769 i‡(
NULL
 =
dev
->
∑ddög_buf„r
)

770  
ALLOCMEM_FAILED
;

771 
i
 = 0; i < 
dev
->
c⁄fig
->
chunk_n£˘‹
; i++)

772 
	`mem£t
(
dev
->
∑ddög_buf„r
 + 
i
 * dev->
c⁄fig
->
£˘‹_size
, i, dev->config->sector_size);

775 
dev
->
sb
 = 
	`zmÆloc
((*dev->sbË* dev->
Êash
->
nblk
 / dev->
c⁄fig
->
≈œ√
);

776 i‡(
NULL
 =
dev
->
sb
)

777  
ALLOCMEM_FAILED
;

778 
i
 = 0; i < 
dev
->
Êash
->
nblk
 / dev->
c⁄fig
->
≈œ√
; i++) {

779 
dev
->
sb
[
i
].
idx
 = i;

781 
dev
->
sb
[
i
].
sb_lunöfo
.
luns
 = dev->
c⁄fig
->luns;

782 
dev
->
sb
[
i
].
sb_lunöfo
.
nd©Æun
 = dev->
c⁄fig
->
luns
 - 1;

783 
dev
->
sb
[
i
].
sb_lunöfo
.
∑rôy_lun
 = dev->
c⁄fig
->
luns
 - 1;

787 
dev
->
thªad
 = 
	`zmÆloc
(dev->
hw_thªads
 * (*dev->thread));

788 i‡(
NULL
 =
dev
->
thªad
)

789  
ALLOCMEM_FAILED
;

791 
phyå
 = 0;Öhyå < 
dev
->
hw_thªads
;Öhytr++) {

792 
thªad
 = &
dev
->thªad[
phyå
];

793 
thªad
->
phythªad_idx
 = 
phyå
;

794 
thªad
->
cmdhód
 = 0;

795 
thªad
->
cmdem±y
 = 
PAGE_SIZE
 - 8;

796 
thªad
->
ªq_cou¡
 = 0;

798 
thªad
->
cmdmem
.
kî√l_addr
 = 
dev
->
phythªad_mem
[
phyå
].kernel_addr;

799 
thªad
->
cmdmem
.
dma_addr
 = 
dev
->
phythªad_mem
[
phyå
].dma_addr;

800 
thªad
->
cmpmem
.
kî√l_addr
 = 
dev
->
phythªad_mem
[
phyå
].kî√l_add∏+ 
PAGE_SIZE
;

801 
thªad
->
cmpmem
.
dma_addr
 = 
dev
->
phythªad_mem
[
phyå
].dma_add∏+ 
PAGE_SIZE
;

805 
dev
->
lun
 = 
	`zmÆloc
(dev->
c⁄fig
->
luns
 * (*dev->lun));

806 i‡(
NULL
 =
dev
->
lun
)

807  
ALLOCMEM_FAILED
;

809 
dev
->
	`˛ór_queue
(dev);

810 
dev
->
	`ª£t
(dev);

812 
lun
 = 0;Üu¿< 
dev
->
c⁄fig
->
luns
;Üun++) {

813 
	`INIT_LIST_HEAD
(&
dev
->
lun
[lun].
ªq_li°hód
);

815 
dev
->
lun
[lun].
loglun
 =Üun;

816 
dev
->
lun
[lun].
ch™√l
 = 
	`gë_phych™√l
(dev, dev->lun[lun].
loglun
);

817 
dev
->
lun
[lun].
phylun
 = 
	`log2phy_lun
(dev, dev->lun[lun].
loglun
);

818 
dev
->
lun
[lun].
thªad
 = &dev->thªad[dev->lun[lun].
phylun
 / dev->
hw_∆un
];

819 
dev
->
lun
[lun].
hód
 = dev->lun[lun].
èû
 = -1;

821 
dev
->
	`iowrôe_luƒeg
(dev, 
	`U64_LOW_32
(dev->
lun
[lun].
thªad
->
cmdmem
.
dma_addr
),Üun, 
HW_cmdq_±e_lo
);

822 
dev
->
	`iowrôe_luƒeg
(dev, 
	`U64_HIGH_32
(dev->
lun
[lun].
thªad
->
cmdmem
.
dma_addr
),Üun, 
HW_cmdq_±e_hi
);

823 
dev
->
	`iowrôe_luƒeg
(dev, 
	`U64_LOW_32
(dev->
lun
[lun].
thªad
->
cmpmem
.
dma_addr
),Üun, 
HW_cmpq_±e_lo
);

824 
dev
->
	`iowrôe_luƒeg
(dev, 
	`U64_HIGH_32
(dev->
lun
[lun].
thªad
->
cmpmem
.
dma_addr
),Üun, 
HW_cmpq_±e_hi
);

828 i‡(
dev
->
hw_sysöfo
->
hw_wrbuf_suµ‹t
 & 0x0F) {

829 
dev
->
bufhód
 = 
	`zmÆloc
(2 * (*dev->bufhead));

830 i‡(
NULL
 =
dev
->
bufhód
)

831  
ALLOCMEM_FAILED
;

833 
hód
 = 0; head < 2; head++) {

834 
dev
->
bufhód
[
hód
].
cmdhód
 = 0;

835 
dev
->
bufhód
[
hód
].
cmdem±y
 = 
PAGE_SIZE
 - 8;

836 
dev
->
bufhód
[
hód
].
cmdmem
.
kî√l_addr
 = dev->
phythªad_mem
[hód].kî√l_add∏+ 2 * 
PAGE_SIZE
;

837 
dev
->
bufhód
[
hód
].
cmdmem
.
dma_addr
 = dev->
phythªad_mem
[hód].dma_add∏+ 2 * 
PAGE_SIZE
;

838 
dev
->
bufhód
[
hód
].
cmpmem
.
kî√l_addr
 = dev->
phythªad_mem
[hód].kî√l_add∏+ 3 * 
PAGE_SIZE
;

839 
dev
->
bufhód
[
hód
].
cmpmem
.
dma_addr
 = dev->
phythªad_mem
[hód].dma_add∏+ 3 * 
PAGE_SIZE
;

840 
	`INIT_LIST_HEAD
(&
dev
->
bufhód
[
hód
].
ªq_li°hód
);

842 
dev
->
	`iowrôe_buÊuƒeg
(dev, 
	`U64_LOW_32
(dev->
bufhód
[
hód
].
cmdmem
.
dma_addr
), hód, 
HW_cmdq_±e_lo
);

843 
dev
->
	`iowrôe_buÊuƒeg
(dev, 
	`U64_HIGH_32
(dev->
bufhód
[
hód
].
cmdmem
.
dma_addr
), hód, 
HW_cmdq_±e_hi
);

844 
dev
->
	`iowrôe_buÊuƒeg
(dev, 
	`U64_LOW_32
(dev->
bufhód
[
hód
].
cmpmem
.
dma_addr
), hód, 
HW_cmpq_±e_lo
);

845 
dev
->
	`iowrôe_buÊuƒeg
(dev, 
	`U64_HIGH_32
(dev->
bufhód
[
hód
].
cmpmem
.
dma_addr
), hód, 
HW_cmpq_±e_hi
);

849 
	`check_èrgë_lun
(
dev
);

850 
	`mem˝y
(
dev
->
c⁄fig_bakup
, dev->
c⁄fig
, (*dev->config_bakup));

853 
dev
->
dummy_mem
.
size
 = 4096;

854 
dev
->
	`gë_mem
(dev, &dev->
dummy_mem
);

857 
dev
->
ifmode
 = dev->
c⁄fig
->ifmodê
IFMODE_ASYNC
;

858 
dev
->
	`c⁄fig_h¨dw¨e
(dev);

859 
dev
->
öô_d⁄e
 = 1;

861 
dev
->
c⁄fig_bakup
->
ifmode
) {

862 
IFMODE_ASYNC
:

865 
IFMODE_SYNC
:

866 i‡(
	`sh™n⁄_su≥r_sync
(
dev
)) {

867 
	`¥ötf
("set super sync fail\n");

868 
	`exô
(
EXIT_FAILURE
);

871 
IFMODE_TOGGLE
:

872 i‡(
	`sh™n⁄_su≥r_toggÀ
(
dev
)) {

873 
	`¥ötf
("set superÅoggle fail\n");

874 
	`exô
(
EXIT_FAILURE
);

878 
	`¥ötf
("InvÆid fœsh ifmodê%d\n", 
dev
->
c⁄fig_bakup
->
ifmode
);

879 
	`exô
(
EXIT_FAILURE
);

883 i‡(
dev
->
Êash
->
drv£âög
.
d©™um
) {

884 i‡(!
	`°∫cmp
(
dev
->
subsy°emid
, "0040", 4Ë&& 0x040A517A93953C45UL =dev->
Êash
->
id
.
l⁄gid
) {

886 
u8
 
odt
[4] = {0x10, 0, 0, 0};

887 
dev
->
Êash
->
drv£âög
.
d©a
[2] = 0x04;

888 i‡(
	`su≥r_£t_„©uª
(
dev
, 0xEF, 0x02, 
odt
, (odt))) {

889 
	`¥ötf
("Set ODT featureÉrror\n");

890 
	`exô
(
EXIT_FAILURE
);

894 i‡(
	`su≥r_£t_„©uª
(
dev
, dev->
Êash
->
drv£âög
.
d©a
[0], dev->flash->drvsetting.data[1],

895 
dev
->
Êash
->
drv£âög
.
d©a
 + 2, dev->Êash->drv£âög.
d©™um
 - 2)) {

896 
	`¥ötf
("Set feature drvmode failed");

897  
ERR
;

901 
	`wrôe_adv™˚d_ªad_mi¸ocode
(
dev
);

903 
	}
}

909 
	$ª_öô_devi˚
(
sh™n⁄_dev
 *
dev
)

911 
i
;

913 
	`as£π
(
dev
->
öô_d⁄e
 == 1);

915 i‡(
	`ˇlcuœã_ödúe˘_c⁄fig
(
dev
)) {

916 
	`mem˝y
(
dev
->
Êash
, dev->
Êash_bakup
, (*dev->flash));

917 
	`mem˝y
(
dev
->
c⁄fig
, dev->
c⁄fig_bakup
, (*dev->config));

918  
ERR
;

922 
	`‰ì
(
dev
->
∑ddög_buf„r
);

923 
dev
->
∑ddög_buf„r
 = 
	`mÆloc
(dev->
c⁄fig
->
chunk_nd©a
);

924 i‡(
NULL
 =
dev
->
∑ddög_buf„r
)

925  
ALLOCMEM_FAILED
;

926 
i
 = 0; i < 
dev
->
c⁄fig
->
chunk_n£˘‹
; i++)

927 
	`mem£t
(
dev
->
∑ddög_buf„r
 + 
i
 * dev->
c⁄fig
->
£˘‹_size
, i, dev->config->sector_size);

929 
dev
->
	`c⁄fig_h¨dw¨e
(dev);

931 
	}
}

933 
	$‰ì_devi˚
(
sh™n⁄_dev
 *
dev
)

936 i‡(
dev
->
bufhód
Ë
	`‰ì
(dev->bufhead);

937 i‡(
dev
->
lun
Ë
	`‰ì
(dev->lun);

938 i‡(
dev
->
sb
Ë
	`‰ì
(dev->sb);

939 i‡(
dev
->
thªad
Ë
	`‰ì
(dev->thread);

940 i‡(
dev
->
∑ddög_buf„r
Ë
	`‰ì
(dev->padding_buffer);

941 i‡(
dev
->
èrgëlun
Ë
	`‰ì
(dev->targetlun);

942 i‡(
dev
->
dummy_mem
.
size
Ë
	`‰ì_mem
(dev, &dev->dummy_mem);

943 i‡(
dev
->
exôlog
Ë
	`f˛o£
(dev->exitlog);

946 
	`‰ì
(
dev
->
öhîít_mbr
);

947 
	`‰ì
(
dev
->
mbr
);

948 
	`‰ì
(
dev
->
c⁄fig_bakup
);

949 
	`‰ì
(
dev
->
Êash_bakup
);

950 
	`‰ì
(
dev
->
c⁄fig
);

951 
	`‰ì
(
dev
->
Êash
);

952 
	`‰ì
(
dev
->
hw_c⁄fig
);

953 
	`‰ì
(
dev
->
phythªad_mem
);

954 
	`‰ì
(
dev
->
hw_sysöfo
);

955 
	`˛o£
(
dev
->
fd
);

956 
	`‰ì
(
dev
);

957 
	}
}

	@list.h

1 #i‚de‡
_LINUX_LIST_H


2 
	#_LINUX_LIST_H


	)

7 
	#BITS_PER_LONG
 32

	)

9 
	#BITS_PER_LONG
 64

	)

12 
	#BIT_MASK
(
ƒ
Ë(1UL << (“rË% 
BITS_PER_LONG
))

	)

13 
	#BYTES_PER_LONG
 (
BITS_PER_LONG
 / 8)

	)

14 
	#BIT_WORD
(
ƒ
Ë(“rË/ 
BITS_PER_LONG
)

	)

16 
ölöe
 
	$£t_bô
(
ƒ
, vﬁ©ûê*
addr
)

18 
mask
 = 
	`BIT_MASK
(
ƒ
);

19 *
p
 = ((*)
addr
Ë+ 
	`BIT_WORD
(
ƒ
);

21 *
p
 |
mask
;

22 
	}
}

24 
ölöe
 
	$˛ór_bô
(
ƒ
, vﬁ©ûê*
addr
)

26 
mask
 = 
	`BIT_MASK
(
ƒ
);

27 *
p
 = ((*)
addr
Ë+ 
	`BIT_WORD
(
ƒ
);

29 *
p
 &~
mask
;

30 
	}
}

32 
ölöe
 
	$ã°_bô
(
ƒ
, c⁄° vﬁ©ûê*
addr
)

34  1UL & (
addr
[
	`BIT_WORD
(
ƒ
)] >> (ƒ & (
BITS_PER_LONG
-1)));

35 
	}
}

40 
	~<löux/ty≥s.h
>

41 
	~<löux/°ddef.h
>

42 
	~<löux/pois⁄.h
>

43 
	~<löux/c⁄°.h
>

45 
	sli°_hód
{

46 
li°_hód
 *
	m√xt
, *
	m¥ev
;

49 
	#LIST_POISON1
 ((*)0x00100100)

	)

50 
	#LIST_POISON2
 ((*)0x00200200)

	)

52 
	#off£tof
(
TYPE
, 
MEMBER
Ë((Ë&((TYPE *)0)->MEMBER)

	)

53 
	#c⁄èöî_of
(
±r
, 
ty≥
, 
membî
) ({ \

54 c⁄° 
	`ty≥of
–((
ty≥
 *)0)->
membî
 ) *
__m±r
 = (
±r
); \

55 (
ty≥
 *)–(*)
__m±r
 - 
	`off£tof
—y≥,
membî
Ë);})

	)

57 
	#BUG
(Ëdo{ 
	`¥ötf
("XXX: bug()\n"); }0)

	)

58 
	#BUG_ON
(Ëdo{ 
	`¥ötf
("XXX: bug_⁄()\n"); }0)

	)

71 
	#LIST_HEAD_INIT
(
«me
Ë{ &“ame), &“ameË}

	)

73 
	#LIST_HEAD
(
«me
) \

74 
li°_hód
 
«me
 = 
	`LIST_HEAD_INIT
“ame)

	)

76 
ölöe
 
	$INIT_LIST_HEAD
(
li°_hód
 *
li°
)

78 
li°
->
√xt
 =Üist;

79 
li°
->
¥ev
 =Üist;

80 
	}
}

88 #i‚de‡
CONFIG_DEBUG_LIST


89 
ölöe
 
	$__li°_add
(
li°_hód
 *
√w
,

90 
li°_hód
 *
¥ev
,

91 
li°_hód
 *
√xt
)

93 
√xt
->
¥ev
 = 
√w
;

94 
√w
->
√xt
 =Çext;

95 
√w
->
¥ev
 =Örev;

96 
¥ev
->
√xt
 = 
√w
;

97 
	}
}

99 
__li°_add
(
li°_hód
 *
√w
,

100 
li°_hód
 *
¥ev
,

101 
li°_hód
 *
√xt
);

112 
ölöe
 
	$li°_add
(
li°_hód
 *
√w
, li°_hód *
hód
)

114 
	`__li°_add
(
√w
, 
hód
, hód->
√xt
);

115 
	}
}

126 
ölöe
 
	$li°_add_èû
(
li°_hód
 *
√w
, li°_hód *
hód
)

128 
	`__li°_add
(
√w
, 
hód
->
¥ev
, head);

129 
	}
}

138 
ölöe
 
	$__li°_dñ
(
li°_hód
 * 
¥ev
, li°_hód * 
√xt
)

140 
√xt
->
¥ev
 =Örev;

141 
¥ev
->
√xt
 =Çext;

142 
	}
}

150 #i‚de‡
CONFIG_DEBUG_LIST


151 
ölöe
 
	$__li°_dñ_íåy
(
li°_hód
 *
íåy
)

153 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

154 
	}
}

156 
ölöe
 
	$li°_dñ
(
li°_hód
 *
íåy
)

158 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

159 
íåy
->
√xt
 = 
LIST_POISON1
;

160 
íåy
->
¥ev
 = 
LIST_POISON2
;

161 
	}
}

163 
__li°_dñ_íåy
(
li°_hód
 *
íåy
);

164 
li°_dñ
(
li°_hód
 *
íåy
);

174 
ölöe
 
	$li°_ª∂a˚
(
li°_hód
 *
ﬁd
,

175 
li°_hód
 *
√w
)

177 
√w
->
√xt
 = 
ﬁd
->next;

178 
√w
->
√xt
->
¥ev
 =Çew;

179 
√w
->
¥ev
 = 
ﬁd
->prev;

180 
√w
->
¥ev
->
√xt
 =Çew;

181 
	}
}

183 
ölöe
 
	$li°_ª∂a˚_öô
(
li°_hód
 *
ﬁd
,

184 
li°_hód
 *
√w
)

186 
	`li°_ª∂a˚
(
ﬁd
, 
√w
);

187 
	`INIT_LIST_HEAD
(
ﬁd
);

188 
	}
}

194 
ölöe
 
	$li°_dñ_öô
(
li°_hód
 *
íåy
)

196 
	`__li°_dñ_íåy
(
íåy
);

197 
	`INIT_LIST_HEAD
(
íåy
);

198 
	}
}

205 
ölöe
 
	$li°_move
(
li°_hód
 *
li°
, li°_hód *
hód
)

207 
	`__li°_dñ_íåy
(
li°
);

208 
	`li°_add
(
li°
, 
hód
);

209 
	}
}

216 
ölöe
 
	$li°_move_èû
(
li°_hód
 *
li°
,

217 
li°_hód
 *
hód
)

219 
	`__li°_dñ_íåy
(
li°
);

220 
	`li°_add_èû
(
li°
, 
hód
);

221 
	}
}

228 
ölöe
 
	$li°_is_œ°
(c⁄° 
li°_hód
 *
li°
,

229 c⁄° 
li°_hód
 *
hód
)

231  
li°
->
√xt
 =
hód
;

232 
	}
}

238 
ölöe
 
	$li°_em±y
(c⁄° 
li°_hód
 *
hód
)

240  
hód
->
√xt
 == head;

241 
	}
}

256 
ölöe
 
	$li°_em±y_ˇªful
(c⁄° 
li°_hód
 *
hód
)

258 
li°_hód
 *
√xt
 = 
hód
->next;

259  (
√xt
 =
hód
Ë&& (√xà=hód->
¥ev
);

260 
	}
}

266 
ölöe
 
	$li°_rŸ©e_À·
(
li°_hód
 *
hód
)

268 
li°_hód
 *
fú°
;

270 i‡(!
	`li°_em±y
(
hód
)) {

271 
fú°
 = 
hód
->
√xt
;

272 
	`li°_move_èû
(
fú°
, 
hód
);

274 
	}
}

280 
ölöe
 
	$li°_is_söguœr
(c⁄° 
li°_hód
 *
hód
)

282  !
	`li°_em±y
(
hód
Ë&& (hód->
√xt
 =hód->
¥ev
);

283 
	}
}

285 
ölöe
 
	$__li°_cut_posôi⁄
(
li°_hód
 *
li°
,

286 
li°_hód
 *
hód
, li°_hód *
íåy
)

288 
li°_hód
 *
√w_fú°
 = 
íåy
->
√xt
;

289 
li°
->
√xt
 = 
hód
->next;

290 
li°
->
√xt
->
¥ev
 =Üist;

291 
li°
->
¥ev
 = 
íåy
;

292 
íåy
->
√xt
 = 
li°
;

293 
hód
->
√xt
 = 
√w_fú°
;

294 
√w_fú°
->
¥ev
 = 
hód
;

295 
	}
}

311 
ölöe
 
	$li°_cut_posôi⁄
(
li°_hód
 *
li°
,

312 
li°_hód
 *
hód
, li°_hód *
íåy
)

314 i‡(
	`li°_em±y
(
hód
))

316 i‡(
	`li°_is_söguœr
(
hód
) &&

317 (
hód
->
√xt
 !
íåy
 && head !=Éntry))

319 i‡(
íåy
 =
hód
)

320 
	`INIT_LIST_HEAD
(
li°
);

322 
	`__li°_cut_posôi⁄
(
li°
, 
hód
, 
íåy
);

323 
	}
}

325 
ölöe
 
	$__li°_•li˚
(c⁄° 
li°_hód
 *
li°
,

326 
li°_hód
 *
¥ev
,

327 
li°_hód
 *
√xt
)

329 
li°_hód
 *
fú°
 = 
li°
->
√xt
;

330 
li°_hód
 *
œ°
 = 
li°
->
¥ev
;

332 
fú°
->
¥ev
 =Örev;

333 
¥ev
->
√xt
 = 
fú°
;

335 
œ°
->
√xt
 =Çext;

336 
√xt
->
¥ev
 = 
œ°
;

337 
	}
}

344 
ölöe
 
	$li°_•li˚
(c⁄° 
li°_hód
 *
li°
,

345 
li°_hód
 *
hód
)

347 i‡(!
	`li°_em±y
(
li°
))

348 
	`__li°_•li˚
(
li°
, 
hód
, hód->
√xt
);

349 
	}
}

356 
ölöe
 
	$li°_•li˚_èû
(
li°_hód
 *
li°
,

357 
li°_hód
 *
hód
)

359 i‡(!
	`li°_em±y
(
li°
))

360 
	`__li°_•li˚
(
li°
, 
hód
->
¥ev
, head);

361 
	}
}

370 
ölöe
 
	$li°_•li˚_öô
(
li°_hód
 *
li°
,

371 
li°_hód
 *
hód
)

373 i‡(!
	`li°_em±y
(
li°
)) {

374 
	`__li°_•li˚
(
li°
, 
hód
, hód->
√xt
);

375 
	`INIT_LIST_HEAD
(
li°
);

377 
	}
}

387 
ölöe
 
	$li°_•li˚_èû_öô
(
li°_hód
 *
li°
,

388 
li°_hód
 *
hód
)

390 i‡(!
	`li°_em±y
(
li°
)) {

391 
	`__li°_•li˚
(
li°
, 
hód
->
¥ev
, head);

392 
	`INIT_LIST_HEAD
(
li°
);

394 
	}
}

402 
	#li°_íåy
(
±r
, 
ty≥
, 
membî
) \

403 
	`c⁄èöî_of
(
±r
, 
ty≥
, 
membî
)

	)

413 
	#li°_fú°_íåy
(
±r
, 
ty≥
, 
membî
) \

414 
	`li°_íåy
((
±r
)->
√xt
, 
ty≥
, 
membî
)

	)

421 
	#li°_f‹_óch
(
pos
, 
hód
) \

422 
pos
 = (
hód
)->
√xt
;Öo†!(hód);Öo†pos->√xt)

	)

432 
	#__li°_f‹_óch
(
pos
, 
hód
) \

433 
pos
 = (
hód
)->
√xt
;Öo†!(hód);Öo†pos->√xt)

	)

440 
	#li°_f‹_óch_¥ev
(
pos
, 
hód
) \

441 
pos
 = (
hód
)->
¥ev
;Öo†!(hód);Öo†pos->¥ev)

	)

449 
	#li°_f‹_óch_ß„
(
pos
, 
n
, 
hód
) \

450 
pos
 = (
hód
)->
√xt
, 
n
 =Öos->next;Öos != (head); \

451 
pos
 = 
n
,Ç =Öos->
√xt
)

	)

459 
	#li°_f‹_óch_¥ev_ß„
(
pos
, 
n
, 
hód
) \

460 
pos
 = (
hód
)->
¥ev
, 
n
 =Öos->prev; \

461 
pos
 !(
hód
); \

462 
pos
 = 
n
,Ç =Öos->
¥ev
)

	)

470 
	#li°_f‹_óch_íåy
(
pos
, 
hód
, 
membî
) \

471 
pos
 = 
	`li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
); \

472 &
pos
->
membî
 !(
hód
); \

473 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), membî))

	)

481 
	#li°_f‹_óch_íåy_ªvî£
(
pos
, 
hód
, 
membî
) \

482 
pos
 = 
	`li°_íåy
((
hód
)->
¥ev
, 
	`ty≥of
(*pos), 
membî
); \

483 &
pos
->
membî
 !(
hód
); \

484 
pos
 = 
	`li°_íåy
’os->
membî
.
¥ev
, 
	`ty≥of
(*pos), membî))

	)

494 
	#li°_¥ï¨e_íåy
(
pos
, 
hód
, 
membî
) \

495 ((
pos
Ë? : 
	`li°_íåy
(
hód
, 
	`ty≥of
(*pos), 
membî
))

	)

506 
	#li°_f‹_óch_íåy_c⁄töue
(
pos
, 
hód
, 
membî
) \

507 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

508 &
pos
->
membî
 !(
hód
); \

509 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), membî))

	)

520 
	#li°_f‹_óch_íåy_c⁄töue_ªvî£
(
pos
, 
hód
, 
membî
) \

521 
pos
 = 
	`li°_íåy
’os->
membî
.
¥ev
, 
	`ty≥of
(*pos), member); \

522 &
pos
->
membî
 !(
hód
); \

523 
pos
 = 
	`li°_íåy
’os->
membî
.
¥ev
, 
	`ty≥of
(*pos), membî))

	)

533 
	#li°_f‹_óch_íåy_‰om
(
pos
, 
hód
, 
membî
) \

534 ; &
pos
->
membî
 !(
hód
); \

535 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), membî))

	)

544 
	#li°_f‹_óch_íåy_ß„
(
pos
, 
n
, 
hód
, 
membî
) \

545 
pos
 = 
	`li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
), \

546 
n
 = 
	`li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

547 &
pos
->
membî
 !(
hód
); \

548 
pos
 = 
n
,Ç = 
	`li°_íåy
“->
membî
.
√xt
, 
	`ty≥of
(*n), membî))

	)

560 
	#li°_f‹_óch_íåy_ß„_c⁄töue
(
pos
, 
n
, 
hód
, 
membî
) \

561 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member), \

562 
n
 = 
	`li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

563 &
pos
->
membî
 !(
hód
); \

564 
pos
 = 
n
,Ç = 
	`li°_íåy
“->
membî
.
√xt
, 
	`ty≥of
(*n), membî))

	)

576 
	#li°_f‹_óch_íåy_ß„_‰om
(
pos
, 
n
, 
hód
, 
membî
) \

577 
n
 = 
	`li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

578 &
pos
->
membî
 !(
hód
); \

579 
pos
 = 
n
,Ç = 
	`li°_íåy
“->
membî
.
√xt
, 
	`ty≥of
(*n), membî))

	)

591 
	#li°_f‹_óch_íåy_ß„_ªvî£
(
pos
, 
n
, 
hód
, 
membî
) \

592 
pos
 = 
	`li°_íåy
((
hód
)->
¥ev
, 
	`ty≥of
(*pos), 
membî
), \

593 
n
 = 
	`li°_íåy
(
pos
->
membî
.
¥ev
, 
	`ty≥of
(*pos), member); \

594 &
pos
->
membî
 !(
hód
); \

595 
pos
 = 
n
,Ç = 
	`li°_íåy
“->
membî
.
¥ev
, 
	`ty≥of
(*n), membî))

	)

609 
	#li°_ß„_ª£t_√xt
(
pos
, 
n
, 
membî
) \

610 
n
 = 
	`li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), membî)

	)

620 
	#HLIST_HEAD_INIT
 { .
fú°
 = 
NULL
 }

	)

621 
	#HLIST_HEAD
(
«me
Ë
hli°_hód
Çamê{ .
fú°
 = 
NULL
 }

	)

622 
	#INIT_HLIST_HEAD
(
±r
Ë(’å)->
fú°
 = 
NULL
)

	)

623 
ölöe
 
	$INIT_HLIST_NODE
(
hli°_node
 *
h
)

625 
h
->
√xt
 = 
NULL
;

626 
h
->
µªv
 = 
NULL
;

627 
	}
}

629 
ölöe
 
	$hli°_unhashed
(c⁄° 
hli°_node
 *
h
)

631  !
h
->
µªv
;

632 
	}
}

634 
ölöe
 
	$hli°_em±y
(c⁄° 
hli°_hód
 *
h
)

636  !
h
->
fú°
;

637 
	}
}

639 
ölöe
 
	$__hli°_dñ
(
hli°_node
 *
n
)

641 
hli°_node
 *
√xt
 = 
n
->next;

642 
hli°_node
 **
µªv
 = 
n
->pprev;

643 *
µªv
 = 
√xt
;

644 i‡(
√xt
)

645 
√xt
->
µªv
 =Öprev;

646 
	}
}

648 
ölöe
 
	$hli°_dñ
(
hli°_node
 *
n
)

650 
	`__hli°_dñ
(
n
);

651 
n
->
√xt
 = 
LIST_POISON1
;

652 
n
->
µªv
 = 
LIST_POISON2
;

653 
	}
}

655 
ölöe
 
	$hli°_dñ_öô
(
hli°_node
 *
n
)

657 i‡(!
	`hli°_unhashed
(
n
)) {

658 
	`__hli°_dñ
(
n
);

659 
	`INIT_HLIST_NODE
(
n
);

661 
	}
}

663 
ölöe
 
	$hli°_add_hód
(
hli°_node
 *
n
, 
hli°_hód
 *
h
)

665 
hli°_node
 *
fú°
 = 
h
->first;

666 
n
->
√xt
 = 
fú°
;

667 i‡(
fú°
)

668 
fú°
->
µªv
 = &
n
->
√xt
;

669 
h
->
fú°
 = 
n
;

670 
n
->
µªv
 = &
h
->
fú°
;

671 
	}
}

674 
ölöe
 
	$hli°_add_bef‹e
(
hli°_node
 *
n
,

675 
hli°_node
 *
√xt
)

677 
n
->
µªv
 = 
√xt
->pprev;

678 
n
->
√xt
 =Çext;

679 
√xt
->
µªv
 = &
n
->next;

680 *(
n
->
µªv
) =Ç;

681 
	}
}

683 
ölöe
 
	$hli°_add_a·î
(
hli°_node
 *
n
,

684 
hli°_node
 *
√xt
)

686 
√xt
->√xà
n
->next;

687 
n
->
√xt
 =Çext;

688 
√xt
->
µªv
 = &
n
->next;

690 if(
√xt
->next)

691 
√xt
->√xt->
µªv
 = &next->next;

692 
	}
}

695 
ölöe
 
	$hli°_add_Áke
(
hli°_node
 *
n
)

697 
n
->
µªv
 = &n->
√xt
;

698 
	}
}

704 
ölöe
 
	$hli°_move_li°
(
hli°_hód
 *
ﬁd
,

705 
hli°_hód
 *
√w
)

707 
√w
->
fú°
 = 
ﬁd
->first;

708 i‡(
√w
->
fú°
)

709 
√w
->
fú°
->
µªv
 = &new->first;

710 
ﬁd
->
fú°
 = 
NULL
;

711 
	}
}

713 
	#hli°_íåy
(
±r
, 
ty≥
, 
membî
Ë
	`c⁄èöî_of
’å,ty≥,membî)

	)

715 
	#hli°_f‹_óch
(
pos
, 
hód
) \

716 
pos
 = (
hód
)->
fú°
;Öo†;Öo†pos->
√xt
)

	)

718 
	#hli°_f‹_óch_ß„
(
pos
, 
n
, 
hód
) \

719 
pos
 = (
hód
)->
fú°
;Öo†&& ({ 
n
 =Öos->
√xt
; 1; }); \

720 
pos
 = 
n
)

	)

729 
	#hli°_f‹_óch_íåy
(
ços
, 
pos
, 
hód
, 
membî
) \

730 
pos
 = (
hód
)->
fú°
; \

731 
pos
 && \

732 ({ 
ços
 = 
	`hli°_íåy
(
pos
, 
	`ty≥of
(*ços), 
membî
); 1;}); \

733 
pos
 =Öos->
√xt
)

	)

741 
	#hli°_f‹_óch_íåy_c⁄töue
(
ços
, 
pos
, 
membî
) \

742 
pos
 = (pos)->
√xt
; \

743 
pos
 && \

744 ({ 
ços
 = 
	`hli°_íåy
(
pos
, 
	`ty≥of
(*ços), 
membî
); 1;}); \

745 
pos
 =Öos->
√xt
)

	)

753 
	#hli°_f‹_óch_íåy_‰om
(
ços
, 
pos
, 
membî
) \

754 ; 
pos
 && \

755 ({ 
ços
 = 
	`hli°_íåy
(
pos
, 
	`ty≥of
(*ços), 
membî
); 1;}); \

756 
pos
 =Öos->
√xt
)

	)

766 
	#hli°_f‹_óch_íåy_ß„
(
ços
, 
pos
, 
n
, 
hód
, 
membî
) \

767 
pos
 = (
hód
)->
fú°
; \

768 
pos
 && ({ 
n
 =Öos->
√xt
; 1; }) && \

769 ({ 
ços
 = 
	`hli°_íåy
(
pos
, 
	`ty≥of
(*ços), 
membî
); 1;}); \

770 
pos
 = 
n
)

	)

	@lost/reqlist.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

10 
	~<time.h
>

12 
	~"toﬁ.h
"

17 
	mønd_wrôe
 = 0,

18 
	mønd_ªad
,

19 
	mønd_îa£
,

20 
	mønd_n›s
,

24 
	$is_bad_lun
(
sh™n⁄_dev
 *
dev
, 
block
, 
lun
)

27 
	}
}

30 
sh™n⁄_ªque°
 *
	$mk_ønd_îa£_ªq
(
sh™n⁄_dev
 *
dev
, 
lun
)

32 
hód
, 
blk
, 
µa
, 
∂™e
;

33 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
;

35 
hód
 = 0;

36 
blk
 = 
	`ønd
(Ë% (
dev
->
Êash
->
nblk
 * dev->
c⁄fig
->
≈œ√
);

37 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

38 
hód
 |(1 << 
SH_ERASE_PLANE_SHIFT
);

39 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

41 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

42 i‡(
NULL
 =
chunk_hód_ªq
)

43  
NULL
;

45 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

46 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

47 i‡(
NULL
 =
ªq
) {

48 
	`‰ì_ªque°
(
chunk_hód_ªq
);

49  
NULL
;

51 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

54  
chunk_hód_ªq
;

55 
	}
}

57 
sh™n⁄_ªque°
 *
	$mk_ønd_¥îód_ªq
(
sh™n⁄_dev
 *
dev
, 
lun
)

59 
hód
, 
µa
, 
∂™e
;

60 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
;

62 
hód
 = 0;

63 
µa
 = 
	`ønd
(Ë% (
dev
->
Êash
->
nblk
 * dev->Êash->
≈age
);

64 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1) {

65 
hód
 |(1 << 
SH_READ_PLANE_SHIFT
);

66 
µa
 &(~
dev
->
Êash
->
∂™e_mask
);

69 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

70 i‡(
NULL
 =
chunk_hód_ªq
)

71  
NULL
;

73 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

74 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

75 i‡(
NULL
 =
ªq
) {

76 
	`‰ì_ªque°
(
chunk_hód_ªq
);

77  
NULL
;

79 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

82  
chunk_hód_ªq
;

83 
	}
}

85 
sh™n⁄_ªque°
 *
	$mk_wrôe_ªq
(
sh™n⁄_dev
 *
dev
, 
lun
, 
µa
, 
hód
)

87 
blk
, 
∂™e
;

88 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
;

90 
blk
 = 
µa
 / (
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
);

92 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

93 
hód
 |(1 << 
SH_WRITE_PLANE_SHIFT
);

96 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
 && 
lun
 =dev->
sb
[
blk
].
∑rôy_lun
) {

97 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidwrôe_cmd
, dev->
sb
[
blk
].
∑rôy_lun
, 
µa
, 
hód
, 0, 0);

98 i‡(
NULL
 =
chunk_hód_ªq
)

99  
NULL
;

101 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

102 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidwrôe_cmd
, dev->
sb
[
blk
].
∑rôy_lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

103 i‡(
NULL
 =
ªq
) {

104 
	`‰ì_ªque°
(
chunk_hód_ªq
);

105  
NULL
;

107 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

110  
chunk_hód_ªq
;

114 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
, 
hód
, 0, dev->
c⁄fig
->
∑ge_n£˘‹
);

115 i‡(
NULL
 =
chunk_hód_ªq
)

116  
NULL
;

118 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

119 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, dev->
c⁄fig
->
∑ge_n£˘‹
);

120 i‡(
NULL
 =
ªq
) {

121 
	`‰ì_ªque°
(
chunk_hód_ªq
);

122  
NULL
;

124 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

127  
chunk_hód_ªq
;

128 
	}
}

130 
	#PR_REQLIST
(
›
) \

132 
	`¥ötf
(""#op""); \

133 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) \

134 
	`¥ötf
("Ö∑=%06X", 
ªq
->
µa
 + 
∂™e
 * 
dev
->
Êash
->
≈age
); \

135 
	`¥ötf
("\n"); \

136 } 0)

	)

143 
li°_hód
 *
	$make_shód_ªqli°
(
sh™n⁄_dev
 *
dev
, 
lun
, 
block
, 
hód
, 
£ed
)

145 
›
, 
îa£_øã
;

146 
µa
, 
∂™e
, 
µa_˙t
;

147 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

148 
li°_hód
 *
ªq_hód
;

150 
ªq_hód
 = 
	`mÆloc
((*req_head));

151 i‡(
NULL
 =
ªq_hód
)

152  
NULL
;

153 
	`INIT_LIST_HEAD
(
ªq_hód
);

155 
	`§™d
(
£ed
);

156 
µa_˙t
 = 0;

157 
îa£_øã
 = 0;

158 
µa
 = 
block
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

160 i‡(
dev
->
c⁄fig
->
øid_mode
 && 
hód
 !
INDEP_HEAD
 && 
lun
 =dev->
sb
[
block
].
∑rôy_lun
) {

161 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidöô_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

162 i‡(
NULL
 =
ªq
)

163 
‰ì_ªq_out
;

164 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

165 
	`¥ötf
("PI:Ö∑=%06X\n", 
ªq
->
µa
);

169 
µa_˙t
 < 256) {

170 
›
 = 
	`ønd
();

172 
›
 % 
ønd_n›s
) {

173 
ønd_wrôe
:

174 i‡(
	`is_bad_lun
(
dev
, 
block
, 
lun
))

177 
ªq
 = 
	`mk_wrôe_ªq
(
dev
, 
lun
, 
µa
, 
hód
);

178 i‡(
NULL
 =
ªq
)

179 
‰ì_ªq_out
;

180 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

182 
µa
++;

183 
µa_˙t
++;

185 i‡(
dev
->
c⁄fig
->
øid_mode
 && 
hód
 !
INDEP_HEAD
 && 
lun
 =dev->
sb
[
block
].
∑rôy_lun
)

186 
	`PR_REQLIST
(
PW
);

188 
	`PR_REQLIST
(
WR
);

191 
ønd_ªad
:

192 
ªq
 = 
	`mk_ønd_¥îód_ªq
(
dev
, 
lun
);

193 i‡(
NULL
 =
ªq
)

194 
‰ì_ªq_out
;

195 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

197 
	`PR_REQLIST
(
RD
);

200 
ønd_îa£
:

201 i‡((
îa£_øã
++ % 64) != 0)

204 
ªq
 = 
	`mk_ønd_îa£_ªq
(
dev
, 
lun
);

205 i‡(
NULL
 =
ªq
)

206 
‰ì_ªq_out
;

207 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

209 
	`PR_REQLIST
(
ER
);

213 
	`as£π
(0);

214  
NULL
;

217  
ªq_hód
;

219 
‰ì_ªq_out
:

220 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, 
ªq_hód
, 
li°
) {

221 
	`li°_dñ
(&
ªq
->
li°
);

222 
	`‰ì_ªque°
(
ªq
);

224  
NULL
;

225 
	}
}

228 
li°_hód
 *
	$make_ønd_ªqli°
(
sh™n⁄_dev
 *
dev
, 
lun
, 
hód0_block
, 
hód1_block
)

230 
›
, 
îa£_øã
;

231 
hód
, 
∂™e
;

232 
hód0_µa
, 
hód1_µa
, 
hód0_µa_˙t
, 
hód1_µa_˙t
;

233 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

234 
li°_hód
 *
ªq_hód
;

236 
ªq_hód
 = 
	`mÆloc
((*req_head));

237 i‡(
NULL
 =
ªq_hód
)

238  
NULL
;

239 
	`INIT_LIST_HEAD
(
ªq_hód
);

241 
	`§™d
(
	`time
(
NULL
));

242 
hód0_µa
 = 
hód0_block
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

243 
hód1_µa
 = 
hód1_block
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

244 
hód0_µa_˙t
 = 
hód1_µa_˙t
 = 0;

245 
îa£_øã
 = 0;

248 i‡(
dev
->
c⁄fig
->
øid_mode
 && 
lun
 =dev->
sb
[
hód0_block
].
∑rôy_lun
) {

249 
hód
 = 
HEAD0
;

250 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidöô_cmd
, dev->
sb
[
hód0_block
].
∑rôy_lun
, 
hód0_µa
, 
hód
, 0, dev->sb[hód0_block].
nd©Æun
);

251 i‡(
NULL
 =
ªq
)

252 
‰ì_ªq_out
;

253 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

256 i‡(
dev
->
c⁄fig
->
øid_mode
 && 
lun
 =dev->
sb
[
hód1_block
].
∑rôy_lun
) {

257 
hód
 = 
HEAD1
;

258 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidöô_cmd
, dev->
sb
[
hód1_block
].
∑rôy_lun
, 
hód1_µa
, 
hód
, 0, dev->sb[hód1_block].
nd©Æun
);

259 i‡(
NULL
 =
ªq
)

260 
‰ì_ªq_out
;

261 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

265 
hód0_µa_˙t
 < 255 || 
hód1_µa_˙t
 < 255) {

266 
›
 = 
	`ønd
();

268 
›
 % 
ønd_n›s
) {

269 
ønd_wrôe_hód0
:

270 i‡(
hód0_µa_˙t
++ > 255)

273 i‡(
	`is_bad_lun
(
dev
, 
hód0_block
, 
lun
))

276 
ªq
 = 
	`mk_wrôe_ªq
(
dev
, 
lun
, 
hód0_µa
, 
HEAD0
);

277 i‡(
NULL
 =
ªq
)

278 
‰ì_ªq_out
;

279 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

281 
hód0_µa
++;

282 
	`PR_REQLIST
(
W0
);

285 
ønd_wrôe_hód1
:

286 i‡(
hód1_µa_˙t
++ > 255)

289 i‡(
	`is_bad_lun
(
dev
, 
hód1_block
, 
lun
))

292 
ªq
 = 
	`mk_wrôe_ªq
(
dev
, 
lun
, 
hód0_µa
, 
HEAD0
);

293 i‡(
NULL
 =
ªq
)

294 
‰ì_ªq_out
;

295 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

297 
hód1_µa
++;

298 
	`PR_REQLIST
(
W1
);

301 
ønd_ªad
:

302 
ªq
 = 
	`mk_ønd_¥îód_ªq
(
dev
, 
lun
);

303 i‡(
NULL
 =
ªq
)

304 
‰ì_ªq_out
;

305 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

307 
	`PR_REQLIST
(
RD
);

310 
ønd_îa£
:

311 i‡((
îa£_øã
++ % 64) != 0)

314 
ªq
 = 
	`mk_ønd_îa£_ªq
(
dev
, 
lun
);

315 i‡(
NULL
 =
ªq
)

316 
‰ì_ªq_out
;

317 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

319 
	`PR_REQLIST
(
ER
);

323 
	`as£π
(0);

324  
NULL
;

329 
‰ì_ªq_out
:

330 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, 
ªq_hód
, 
li°
) {

331 
	`li°_dñ
(&
ªq
->
li°
);

332 
	`‰ì_ªque°
(
ªq
);

334  
NULL
;

335 
	}
}

338 
	$de°‹y_ªqli°
(
li°_hód
 *
ªq_hód
)

340 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

342 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, 
ªq_hód
, 
li°
) {

343 
	`li°_dñ
(&
ªq
->
li°
);

344 
	`‰ì_ªque°
(
ªq
);

346 
	`‰ì
(
ªq_hód
);

347 
	}
}

349 
	$sh™n⁄_xxx
(
sh™n⁄_dev
 *
dev
)

351 
rc
;

352 
lun
, 
block
, 
hód
;

353 
föished_lun
;

354 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

355 
li°_hód
 **
ªq_hód
, *
run_ªq_hód
;

357 
block
 = 111;

358 
hód
 = 
INDEP_HEAD
;

360 
ªq_hód
 = 
	`mÆloc
((*ªq_hódË* 
dev
->
c⁄fig
->
∆un
);

361 
	`as£π
(
NULL
 !
ªq_hód
);

363 
run_ªq_hód
 = 
	`mÆloc
((*run_ªq_hódË* 
dev
->
c⁄fig
->
∆un
);

364 
	`as£π
(
NULL
 !
run_ªq_hód
);

366 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

367 
ªq_hód
[
lun
] = 
	`make_shód_ªqli°
(
dev
,Üun, 
block
, 
hód
, block +Üun);

368 
	`as£π
(
NULL
 !
ªq_hód
[
lun
]);

370 
	`INIT_LIST_HEAD
(&
run_ªq_hód
[
lun
]);

371 
	`li°_f‹_óch_íåy
(
ªq
, 
ªq_hód
[
lun
], 
li°
)

372 
	`li°_add_èû
(&
ªq
->
run_li°
, &
run_ªq_hód
[
lun
]);

376 
föished_lun
 = 0;

379 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

380 i‡(!
	`li°_em±y
(&
run_ªq_hód
[
lun
]))

383 i‡(
lun
 =
dev
->
c⁄fig
->
∆un
)

386 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

387 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
run_ªq_hód
[
lun
], 
run_li°
) {

388 
rc
 = 
dev
->
	`submô_ªque°
(
ªq
);

389 i‡(
rc
 =
NO_CMDQUEUE_ROOM
)

391 
	`as£π
(
rc
 == 0);

392 
	`li°_dñ
(&
ªq
->
run_li°
);

396 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

397 
	`upd©e_cmdqueue
(
dev
, 
lun
);

399 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

400 
	`pﬁl_cmdqueue_nowaô
(
dev
, 
lun
);

403 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

404 
	`pﬁl_cmdqueue
(
dev
, 
lun
);

407 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

408 
	`de°‹y_ªqli°
(
ªq_hód
[
lun
]);

409 
	`‰ì
(
ªq_hód
);

410 
	`‰ì
(
run_ªq_hód
);

412 
	}
}

	@lost/super.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

10 
	~<time.h
>

12 
	~"toﬁ.h
"

20 
	$sh™n⁄_su≥r_îa£_ußge
()

22 
	`¥ötf
("Usage:\n");

23 
	`¥ötf
("\tsuper-erase [option] begin_chunkblock count\n\n");

25 
	`¥ötf
("Option:\n");

26 
	`¥ötf
("\t-N, --noprogress\n"

28 
	`¥ötf
("\t-h, --help\n"

31 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk\n");

32 
	}
}

34 
	$sh™n⁄_su≥r_îa£
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

36 
›ti⁄
 
l⁄g›ts
 [] = {

37 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

38 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

41 
›t
;

42 
lun
, 
begö_chunkblock
, 
cou¡
;

43 
hód
, 
n›rogªss
;

44 
blk
, 
∂™e
, 
µa
;

45 
rc
 = 0;

46 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

47 
li°_hód
 
ªq_hód
;

48 
¥e_˚¡
, 
now_˚¡
;

51 
hód
 = 
INDEP_HEAD
;

52 
n›rogªss
 = 0;

54 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":Nh", 
l⁄g›ts
, 
NULL
)) != -1) {

55 
›t
) {

57 
n›rogªss
 = 1;

60 
	`sh™n⁄_su≥r_îa£_ußge
();

63 
	`sh™n⁄_su≥r_îa£_ußge
();

64  
ERR
;

68 i‡((
¨gc
 - 
›töd
) != 2) {

69 
	`sh™n⁄_su≥r_îa£_ußge
();

70  
ERR
;

73 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

74 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

76 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
/dev->
c⁄fig
->
≈œ√
) {

77 
	`¥ötf
("Overflowáddress\n");

78  
OVERFLOW_ADDR
;

82 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

83 
hód
 |(1 << 
SH_ERASE_PLANE_SHIFT
);

85 i‡(!
n›rogªss
) {

86 
¥e_˚¡
 = 
now_˚¡
 = 0;

87 
	`¥öt
("I¿¥o˚ss...%%%02d", 
now_˚¡
);

90 
	`INIT_LIST_HEAD
(&
ªq_hód
);

92 
blk
 = 
begö_chunkblock
; blk < begö_chunkblock + 
cou¡
; blk++) {

93 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

96 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

97 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

98 i‡(
NULL
 =
chunk_hód_ªq
) {

99 
rc
 = 
ALLOCMEM_FAILED
;

100 
‰ì_ªq_out
;

102 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

104 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

105 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

106 i‡(
NULL
 =
ªq
) {

107 
rc
 = 
ALLOCMEM_FAILED
;

108 
‰ì_ªq_out
;

110 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

115 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

116 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

117 
‰ì_ªq_out
;

121 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

122 
	`upd©e_cmdqueue
(
dev
, 
lun
);

124 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

125 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

126 
‰ì_ªq_out
;

130 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
)

131 
rc
 |
	`check_chunk_°©us
(
dev
, 
ªq
, 
sh_îa£_cmd
);

134 i‡(!
n›rogªss
) {

135 
now_˚¡
 = 100 * (
blk
 - 
begö_chunkblock
 + 1Ë/ 
cou¡
;

137 i‡(
now_˚¡
 > 
¥e_˚¡
) {

138 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

139 
¥e_˚¡
 = 
now_˚¡
;

144 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

145 
	`li°_dñ
(&
ªq
->
li°
);

146 
	`‰ì_ªque°
(
ªq
);

150 i‡(!
n›rogªss
)

151 
	`¥ötf
("\n");

153 
‰ì_ªq_out
:

154 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

155 
	`li°_dñ
(&
ªq
->
li°
);

156 
	`‰ì_ªque°
(
ªq
);

159 i‡(
rc
 !
FAILED_FLASH_STATUS
 &&Ñc != 0)

160 
	`¥ötf
("SuperÉraseÉncounter someÉrror\n");

161  
rc
;

162 
	}
}

165 
	$sh™n⁄_su≥r_wrôe_ußge
()

167 
	`¥ötf
("Usage:\n");

168 
	`¥ötf
("\tsuper-write [option] begin_chunkblock count\n\n");

170 
	`¥ötf
("Option:\n");

171 
	`¥ötf
("\t-e, --seed=SEED\n"

173 
	`¥ötf
("\t-H, --head=HEAD\n"

175 
	`¥ötf
("\t-N, --noprogress\n"

177 
	`¥ötf
("\t-h, --help\n"

180 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk\n");

181 
	}
}

183 
	#PLUN
 (
dev
->
c⁄fig
->
∆un
 - 1)

184 
	#NDATALUN
 (
dev
->
c⁄fig
->
∆un
 - 1)

	)

186 
	$sh™n⁄_su≥r_wrôe
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

188 
›ti⁄
 
l⁄g›ts
 [] = {

189 {"£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

190 {"hód", 
ªquúed_¨gumít
, 
NULL
, 'H'},

191 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

192 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

195 
i
, 
rc
 = 0;

196 
›t
;

197 
£ed
, 
hód
, 
£ed_way
, 
n›rogªss
;

198 
blk
, 
∂™e
, 
µa
, 
∑ge
;

199 
ihód
, 
lun
, 
begö_chunkblock
, 
cou¡
;

200 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

201 
li°_hód
 
ªq_hód
;

202 
¥e_˚¡
, 
now_˚¡
;

205 
£ed
 = 
	`time
(
NULL
);

206 
hód
 = 
INDEP_HEAD
;

207 
£ed_way
 = 0;

208 
n›rogªss
 = 0;

210 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":e:H:Nh", 
l⁄g›ts
, 
NULL
)) != -1) {

211 
›t
) {

213 
£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

214 
£ed_way
 = 1;

217 
hód
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

220 
n›rogªss
 = 1;

223 
	`sh™n⁄_su≥r_wrôe_ußge
();

226 
	`sh™n⁄_su≥r_wrôe_ußge
();

227  
ERR
;

231 i‡((
¨gc
 - 
›töd
) != 2) {

232 
	`sh™n⁄_su≥r_wrôe_ußge
();

233  
ERR
;

236 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

237 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

239 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
/dev->
c⁄fig
->
≈œ√
) {

240 
	`¥ötf
("Overflowáddress\n");

241  
OVERFLOW_ADDR
;

244 i‡(!
£ed_way
)

245 
	`¥öt
("£ed=%d\n", 
£ed
);

248 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

249 
hód
 |(1 << 
SH_WRITE_PLANE_SHIFT
);

251 i‡(!
n›rogªss
) {

252 
¥e_˚¡
 = 
now_˚¡
 = 0;

253 
	`¥öt
("I¿¥o˚ss...%%%02d", 
now_˚¡
);

256 
	`INIT_LIST_HEAD
(&
ªq_hód
);

258 
blk
 = 
begö_chunkblock
; blk < begö_chunkblock + 
cou¡
; blk++) {

259 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

260 
∑ge
 = 0;

263 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
) {

264 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidöô_cmd
, 
PLUN
, 
µa
, 
hód
, 0, 
NDATALUN
);

265 i‡(
NULL
 =
ªq
) {

266 
rc
 = 
ALLOCMEM_FAILED
;

267 
‰ì_ªq_out
;

269 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

272 
√xt_block_∑ge
:

274 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

275 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
 && 
PLUN
 =
lun
)

278 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

279 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++) {

280 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_bufwrôe_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 
i
 +Öœ√ * dev->
c⁄fig
->
∑ge_n£˘‹
, 1);

281 i‡(
NULL
 =
ªq
) {

282 
rc
 = 
ALLOCMEM_FAILED
;

283 
‰ì_ªq_out
;

285 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

286 #ifde‡
SUPER_DEBUG


287 
	`∑d_ßme_u32
(
ªq
->
d©a
, 
dev
->
c⁄fig
->
£˘‹_size
, ((
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
Ë* dev->c⁄fig->
∑ge_n£˘‹
 + 
i
Ë+ ((
lun
 + 
£ed
)<<24));

288 
	`∑d_ßme_u32
(
ªq
->
mëad©a
, 
METADATA_SIZE
, ((
µa
 + 
∂™e
 * 
dev
->
Êash
->
≈age
 + 
∑ge
Ë* dev->
c⁄fig
->
∑ge_n£˘‹
 + 
i
Ë+ ((
lun
 + 
£ed
)<<24));

289 
	`¥ötf
("lun=%d block=%dÖage=%d se˘‹=%dÖœ√=%d\n", 
lun
, 
blk
, 
∑ge
, 
i
, 
∂™e
);

290 
	`¥_u32_¨øy_n›ªfix
(
ªq
->
d©a
, 8, 8);

291 
	`¥_u64_¨øy_n›ªfix
(
ªq
->
mëad©a
, 1, 1);

293 
	`§™d
(((
µa
 + 
∂™e
 * 
dev
->
Êash
->
≈age
 + 
∑ge
Ë* dev->
c⁄fig
->
∑ge_n£˘‹
 + 
i
Ë+ ((
lun
 + 
£ed
)<<24));

294 
	`∑d_ønd
(
ªq
->
d©a
, 
dev
->
c⁄fig
->
£˘‹_size
);

295 
	`∑d_ønd
(
ªq
->
mëad©a
, 
METADATA_SIZE
);

302 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
) {

303 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidwrôe_cmd
, 
PLUN
, 
µa
 + 
∑ge
, 
hód
, 0, 0);

304 i‡(
NULL
 =
chunk_hód_ªq
) {

305 
rc
 = 
ALLOCMEM_FAILED
;

306 
‰ì_ªq_out
;

308 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

310 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

311 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidwrôe_cmd
, 
PLUN
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, 0);

312 i‡(
NULL
 =
ªq
) {

313 
rc
 = 
ALLOCMEM_FAILED
;

314 
‰ì_ªq_out
;

316 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

321 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

322 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

323 
‰ì_ªq_out
;

327 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

328 
	`upd©e_cmdqueue
(
dev
, 
lun
);

329 
	`f‹_dev_óch_bufhód
(
dev
, 
ihód
)

330 
	`upd©e_bufcmdqueue
(
dev
, 
ihód
);

332 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

333 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

334 
‰ì_ªq_out
;

336 
	`f‹_dev_óch_bufhód
(
dev
, 
ihód
) {

337 i‡((
rc
 = 
	`pﬁl_bufcmdqueue
(
dev
, 
ihód
)))

338 
‰ì_ªq_out
;

344 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

345 
	`li°_dñ
(&
ªq
->
li°
);

346 
	`‰ì_ªque°
(
ªq
);

350 i‡(!
n›rogªss
) {

351 
now_˚¡
 = 100 * ((
blk
 - 
begö_chunkblock
Ë* 
dev
->
Êash
->
≈age
 + 
∑ge
 + 1Ë/ (
cou¡
 * dev->flash->npage);

353 i‡(
now_˚¡
 > 
¥e_˚¡
) {

354 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

355 
¥e_˚¡
 = 
now_˚¡
;

359 i‡(++
∑ge
 < 
dev
->
Êash
->
≈age
)

360 
√xt_block_∑ge
;

363 i‡(!
n›rogªss
)

364 
	`¥ötf
("\n");

366 
‰ì_ªq_out
:

367 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

368 
	`li°_dñ
(&
ªq
->
li°
);

369 
	`‰ì_ªque°
(
ªq
);

372 i‡(
rc
)

373 
	`¥ötf
("Super-writeÉncounter someÉrror\n");

374  
rc
;

375 
	}
}

380 
	$sh™n⁄_su≥r_ªad_ußge
()

382 
	`¥ötf
("Usage:\n");

383 
	`¥ötf
("\tsuper-read [option] begin_chunkblock count\n\n");

385 
	`¥ötf
("Option:\n");

386 
	`¥ötf
("\t-e, --seed=SEED\n"

388 
	`¥ötf
("\t-N, --noprogress\n"

390 
	`¥ötf
("\t-h, --help\n"

393 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk\n");

394 
	}
}

396 
	$sh™n⁄_su≥r_ªad
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

398 
›ti⁄
 
l⁄g›ts
 [] = {

399 {"£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

400 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

401 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

404 
i
, 
rc
 = 0;

405 
›t
;

406 
£ed
, 
check_d©a
, 
hód
, 
n›rogªss
;

407 
blk
, 
∂™e
, 
µa
, 
∑ge
;

408 
lun
, 
begö_chunkblock
, 
cou¡
;

409 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

410 
li°_hód
 
ªq_hód
;

411 
¥e_˚¡
, 
now_˚¡
;

414 
hód
 = 0;

415 
n›rogªss
 = 0;

416 
£ed
 = -1;

417 
check_d©a
 = 0;

419 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":e:Nh", 
l⁄g›ts
, 
NULL
)) != -1) {

420 
›t
) {

422 
£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

423 
check_d©a
 = 1;

426 
n›rogªss
 = 1;

429 
	`sh™n⁄_su≥r_ªad_ußge
();

432 
	`sh™n⁄_su≥r_ªad_ußge
();

433  
ERR
;

437 i‡((
¨gc
 - 
›töd
) != 2) {

438 
	`sh™n⁄_su≥r_ªad_ußge
();

439  
ERR
;

442 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

443 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

445 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
/dev->
c⁄fig
->
≈œ√
) {

446 
	`¥ötf
("Overflowáddress\n");

447  
OVERFLOW_ADDR
;

451 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

452 
hód
 |(1 << 
SH_READ_PLANE_SHIFT
);

454 i‡(!
n›rogªss
) {

455 
¥e_˚¡
 = 
now_˚¡
 = 0;

456 
	`¥öt
("I¿¥o˚ss...%%%02d", 
now_˚¡
);

459 
	`INIT_LIST_HEAD
(&
ªq_hód
);

461 
blk
 = 
begö_chunkblock
; blk < begö_chunkblock + 
cou¡
; blk++) {

462 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

463 
∑ge
 = 0;

465 
√xt_block_∑ge
:

467 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

468 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∑ge
, 
hód
, 0, 0);

469 i‡(
NULL
 =
chunk_hód_ªq
) {

470 
rc
 = 
ALLOCMEM_FAILED
;

471 
‰ì_ªq_out
;

473 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

475 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

476 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, 0);

477 i‡(
NULL
 =
ªq
) {

478 
rc
 = 
ALLOCMEM_FAILED
;

479 
‰ì_ªq_out
;

481 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

484 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

485 
ns
, 
bs
 = 0;

486 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

488 
ªmaö_ns
) {

489 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

491 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 
bs
, 
ns
);

492 i‡(
NULL
 =
ªq
) {

493 
rc
 = 
ALLOCMEM_FAILED
;

494 
‰ì_ªq_out
;

496 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

498 
bs
 +
ns
;

499 
ªmaö_ns
 -
ns
;

505 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

506 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

507 
‰ì_ªq_out
;

511 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

512 
	`upd©e_cmdqueue
(
dev
, 
lun
);

514 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

515 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

516 
‰ì_ªq_out
;

520 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

521 i‡(
sh_¥îód_cmd
 =
ªq
->
›code
)

522 
	`check_chunk_°©us
(
dev
, 
ªq
, 
sh_¥îód_cmd
);

524 i‡(
sh_ˇchîód_cmd
 =
ªq
->
›code
) {

525 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

526 i‡(
ªq
->
ecc
[
i
] < 251)

529 i‡(
ªq
->
ecc
[
i
] == 251)

530 
	`¥ötf
("Su≥r-ªad bœnk %02X. ", 
ªq
->
ecc
[
i
]);

531 i‡(
ªq
->
ecc
[
i
] > 251)

532 
	`¥ötf
("Su≥r-ªadÉc¯Áûed: %02X. ", 
ªq
->
ecc
[
i
]);

534 
	`¥ötf
("lun=%d block=%dÖage=%d sector=%d\n",

535 
ªq
->
lun
,Ñeq->
µa
 / (
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
),Ñeq->µ®% dev->Êash->≈age,Ñeq->
b£˘‹
 + 
i
);

541 i‡(!
check_d©a
)

542 
skù_check_d©a
;

544 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

545 i‡(
sh_ˇchîód_cmd
 !
ªq
->
›code
 || 
PLUN
 =ªq->
lun
)

548 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

549 #ifde‡
SUPER_DEBUG


550 
	`¥ötf
("lun=%d block=%dÖage=%d sector=%dÖlane=%d\n",

551 
ªq
->
lun
,

552 
ªq
->
µa
/(
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
),

553 
ªq
->
µa
%
dev
->
Êash
->
≈age
,

554 
ªq
->
b£˘‹
 + 
i
,

555 (
ªq
->
µa
%(
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
))/dev->flash->npage);

556 
	`¥_u32_¨øy_n›ªfix
(
ªq
->
d©a
 + 
i
 * 
dev
->
c⁄fig
->
£˘‹_size
, 8, 8);

557 
	`¥_u64_¨øy_n›ªfix
(
ªq
->
mëad©a
 + 
i
, 1, 1);

559 
__u8
 
ch
;

560 
ibx
, 
jump
 = 0;

562 
	`§™d
((
ªq
->
µa
 * 
dev
->
c⁄fig
->
∑ge_n£˘‹
 +Ñeq->
b£˘‹
 + 
i
Ë+ (‘eq->
lun
 + 
£ed
)<<24));

564 
ibx
 = 0; ibx < 
dev
->
c⁄fig
->
£˘‹_size
; ibx++) {

565 i‡((
ch
 = 
	`ønd
()Ë!
ªq
->
d©a
[
i
 * 
dev
->
c⁄fig
->
£˘‹_size
 + 
ibx
]) {

566 
	`¥ötf
("Data mismatch:Üun=%d block=%dÖage=%d sector=%d\n",

567 
ªq
->
lun
,Ñeq->
µa
/(
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
),Ñeq->µa%dev->Êash->≈age, 
i
);

568 
jump
 = 1;

573 i‡(
jump
)

576 
ibx
 = 0; ibx < 
METADATA_SIZE
; ibx++) {

577 i‡((
ch
 = 
	`ønd
()Ë!((
__u8
 *)
ªq
->
mëad©a
)[
i
 * 
METADATA_SIZE
 + 
ibx
]) {

578 
	`¥ötf
("Metaata mismatch:Üun=%d block=%dÖage=%d sector=%d\n",

579 
ªq
->
lun
,Ñeq->
µa
/(
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
),Ñeq->µa%dev->Êash->≈age, 
i
);

588 
skù_check_d©a
:

589 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

590 
	`li°_dñ
(&
ªq
->
li°
);

591 
	`‰ì_ªque°
(
ªq
);

595 i‡(!
n›rogªss
) {

596 
now_˚¡
 = 100 * ((
blk
 - 
begö_chunkblock
Ë* 
dev
->
Êash
->
≈age
 + 
∑ge
 + 1Ë/ (
cou¡
 * dev->flash->npage);

598 i‡(
now_˚¡
 > 
¥e_˚¡
) {

599 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

600 
¥e_˚¡
 = 
now_˚¡
;

604 i‡(++
∑ge
 < 
dev
->
Êash
->
≈age
)

605 
√xt_block_∑ge
;

608 i‡(!
n›rogªss
)

609 
	`¥ötf
("\n");

611 
rc
 = 0;

612 
‰ì_ªq_out
:

613 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

614 
	`li°_dñ
(&
ªq
->
li°
);

615 
	`‰ì_ªque°
(
ªq
);

618 i‡(
rc
)

619 
	`¥ötf
("Super-readÉncounter someÉrror\n");

620  
rc
;

621 
	}
}

	@lost/super2.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/mm™.h
>

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

11 
	~<time.h
>

13 
	~"toﬁ.h
"

18 
	$c⁄°ru˘_sb_lunöfo
(
sh™n⁄_dev
 *
dev
, *
lunöfo_fûe
)

20 
fd
;

21 
°©
 stat;

22 
sh™n⁄_lunöfo
 *
lunöfo
;

23 
blk
;

25 i‡((
fd
 = 
	`›í
(
lunöfo_fûe
, 
O_RDONLY
)) < 0) {

26 
	`≥º‹
("OpenÜuninfo file failed\n");

27  
ERR
;

30 i‡(
	`f°©
(
fd
, &
°©
)) {

31 
	`≥º‹
("FstatÜuninfo file failed\n");

32 
	`˛o£
(
fd
);

33  
ERR
;

35 
	`as£π
(
°©
.
°_size
 != 0);

37 i‡((
lunöfo
 = 
	`mm≠
(0, 
°©
.
°_size
, 
PROT_READ
, 
MAP_SHARED
, 
fd
, 0)Ë=
NULL
) {

38 
	`≥º‹
("MmapÜuninfo file failed\n");

39 
	`˛o£
(
fd
);

40  
ERR
;

42 
	`as£π
(
lunöfo
->
size
 =
°©
.
°_size
);

44 i‡(
	`check_lunöfo
(
dev
, 
lunöfo
)) {

45 
	`¥ötf
("The config ofÜuninfo doesn`t matchÖresent hardware config,Ölease use command 'luninfo'Åo generateÖresentÜuninfo file\n");

46 
	`munm≠
(
lunöfo
, 
°©
.
°_size
);

47 
	`˛o£
(
fd
);

48  
ERR
;

51 
	`f‹_dev_óch_block
(
dev
, 
blk
)

52 
	`mem˝y
(&
dev
->
sb
[
blk
].
sb_lunöfo
, &
lunöfo
->sb_lunöfo[blk], (
sh™n⁄_sb_lunöfo
));

54 
	`munm≠
(
lunöfo
, 
°©
.
°_size
);

55 
	`˛o£
(
fd
);

57 
	}
}

63 
	$sh™n⁄_su≥r_îa£_ußge
()

65 
	`¥ötf
("Usage:\n");

66 
	`¥ötf
("\tsuper-erase [option] begin_chunkblock count\n\n");

68 
	`¥ötf
("Option:\n");

69 
	`¥ötf
("\t-N, --noprogress\n"

71 
	`¥ötf
("\t-h, --help\n"

74 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk\n");

75 
	}
}

77 
	$sh™n⁄_su≥r_îa£
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

79 
›ti⁄
 
l⁄g›ts
 [] = {

80 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

81 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

84 
›t
;

85 
lun
, 
begö_chunkblock
, 
cou¡
;

86 
hód
, 
n›rogªss
;

87 
blk
, 
∂™e
, 
µa
;

88 
rc
 = 0;

89 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

90 
li°_hód
 
ªq_hód
;

91 
¥e_˚¡
, 
now_˚¡
;

94 
hód
 = 
INDEP_HEAD
;

95 
n›rogªss
 = 0;

97 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":Nh", 
l⁄g›ts
, 
NULL
)) != -1) {

98 
›t
) {

100 
n›rogªss
 = 1;

103 
	`sh™n⁄_su≥r_îa£_ußge
();

106 
	`sh™n⁄_su≥r_îa£_ußge
();

107  
ERR
;

111 i‡((
¨gc
 - 
›töd
) != 2) {

112 
	`sh™n⁄_su≥r_îa£_ußge
();

113  
ERR
;

116 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

117 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

119 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
/dev->
c⁄fig
->
≈œ√
) {

120 
	`¥ötf
("Overflowáddress\n");

121  
OVERFLOW_ADDR
;

125 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

126 
hód
 |(1 << 
SH_ERASE_PLANE_SHIFT
);

128 i‡(!
n›rogªss
) {

129 
¥e_˚¡
 = 
now_˚¡
 = 0;

130 
	`¥öt
("I¿¥o˚ss...%%%02d", 
now_˚¡
);

133 
	`INIT_LIST_HEAD
(&
ªq_hód
);

135 
blk
 = 
begö_chunkblock
; blk < begö_chunkblock + 
cou¡
; blk++) {

136 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

139 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

140 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

141 i‡(
NULL
 =
chunk_hód_ªq
) {

142 
rc
 = 
ALLOCMEM_FAILED
;

143 
‰ì_ªq_out
;

145 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

147 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

148 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

149 i‡(
NULL
 =
ªq
) {

150 
rc
 = 
ALLOCMEM_FAILED
;

151 
‰ì_ªq_out
;

153 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

158 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

159 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

160 
‰ì_ªq_out
;

164 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

165 
	`upd©e_cmdqueue
(
dev
, 
lun
);

167 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

168 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

169 
‰ì_ªq_out
;

173 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
)

174 
rc
 |
	`check_chunk_°©us
(
dev
, 
ªq
, 
sh_îa£_cmd
);

177 i‡(!
n›rogªss
) {

178 
now_˚¡
 = 100 * (
blk
 - 
begö_chunkblock
 + 1Ë/ 
cou¡
;

180 i‡(
now_˚¡
 > 
¥e_˚¡
) {

181 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

182 
¥e_˚¡
 = 
now_˚¡
;

187 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

188 
	`li°_dñ
(&
ªq
->
li°
);

189 
	`‰ì_ªque°
(
ªq
);

193 i‡(!
n›rogªss
)

194 
	`¥ötf
("\n");

196 
‰ì_ªq_out
:

197 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

198 
	`li°_dñ
(&
ªq
->
li°
);

199 
	`‰ì_ªque°
(
ªq
);

202 i‡(
rc
 !
FAILED_FLASH_STATUS
 &&Ñc != 0)

203 
	`¥ötf
("SuperÉraseÉncounter someÉrror\n");

204  
rc
;

205 
	}
}

208 
	$sh™n⁄_su≥r_wrôe_ußge
()

210 
	`¥ötf
("Usage:\n");

211 
	`¥ötf
("\tSuper-write [option] begin_chunkblock count\n\n");

213 
	`¥ötf
("Option:\n");

214 
	`¥ötf
("\t-f, --luninfo=luninfo-file\n"

216 
	`¥ötf
("\t-e, --seed=SEED\n"

218 
	`¥ötf
("\t-H, --head=HEAD\n"

220 
	`¥ötf
("\t-N, --noprogress\n"

222 
	`¥ötf
("\t-h, --help\n"

225 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk\n");

226 
	}
}

228 
	#PLUN
 (
dev
->
c⁄fig
->
∆un
 - 1)

229 
	#NDATALUN
 (
dev
->
c⁄fig
->
∆un
 - 1)

	)

231 
	$sh™n⁄_su≥r_wrôe
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

233 
›ti⁄
 
l⁄g›ts
 [] = {

234 {"lunöfo", 
ªquúed_¨gumít
, 
NULL
, 'f'},

235 {"£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

236 {"hód", 
ªquúed_¨gumít
, 
NULL
, 'H'},

237 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

238 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

241 
i
, 
rc
 = 0;

242 
›t
;

243 *
lunöfo_fûe
;

244 
£ed
, 
hód
, 
£ed_way
, 
n›rogªss
;

245 
blk
, 
∂™e
, 
µa
, 
∑ge
;

246 
ihód
, 
lun
, 
begö_chunkblock
, 
cou¡
;

247 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

248 
li°_hód
 
ªq_hód
, 
run_ªq_hód
;

249 
¥e_˚¡
, 
now_˚¡
;

252 
lunöfo_fûe
 = 
NULL
;

253 
£ed
 = 
	`time
(
NULL
);

254 
hód
 = 
INDEP_HEAD
;

255 
£ed_way
 = 0;

256 
n›rogªss
 = 0;

258 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":f:e:H:Nh", 
l⁄g›ts
, 
NULL
)) != -1) {

259 
›t
) {

261 
lunöfo_fûe
 = 
›èrg
;

264 
£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

265 
£ed_way
 = 1;

268 
hód
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

271 
n›rogªss
 = 1;

274 
	`sh™n⁄_su≥r_wrôe_ußge
();

277 
	`sh™n⁄_su≥r_wrôe_ußge
();

278  
ERR
;

282 i‡((
¨gc
 - 
›töd
) != 2) {

283 
	`sh™n⁄_su≥r_wrôe_ußge
();

284  
ERR
;

287 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

288 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

290 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
/dev->
c⁄fig
->
≈œ√
) {

291 
	`¥ötf
("Overflowáddress\n");

292  
OVERFLOW_ADDR
;

296 i‡(
HEAD0
 =
hód
 || 
HEAD1
 == head) {

297 i‡(!
dev
->
c⁄fig
->
øid_mode
) {

298 
	`¥ötf
("You mustÉnableÑaid when write by head0 or head1. PleaseÑm file 'config'ÅhenÑeconfig hardware\n");

299  
ERR
;

304 i‡(
NULL
 !
lunöfo_fûe
) {

305 i‡(
	`c⁄°ru˘_sb_lunöfo
(
dev
, 
lunöfo_fûe
))

306  
ERR
;

309 i‡(!
£ed_way
)

310 
	`¥öt
("£ed=%d\n", 
£ed
);

313 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

314 
hód
 |(1 << 
SH_WRITE_PLANE_SHIFT
);

316 i‡(!
n›rogªss
) {

317 
¥e_˚¡
 = 
now_˚¡
 = 0;

318 
	`¥öt
("I¿¥o˚ss...%%%02d", 
now_˚¡
);

321 
	`INIT_LIST_HEAD
(&
ªq_hód
);

323 
blk
 = 
begö_chunkblock
; blk < begö_chunkblock + 
cou¡
; blk++) {

324 i‡(
	`is_bad_su≥rblock
(
dev
, 
blk
))

327 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

328 
∑ge
 = 0;

331 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
) {

332 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidöô_cmd
, 
	`su≥rblock_∑rôylun
(dev, 
blk
), 
µa
, 
hód
, 0, 
	`su≥rblock_nd©Æun
(dev, blk));

333 i‡(
NULL
 =
ªq
) {

334 
rc
 = 
ALLOCMEM_FAILED
;

335 
‰ì_ªq_out
;

337 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

340 
√xt_block_∑ge
:

342 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

343 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
 && 
	`su≥rblock_∑rôylun
(dev, 
blk
Ë=
lun
)

346 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

347 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++) {

348 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_bufwrôe_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 
i
 +Öœ√ * dev->
c⁄fig
->
∑ge_n£˘‹
, 1);

349 i‡(
NULL
 =
ªq
) {

350 
rc
 = 
ALLOCMEM_FAILED
;

351 
‰ì_ªq_out
;

353 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

354 #ifde‡
SUPER_DEBUG


355 
	`∑d_ßme_u32
(
ªq
->
d©a
, 
dev
->
c⁄fig
->
£˘‹_size
, ((
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
Ë* dev->c⁄fig->
∑ge_n£˘‹
 + 
i
Ë+ ((
lun
 + 
£ed
)<<24));

356 
	`∑d_ßme_u32
(
ªq
->
mëad©a
, 
METADATA_SIZE
, ((
µa
 + 
∂™e
 * 
dev
->
Êash
->
≈age
 + 
∑ge
Ë* dev->
c⁄fig
->
∑ge_n£˘‹
 + 
i
Ë+ ((
lun
 + 
£ed
)<<24));

357 
	`¥ötf
("lun=%d block=%dÖage=%d se˘‹=%dÖœ√=%d\n", 
lun
, 
blk
, 
∑ge
, 
i
, 
∂™e
);

358 
	`¥_u32_¨øy_n›ªfix
(
ªq
->
d©a
, 8, 8);

359 
	`¥_u64_¨øy_n›ªfix
(
ªq
->
mëad©a
, 1, 1);

361 
	`§™d
(((
µa
 + 
∂™e
 * 
dev
->
Êash
->
≈age
 + 
∑ge
Ë* dev->
c⁄fig
->
∑ge_n£˘‹
 + 
i
Ë+ ((
lun
 + 
£ed
)<<24));

362 
	`∑d_ønd
(
ªq
->
d©a
, 
dev
->
c⁄fig
->
£˘‹_size
);

363 
	`∑d_ønd
(
ªq
->
mëad©a
, 
METADATA_SIZE
);

370 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
) {

371 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidwrôe_cmd
, 
PLUN
, 
µa
 + 
∑ge
, 
hód
, 0, 0);

372 i‡(
NULL
 =
chunk_hód_ªq
) {

373 
rc
 = 
ALLOCMEM_FAILED
;

374 
‰ì_ªq_out
;

376 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

378 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

379 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidwrôe_cmd
, 
PLUN
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, 0);

380 i‡(
NULL
 =
ªq
) {

381 
rc
 = 
ALLOCMEM_FAILED
;

382 
‰ì_ªq_out
;

384 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

390 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

391 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

392 
‰ì_ªq_out
;

396 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

397 
	`upd©e_cmdqueue
(
dev
, 
lun
);

398 
	`f‹_dev_óch_bufhód
(
dev
, 
ihód
)

399 
	`upd©e_bufcmdqueue
(
dev
, 
ihód
);

401 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

402 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

403 
‰ì_ªq_out
;

405 
	`f‹_dev_óch_bufhód
(
dev
, 
ihód
) {

406 i‡((
rc
 = 
	`pﬁl_bufcmdqueue
(
dev
, 
ihód
)))

407 
‰ì_ªq_out
;

413 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

414 
	`li°_dñ
(&
ªq
->
li°
);

415 
	`‰ì_ªque°
(
ªq
);

418 
	`INIT_LIST_HEAD
(&
run_ªq_hód
);

419 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
)

420 
	`li°_add_èû
(&
ªq
->
run_li°
, &
run_ªq_hód
);

422 !
	`li°_em±y
(&
run_ªq_hód
)) {

423 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
run_ªq_hód
, 
run_li°
) {

424 
rc
 = 
dev
->
	`submô_ªque°
(
ªq
);

426 i‡(
rc
 =
NO_CMDQUEUE_ROOM
)

429 i‡(
rc
) {

430 
	`¥ötf
("xxxxxxxxxx\n");

431 
‰ì_ªq_out
;

434 
	`li°_dñ
(&
ªq
->
run_li°
);

438 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

439 
	`upd©e_cmdqueue
(
dev
, 
lun
);

440 
	`f‹_dev_óch_bufhód
(
dev
, 
ihód
)

441 
	`upd©e_bufcmdqueue
(
dev
, 
ihód
);

443 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

444 
	`pﬁl_cmdqueue_nowaô
(
dev
, 
lun
);

445 
	`f‹_dev_óch_bufhód
(
dev
, 
ihód
)

446 
	`pﬁl_bufcmdqueue_nowaô
(
dev
, 
ihód
);

449 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

450 
	`pﬁl_cmdqueue
(
dev
, 
lun
);

451 
	`f‹_dev_óch_bufhód
(
dev
, 
ihód
)

452 
	`pﬁl_bufcmdqueue
(
dev
, 
ihód
);

454 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

455 
	`li°_dñ
(&
ªq
->
li°
);

456 
	`‰ì_ªque°
(
ªq
);

460 i‡(!
n›rogªss
) {

461 
now_˚¡
 = 100 * ((
blk
 - 
begö_chunkblock
Ë* 
dev
->
Êash
->
≈age
 + 
∑ge
 + 1Ë/ (
cou¡
 * dev->flash->npage);

463 i‡(
now_˚¡
 > 
¥e_˚¡
) {

464 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

465 
¥e_˚¡
 = 
now_˚¡
;

469 i‡(++
∑ge
 < 
dev
->
Êash
->
≈age
)

470 
√xt_block_∑ge
;

473 i‡(!
n›rogªss
)

474 
	`¥ötf
("\n");

476 
‰ì_ªq_out
:

477 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

478 
	`li°_dñ
(&
ªq
->
li°
);

479 
	`‰ì_ªque°
(
ªq
);

482 i‡(
rc
)

483 
	`¥ötf
("Super-writeÉncounter someÉrror\n");

484  
rc
;

485 
	}
}

490 
	$sh™n⁄_su≥r_ªad_ußge
()

492 
	`¥ötf
("Usage:\n");

493 
	`¥ötf
("\tsuper-read [option] begin_chunkblock count\n\n");

495 
	`¥ötf
("Option:\n");

496 
	`¥ötf
("\t-e, --seed=SEED\n"

498 
	`¥ötf
("\t-N, --noprogress\n"

500 
	`¥ötf
("\t-h, --help\n"

503 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk\n");

504 
	}
}

506 
	$sh™n⁄_su≥r_ªad
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

508 
›ti⁄
 
l⁄g›ts
 [] = {

509 {"£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

510 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

511 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

514 
i
, 
rc
 = 0;

515 
›t
;

516 
£ed
, 
check_d©a
, 
hód
, 
n›rogªss
;

517 
blk
, 
∂™e
, 
µa
, 
∑ge
;

518 
lun
, 
begö_chunkblock
, 
cou¡
;

519 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

520 
li°_hód
 
ªq_hód
;

521 
¥e_˚¡
, 
now_˚¡
;

524 
hód
 = 0;

525 
n›rogªss
 = 0;

526 
£ed
 = -1;

527 
check_d©a
 = 0;

529 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":e:Nh", 
l⁄g›ts
, 
NULL
)) != -1) {

530 
›t
) {

532 
£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

533 
check_d©a
 = 1;

536 
n›rogªss
 = 1;

539 
	`sh™n⁄_su≥r_ªad_ußge
();

542 
	`sh™n⁄_su≥r_ªad_ußge
();

543  
ERR
;

547 i‡((
¨gc
 - 
›töd
) != 2) {

548 
	`sh™n⁄_su≥r_ªad_ußge
();

549  
ERR
;

552 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

553 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

555 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
/dev->
c⁄fig
->
≈œ√
) {

556 
	`¥ötf
("Overflowáddress\n");

557  
OVERFLOW_ADDR
;

561 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

562 
hód
 |(1 << 
SH_READ_PLANE_SHIFT
);

564 i‡(!
n›rogªss
) {

565 
¥e_˚¡
 = 
now_˚¡
 = 0;

566 
	`¥öt
("I¿¥o˚ss...%%%02d", 
now_˚¡
);

569 
	`INIT_LIST_HEAD
(&
ªq_hód
);

571 
blk
 = 
begö_chunkblock
; blk < begö_chunkblock + 
cou¡
; blk++) {

572 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

573 
∑ge
 = 0;

575 
√xt_block_∑ge
:

577 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

578 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∑ge
, 
hód
, 0, 0);

579 i‡(
NULL
 =
chunk_hód_ªq
) {

580 
rc
 = 
ALLOCMEM_FAILED
;

581 
‰ì_ªq_out
;

583 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

585 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

586 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, 0);

587 i‡(
NULL
 =
ªq
) {

588 
rc
 = 
ALLOCMEM_FAILED
;

589 
‰ì_ªq_out
;

591 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

594 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

595 
ns
, 
bs
 = 0;

596 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

598 
ªmaö_ns
) {

599 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

601 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 
bs
, 
ns
);

602 i‡(
NULL
 =
ªq
) {

603 
rc
 = 
ALLOCMEM_FAILED
;

604 
‰ì_ªq_out
;

606 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

608 
bs
 +
ns
;

609 
ªmaö_ns
 -
ns
;

615 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

616 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

617 
‰ì_ªq_out
;

621 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

622 
	`upd©e_cmdqueue
(
dev
, 
lun
);

624 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

625 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

626 
‰ì_ªq_out
;

630 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

631 i‡(
sh_¥îód_cmd
 =
ªq
->
›code
)

632 
	`check_chunk_°©us
(
dev
, 
ªq
, 
sh_¥îód_cmd
);

634 i‡(
sh_ˇchîód_cmd
 =
ªq
->
›code
) {

635 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

636 i‡(
ªq
->
ecc
[
i
] < 251)

639 i‡(
ªq
->
ecc
[
i
] == 251)

640 
	`¥ötf
("Su≥r-ªad bœnk %02X. ", 
ªq
->
ecc
[
i
]);

641 i‡(
ªq
->
ecc
[
i
] > 251)

642 
	`¥ötf
("Su≥r-ªadÉc¯Áûed: %02X. ", 
ªq
->
ecc
[
i
]);

644 
	`¥ötf
("lun=%d block=%dÖage=%d sector=%d\n",

645 
ªq
->
lun
,Ñeq->
µa
 / (
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
),Ñeq->µ®% dev->Êash->≈age,Ñeq->
b£˘‹
 + 
i
);

651 i‡(!
check_d©a
)

652 
skù_check_d©a
;

654 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

655 i‡(
sh_ˇchîód_cmd
 !
ªq
->
›code
 || 
PLUN
 =ªq->
lun
)

658 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

659 #ifde‡
SUPER_DEBUG


660 
	`¥ötf
("lun=%d block=%dÖage=%d sector=%dÖlane=%d\n",

661 
ªq
->
lun
,

662 
ªq
->
µa
/(
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
),

663 
ªq
->
µa
%
dev
->
Êash
->
≈age
,

664 
ªq
->
b£˘‹
 + 
i
,

665 (
ªq
->
µa
%(
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
))/dev->flash->npage);

666 
	`¥_u32_¨øy_n›ªfix
(
ªq
->
d©a
 + 
i
 * 
dev
->
c⁄fig
->
£˘‹_size
, 8, 8);

667 
	`¥_u64_¨øy_n›ªfix
(
ªq
->
mëad©a
 + 
i
, 1, 1);

669 
__u8
 
ch
;

670 
ibx
, 
jump
 = 0;

672 
	`§™d
((
ªq
->
µa
 * 
dev
->
c⁄fig
->
∑ge_n£˘‹
 +Ñeq->
b£˘‹
 + 
i
Ë+ (‘eq->
lun
 + 
£ed
)<<24));

674 
ibx
 = 0; ibx < 
dev
->
c⁄fig
->
£˘‹_size
; ibx++) {

675 i‡((
ch
 = 
	`ønd
()Ë!
ªq
->
d©a
[
i
 * 
dev
->
c⁄fig
->
£˘‹_size
 + 
ibx
]) {

676 
	`¥ötf
("Data mismatch:Üun=%d block=%dÖage=%d sector=%d\n",

677 
ªq
->
lun
,Ñeq->
µa
/(
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
),Ñeq->µa%dev->Êash->≈age, 
i
);

678 
jump
 = 1;

683 i‡(
jump
)

686 
ibx
 = 0; ibx < 
METADATA_SIZE
; ibx++) {

687 i‡((
ch
 = 
	`ønd
()Ë!((
__u8
 *)
ªq
->
mëad©a
)[
i
 * 
METADATA_SIZE
 + 
ibx
]) {

688 
	`¥ötf
("Metaata mismatch:Üun=%d block=%dÖage=%d sector=%d\n",

689 
ªq
->
lun
,Ñeq->
µa
/(
dev
->
Êash
->
≈age
 * dev->
c⁄fig
->
≈œ√
),Ñeq->µa%dev->Êash->≈age, 
i
);

698 
skù_check_d©a
:

699 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

700 
	`li°_dñ
(&
ªq
->
li°
);

701 
	`‰ì_ªque°
(
ªq
);

705 i‡(!
n›rogªss
) {

706 
now_˚¡
 = 100 * ((
blk
 - 
begö_chunkblock
Ë* 
dev
->
Êash
->
≈age
 + 
∑ge
 + 1Ë/ (
cou¡
 * dev->flash->npage);

708 i‡(
now_˚¡
 > 
¥e_˚¡
) {

709 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

710 
¥e_˚¡
 = 
now_˚¡
;

714 i‡(++
∑ge
 < 
dev
->
Êash
->
≈age
)

715 
√xt_block_∑ge
;

718 i‡(!
n›rogªss
)

719 
	`¥ötf
("\n");

721 
rc
 = 0;

722 
‰ì_ªq_out
:

723 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

724 
	`li°_dñ
(&
ªq
->
li°
);

725 
	`‰ì_ªque°
(
ªq
);

728 i‡(
rc
)

729 
	`¥ötf
("Super-readÉncounter someÉrror\n");

730  
rc
;

731 
	}
}

	@main.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

10 
	~<mcheck.h
>

11 
	~<sig«l.h
>

13 
	~"toﬁ.h
"

15 
sh™n⁄_dev
 *
	gthisdev
 = 
NULL
;

18 
	#SUBTOOL_HEAD
() if (0) { \

20 }

	)

21 
	#SUBTOOL
(
subtoﬁ
, 
func
, 
b
Ëi‡(!
	`°rcmp
(subtoﬁ, 
subtoﬁ_¨gv
[0])) { \

22 i‡(
b
) { \

23 i‡(
	`öô_devi˚
(
dev
)) { \

24 
	`‰ì_devi˚
(
dev
); \

25  
ERR
; \

28 
rc
 = 
	`func
(
dev
, 
subtoﬁ_¨gc
, 
subtoﬁ_¨gv
); \

29 }

	)

30 
	#SUBTOOL_NOARG
(
subtoﬁ
, 
func
, 
b
Ëi‡(!
	`°rcmp
(subtoﬁ, 
subtoﬁ_¨gv
[0])) { \

31 i‡(
b
) { \

32 i‡(
	`öô_devi˚
(
dev
)) { \

33 
	`‰ì_devi˚
(
dev
); \

34  
ERR
; \

37 
rc
 = 
	`func
(
dev
); \

38 }

	)

39 
	#SUBTOOL_TAIL
() { \

40 
	`¥_toﬁ_ußge
(); \

41 }

	)

44 
	$sh™n⁄_debug
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

46 
	`¥ötf
("E¡î %s()\n", 
__func__
);

48 
	}
}

50 
	$do_sig«l_öt
(
sig
)

52 i‡(
thisdev
 !
NULL
 &&Åhisdev->
exôlog
 != NULL) {

53 
	`¥ötf
("Press ctrl+cÅoÉxit\n");

54 
	`Ârötf
(
thisdev
->
exôlog
, "Press ctrl+cÅoÉxit\n");

56 
	`exô
(
EXIT_FAILURE
);

57 
	}
}

59 
	$¥_toﬁ_ußge
()

61 #i‚de‡
__RELEASE__


62 
	`¥ötf
("Usage:\n");

64 
	`¥ötf
("\tztool [OPTION]Ñeadid [argv]\n");

65 
	`¥ötf
("\tztool [OPTION]Érase [argv]\n");

66 
	`¥ötf
("\tztool [OPTION] write [argv]\n");

67 
	`¥ötf
("\tztool [OPTION]Ñead [argv]\n");

68 
	`¥ötf
("\tztool [OPTION] copy [argv]\n\n");

69 
	`¥ötf
("\tztool [OPTION]Ñwloop [argv]\n\n");

71 
	`¥ötf
("\tztool [OPTION] super-readid\n");

72 
	`¥ötf
("\tztool [OPTION] super-erase [argv]\n");

73 
	`¥ötf
("\tztool [OPTION] super-write [argv]\n");

74 
	`¥ötf
("\tztool [OPTION] super-read [argv]\n\n");

76 
	`¥ötf
("\tztool [OPTION] utils [argv]\n");

77 
	`¥ötf
("\tztool [OPTION] info [argv]\n\n");

78 
	`¥ötf
("\tztool [OPTION] hwinfo [argv]\n\n");

79 
	`¥ötf
("\tztool [OPTION] dio [argv]\n\n");

80 
	`¥ötf
("\tztool [OPTION]Çor [argv]\n\n");

82 
	`¥ötf
("\tztool [OPTION] bbt [argv]\n");

83 
	`¥ötf
("\tztool [OPTION]Üuninfo [argv]\n");

84 
	`¥ötf
("\tztool [OPTION] fake-ecc [argv]\n");

85 
	`¥ötf
("\tztool [OPTION]Ñmw-fake-ecc [argv]\n");

86 
	`¥ötf
("\tztool [OPTION] ifmode [argv]\n\n");

88 
	`¥ötf
("\tztool [OPTION] mpt [argv]\n\n");

90 
	`¥ötf
("\tztool --help, displayÅhis helpándÉxit\n");

91 
	`¥ötf
("\n");

93 
	`¥öt
("OPTION:\n");

94 
	`¥ötf
("\t--dev=nod\n\t\tSpecify deviceÇame, default is /dev/shannon-dev.\n");

95 
	`¥ötf
("\t--no-reinit\n\t\tUsingÖresent hardware config instead ofÑe-init by 'config' file. NOTE:áfter hardware"

97 
	`¥ötf
("\t--power-budget=n\n\t\tSpecifyÖower budget forÅhis borad: 0->default, [3,127]\n");

98 
	`¥ötf
("\t--ifclock=n\n\t\tSpecify flash interface clock: 0->default, 4->250M, 5->200M, 6->166M, 7->145M\n");

99 
	`¥ötf
("\t--silent-config=n\n\t\tUse default config value instead ofÑeading from config file\n");

100 
	`¥ötf
("\t--exitlog\n\t\tSaveÅheÑeason ofÉxit if has.\n");

101 
	`¥ötf
("\t--per-byte-dis=n\n\t\tDisableÜow/high byte: 0->not disabled, 1->disableÜow byte, 2->disable high byte\n");

102 
	`¥ötf
("\t--dev-type=n\n\t\tSelect deviceÅype: 0->K7F, 1->k7h_dual, 2->FIJI\n");

104 
	}
}

106 
	$©exô_‰ì_kmem
()

108 
mem‹y
 *
mem
, *
tmp
;

110 
	`li°_f‹_óch_íåy_ß„
(
mem
, 
tmp
, &
thisdev
->
mem_gli°hód
, 
gli°
)

111 
thisdev
->
	`‰ì_mem
—hisdev, 
mem
);

112 
	}
}

114 
	$ªgi°î_©exô
()

116 i‡(
	`©exô
(
©exô_‰ì_kmem
)) {

117 
	`¥ötf
("%s(ËÁûed\n", 
__func__
);

118 
	`exô
(
EXIT_FAILURE
);

120 
	}
}

122 *
	$m≠_devi˚_node
(*
s
)

124 
dn
[32];

126 i‡(
s
[0] == 'a')

127 
	`•rötf
(
dn
, "%s", "/dev/shannon_cdev");

128 i‡(
s
[0] >= 'b' && s[1] <= 'z')

129 
	`•rötf
(
dn
, "%s%d", "/dev/sh™n⁄_cdev", 
s
[0] - 'a');

131 
	`•rötf
(
dn
, "%s", 
s
);

133  
	`°rdup
(
dn
);

134 
	}
}

136 
	$maö
(
¨gc
, **
¨gv
)

138 
ƒ
, 
›t
;

139 
›ti⁄
 
globÆ_l⁄g›ts
 [] = {

140 {"dev", 
ªquúed_¨gumít
, 
NULL
, 'd'},

141 {"no-ªöô", 
no_¨gumít
, 
NULL
, 'n'},

142 {"fblocks", 
ªquúed_¨gumít
, 
NULL
, 'K'},

143 {"unß„", 
no_¨gumít
, 
NULL
, 'U'},

144 {"advªad", 
no_¨gumít
, 
NULL
, 'v'},

145 {"powî-budgë", 
ªquúed_¨gumít
, 
NULL
, 'w'},

146 {"if˛ock", 
ªquúed_¨gumít
, 
NULL
, 'k'},

147 {"sûít-c⁄fig", 
no_¨gumít
, 
NULL
, 's'},

148 {"m™uÆ-≈œ√", 
ªquúed_¨gumít
, 
NULL
, 'p'},

149 {"exôlog", 
ªquúed_¨gumít
, 
NULL
, 'g'},

150 {"subsy°emid", 
ªquúed_¨gumít
, 
NULL
, 'y'},

151 {"dißbÀ-ecc", 
no_¨gumít
, 
NULL
, 'b'},

152 {"≥r-byã-dis", 
ªquúed_¨gumít
, 
NULL
, 'P'},

153 {"dev-ty≥", 
ªquúed_¨gumít
, 
NULL
, 't'},

154 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

157 
no_ªöô
;

158 *
dev«me
;

159 
subtoﬁ_¨gc
;

160 **
subtoﬁ_¨gv
;

161 
fblocks
 = 0;

162 
unß„_cfgabÀ
 = 0;

163 
advªad
 = 0;

164 
powî_budgë
 = 0;

165 
Êash_if˛ock
 = 0;

166 
sûít_c⁄fig
 = 0;

167 
m™uÆ_≈œ√
 = 0;

168 
dißbÀ_ecc
 = 0;

169 
≥r_byã_dißbÀ
 = 0;

170 
dev_ty≥
 = 
DEV_TOTAL
;

172 
rc
;

173 
sh™n⁄_dev
 *
dev
;

174 *
exôlog_fûíame
 = 
NULL
;

175 
subsy°emid
[8] = {'Z','Y','X','W','\0'};

178 
no_ªöô
 = 0;

179 
dev«me
 = 
DEFAULT_DEVNAME
;

181 
ƒ
 = 1;Ç∏< 
¨gc
;Çr++) {

182 i‡(
	`°∫cmp
("--", 
¨gv
[
ƒ
], 2)) {

183 
ƒ
++;

188 (
›t
 = 
	`gë›t_l⁄g_⁄ly
(
ƒ
, 
¨gv
, ":d:nK:Uvw:k:•:y:bP:t:h", 
globÆ_l⁄g›ts
, 
NULL
)) != -1) {

189 
›t
) {

191 
dev«me
 = 
	`m≠_devi˚_node
(
›èrg
);

194 
no_ªöô
 = 1;

197 
fblocks
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

200 
unß„_cfgabÀ
 = 1;

203 
advªad
 = 1;

206 
powî_budgë
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

207 
	`as£π
((
powî_budgë
 >= 3 &&Öower_budget <= 127) || (power_budget == 0));

210 
Êash_if˛ock
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

211 
	`as£π
((
Êash_if˛ock
 >= 4 && flash_ifclock <= 7) || (flash_ifclock == 0));

214 
sûít_c⁄fig
 = 1;

217 
m™uÆ_≈œ√
 = 
	`©oi
(
›èrg
);

220 
exôlog_fûíame
 = 
›èrg
;

223 
	`°∫˝y
(
subsy°emid
, 
›èrg
, (subsystemid));

226 
dißbÀ_ecc
 = 1;

229 
≥r_byã_dißbÀ
 = 
	`©oi
(
›èrg
);

232 
dev_ty≥
 = 
	`©oi
(
›èrg
);

235 
	`¥_toﬁ_ußge
();

238 
	`¥_toﬁ_ußge
();

239  
ERR
;

243 i‡((
ƒ
 - 
›töd
) != 1) {

244 
	`¥_toﬁ_ußge
();

245  
ERR
;

248 
subtoﬁ_¨gv
 = &
¨gv
[
›töd
];

249 
subtoﬁ_¨gc
 = 
¨gc
 - 
ƒ
 + 1;

250 
›töd
 = 1;

253 
dev
 = 
	`Æloc_devi˚
(
dev«me
);

254 i‡(
NULL
 =
dev
)

255  
ERR
;

256 
dev
->
öô_mode
 = 
no_ªöô
;

257 
dev
->
fblocks
 = fblocks;

258 
dev
->
unß„_cfgabÀ
 = unsafe_cfgable;

259 
dev
->
adv™˚_ªad
 = 
advªad
;

260 
dev
->
powî_budgë
 =Öower_budget;

261 
dev
->
Êash_if˛ock
 = flash_ifclock;

262 
dev
->
sûít_c⁄fig
 = silent_config;

263 
dev
->
m™uÆ_≈œ√
 = manual_nplane;

264 
dev
->
≥r_byã_dißbÀ
 =Öer_byte_disable;

265 
dev
->
vÆid_8bô
 = (dev->
≥r_byã_dißbÀ
 ? 1 : 0);

266 
	`°∫˝y
(
dev
->
subsy°emid
, subsystemid, (dev->subsystemid));

267 
dev
->
dißbÀ_ecc
 = disable_ecc;

268 
dev
->
dev_ty≥
 = dev_type;

269 
	`c⁄fig_dev_ty≥
(&
sc_size
, 
dev_ty≥
);

271 
dev
->
exôlog
 = 
NULL
;

272 i‡(
NULL
 !
exôlog_fûíame
) {

273 
dev
->
exôlog
 = 
	`f›í
(
exôlog_fûíame
, "w");

274 i‡(
NULL
 =
dev
->
exôlog
) {

275 
	`¥ötf
("CreateÉxitlog file fail\n");

276 
	`exô
(
EXIT_FAILURE
);

281 
thisdev
 = 
dev
;

282 
	`sig«l
(
SIGINT
, 
do_sig«l_öt
);

283 
	`ªgi°î_©exô
();

286 
	`SUBTOOL_HEAD
()

287 
	`SUBTOOL
("debug", 
sh™n⁄_debug
, 1)

288 #i‚de‡
__RELEASE__


289 
	`SUBTOOL
("ªadid", 
sh™n⁄_ªadid
, 1)

290 
	`SUBTOOL
("îa£", 
sh™n⁄_îa£
, 1)

291 
	`SUBTOOL
("wrôe", 
sh™n⁄_wrôe
, 1)

292 
	`SUBTOOL
("ªad", 
sh™n⁄_ªad
, 1)

293 
	`SUBTOOL
("c›y", 
sh™n⁄_c›y
, 1)

295 
	`SUBTOOL
("bufwrôe", 
sh™n⁄_bufwrôe
, 1)

297 
	`SUBTOOL
("su≥r-ªadid", 
sh™n⁄_su≥r_ªadid
, 1)

298 
	`SUBTOOL
("su≥r-îa£", 
sh™n⁄_su≥r_îa£
, 1)

299 
	`SUBTOOL
("su≥r-wrôe", 
sh™n⁄_su≥r_wrôe
, 1)

300 
	`SUBTOOL
("su≥r-ªad", 
sh™n⁄_su≥r_ªad
, 1)

302 
	`SUBTOOL
("öfo", 
sh™n⁄_öfo
, 1)

303 
	`SUBTOOL
("dio", 
sh™n⁄_dio
, 1)

305 
	`SUBTOOL
("bbt", 
sh™n⁄_bbt_›s
, 1)

306 
	`SUBTOOL
("lunöfo", 
sh™n⁄_lunöfo_›s
, 1)

307 
	`SUBTOOL
("Áke-ecc", 
sh™n⁄_Áke_ecc
, 1)

308 
	`SUBTOOL
("rmw-Áke-ecc", 
sh™n⁄_rmw_Áke_ecc
, 1)

309 
	`SUBTOOL
("ifmode", 
sh™n⁄_ifmode
, 1)

310 
	`SUBTOOL
("rwlo›", 
sh™n⁄_rwlo›
, 1)

311 
	`SUBTOOL
("so·bôªad", 
sh™n⁄_so·bôªad
, 1)

312 
	`SUBTOOL
("so·bôªad-A19", 
sh™n⁄_so·bôªad_a19
, 1)

314 
	`SUBTOOL
("hwöfo", 
sh™n⁄_hwöfo
, 0)

315 
	`SUBTOOL
("utûs", 
sh™n⁄_utûs
, 0)

316 
	`SUBTOOL
("n‹", 
sh™n⁄_n‹
, 0)

317 
	`SUBTOOL
("m±", 
sh™n⁄_m±
, 1)

318 
	`SUBTOOL_TAIL
()

320 
	`‰ì_devi˚
(
dev
);

321  
rc
;

322 
	}
}

	@microcode.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

6 
	~"toﬁ.h
"

8 
u32
 
	gmi¸⁄_19_mi¸ocode_èbÀ
[] = {

100 
u32
 
	gtoshiba_a19_mi¸ocode_èbÀ
[] = {

289 
u32
 
	gtoshiba_a19_128gb_mi¸ocode_èbÀ
[] = {

478 
u32
 
	gtoshiba_19_mi¸ocode_èbÀ
[] = {

581 
u32
 
	gtoshiba_15_mi¸ocode_èbÀ
[] = {

767 
u32
 
	gßndisk_15_mi¸ocode_èbÀ
[] = {

1149 
	$wrôe_adv™˚d_ªad_mi¸ocode
(
sh™n⁄_dev
 *
dev
)

1151 
u32
 *
èbÀ
, 
Àn
;

1155 i‡(
dev
->
hw_sysöfo
->
hw_vîsi⁄
 < 5) {

1156 
dev
->
has_adv™˚_ªad
 = 0;

1160 
dev
->
has_adv™˚_ªad
 = 1;

1162 i‡(
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0x0408d77a93953a98 ||

1163 
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0x0c08d77a93953a98) {

1164 
èbÀ
 = 
toshiba_19_mi¸ocode_èbÀ
;

1165 
Àn
 = 
	`ARRAY_SIZE
(
toshiba_19_mi¸ocode_èbÀ
);

1166 } i‡(
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0x0408d07a93953a98) {

1167 
èbÀ
 = 
toshiba_a19_mi¸ocode_èbÀ
;

1168 
Àn
 = 
	`ARRAY_SIZE
(
toshiba_a19_mi¸ocode_èbÀ
);

1169 } i‡(
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0x0408d07e93a53c98) {

1170 
èbÀ
 = 
toshiba_a19_128gb_mi¸ocode_èbÀ
;

1171 
Àn
 = 
	`ARRAY_SIZE
(
toshiba_a19_128gb_mi¸ocode_èbÀ
);

1172 } i‡(
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0x04a53c64642c ||

1173 
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0xa53c64842c ||

1174 
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0x04a93ce5a42c ||

1175 
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0xa954e5a42c) {

1176 
èbÀ
 = 
mi¸⁄_19_mi¸ocode_èbÀ
;

1177 
Àn
 = 
	`ARRAY_SIZE
(
mi¸⁄_19_mi¸ocode_èbÀ
);

1178 } i‡(
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0x0408d17693943a98 ||

1179 
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0x0408d17a93953c98) {

1180 
èbÀ
 = 
toshiba_15_mi¸ocode_èbÀ
;

1181 
Àn
 = 
	`ARRAY_SIZE
(
toshiba_15_mi¸ocode_èbÀ
);

1182 } i‡(
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0x040a517a93953c45 ||

1183 
	`À64_to_˝u
(
dev
->
Êash
->
id
.
l⁄gid
) == 0x040a517693943a45) {

1184 
èbÀ
 = 
ßndisk_15_mi¸ocode_èbÀ
;

1185 
Àn
 = 
	`ARRAY_SIZE
(
ßndisk_15_mi¸ocode_èbÀ
);

1187 
dev
->
has_adv™˚_ªad
 = 0;

1191 
dev
->
	`mu…i_iowrôe32
(dev, 
èbÀ
, 0xC00, 
Àn
);

1192 
	}
}

	@mpt.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/mm™.h
>

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

11 
	~<time.h
>

12 
	~<˘y≥.h
>

13 
	~<sys/time.h
>

15 
	~"toﬁ.h
"

17 
	#MBR_ID
 "sh-sh™n⁄-pcõ-ssd"

	)

19 
	#MPT_MBR_NBLK
 4

	)

20 
	#MPT_MBR_SIZE
 512

	)

21 
	#MPT_MBR_PAGEOFF
 0

	)

22 
	#MPT_BBT_PAGEOFF
 1

	)

23 
	#MPT_DBBT_PAGEOFF
 2

	)

24 
	#MAX_BAD_BLOCK_IN_A_LUN
 (
dev
->
Êash
->
nblk
/10)

	)

26 
	#MPT_HELP
 " PÀa£ c⁄è˘ david <david@maû.sh™n⁄-d©a.com>\n"

	)

28 
u64
* 
	gecc_hi°ogøm
;

30 
sh™n⁄_bbt
 *
	gu£d_bbt
 = 
NULL
;

31 
sh™n⁄_bbt
 *
	g√w_bbt
 = 
NULL
;

34 
	$check_mbr_bbt
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
mbr_bbt
, *
nŸe
)

36 
lun
, 
blk
, 
n_övÆid
;

38 
	`as£π
(
dev
->
c⁄fig
->
≈œ√
 == 1);

40 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

41 
n_övÆid
 = 0;

43 
blk
 = 0; blk < 
MPT_MBR_NBLK
; blk++) {

44 i‡(
	`ã°_bô
(
lun
, 
mbr_bbt
->
sb_bbt
[
blk
]))

45 
n_övÆid
++;

48 i‡(
n_övÆid
 > 
MPT_MBR_NBLK
/2) {

49 
	`¥ötf
("%s():Üun-%03dÖhylun-%03d has %d bad MBR blocks, fenceÅhisÜun\n",

50 
__func__
, 
lun
, 
	`log2phy_lun
(
dev
,Üun), 
n_övÆid
);

51 
	`£t_bô
(
lun
, 
dev
->
lun_bôm≠
);

52 
dev
->
vÆid_luns
--;

56 i‡(!
dev
->
vÆid_luns
)

57 
	`exôlog
("ERR:állÜunsáre invalid!!!\n");

59 i‡((
dev
->
¥e£¡_luns
 - dev->
vÆid_luns
Ë> dev->
check_bad_luns
)

60 
	`exôlog
("%s ERR: Found %d badÜuns,Åhreshold is %d\n",

61 
nŸe
, 
dev
->
¥e£¡_luns
 - dev->
vÆid_luns
, dev->
check_bad_luns
);

62 
	}
}

64 
	$check_Æl_bbt
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
bbt
, *
nŸe
)

66 
lun
, 
blk
, 
n_övÆid
;

68 
	`as£π
(
dev
->
c⁄fig
->
≈œ√
 == 1);

69 
	`as£π
(
bbt
->
nblock
 =
dev
->
Êash
->
nblk
);

71 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

72 
n_övÆid
 = 0;

74 
blk
 = 0; blk < 
bbt
->
nblock
; blk++) {

75 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

76 
n_övÆid
++;

79 i‡(
n_övÆid
 > 
MAX_BAD_BLOCK_IN_A_LUN
) {

80 
	`¥ötf
("%s():Üun-%03dÖhylun-%03d has %d bad blocks, fenceÅhisÜun\n",

81 
__func__
, 
lun
, 
	`log2phy_lun
(
dev
,Üun), 
n_övÆid
);

82 
	`£t_bô
(
lun
, 
dev
->
lun_bôm≠
);

83 
dev
->
vÆid_luns
--;

87 i‡(!
dev
->
vÆid_luns
)

88 
	`exôlog
("ERR:állÜunsáre invalid!!!\n");

90 i‡((
dev
->
¥e£¡_luns
 - dev->
vÆid_luns
Ë> dev->
check_bad_luns
)

91 
	`exôlog
("%s ERR: Found %d badÜuns,Åhreshold is %d\n",

92 
nŸe
, 
dev
->
¥e£¡_luns
 - dev->
vÆid_luns
, dev->
check_bad_luns
);

93 
	}
}

99 
	$m±_sˇn_mbr_bbt_basic
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
mbr_bbt
, 
√w
)

101 
i
;

104 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = 12;

105 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = 1;

106 
dev
->
c⁄fig
->
ecc_mode
 = 
ECCMODE_DISABLE
;

107 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

108 
dev
->
c⁄fig
->
≈œ√
 = 1;

109 i‡(
	`ª_öô_devi˚
(
dev
)) {

110 
	`¥ötf
("Re-öô-devi˚ %s(ËÁûed."
MPT_HELP
, 
__func__
);

111 
	`exô
(
EXIT_FAILURE
);

113 
dev
->
	`˛ór_queue
(dev);

116 i‡(!
√w
) {

117 
	`¥öt
("MBR blocksÉrase scan...\n");

119 
	`mem˝y
(
dev
->
lun_bôm≠_backup
, dev->
lun_bôm≠
, (dev->lun_bitmap_backup));

120 
	`mem£t
(
dev
->
lun_bôm≠
, 0x00, (dev->lun_bitmap));

121 i‡(
	`îa£_sˇn
(
dev
, 
mbr_bbt
))

122 
	`exôlog
("erase_scan() failed\n");

123 
i
 = 0; i < 
	`ARRAY_SIZE
(
dev
->
lun_bôm≠
); i++)

124 
dev
->
lun_bôm≠
[
i
] |dev->
lun_bôm≠_backup
[i];

126 
	`check_mbr_bbt
(
dev
, 
mbr_bbt
, "MBR blocksÉrase check badÜuns");

130 
	`¥öt
("MBR blocks flagbyte scan...\n");

132 i‡(
	`Êagbyã_sˇn
(
dev
, 
mbr_bbt
))

133 
	`exôlog
("flagbyte_scan() failed\n");

134 
	`check_mbr_bbt
(
dev
, 
mbr_bbt
, "MBR blocks flagbyte check badÜuns");

135 
	}
}

138 
	#SH_HALTREAD_SHIFT
 16

	)

139 
	#SH_HALTREAD_MASK
 0x00ff0000

	)

142 
	#SH_TEMP_AUX1_OFFSET
 0x3D

	)

143 
	#SH_TEMP_AUX2_OFFSET
 0x3E

	)

144 
	#SH_TEMP_BOARD_OFFSET
 0x3F

	)

145 
	#SH_EXTERNAL_TEMP_DIV
 32.0

	)

147 
	$gë_Êash_ãmp
(
sh™n⁄_dev
 *
dev
) {

148 
code1
 = 
dev
->
	`i‹ód32
(dev, 
SH_TEMP_AUX1_OFFSET
);

149 
code2
 = 
dev
->
	`i‹ód32
(dev, 
SH_TEMP_AUX2_OFFSET
);

150 
ãmp
;

152 i‡((
code1
 & 0x2000Ë|| (
code2
 & 0x2000)) {

157 
code1
 &= 0x1FFF;

158 
code2
 &= 0x1FFF;

159 
ãmp
 = (
code1
 > 
code2
 ? code1 : code2Ë/ 
SH_EXTERNAL_TEMP_DIV
;

161 i‡((
ãmp
 - 
dev
->
max_Êash_ãmp
) > 0.01)

162 
dev
->
max_Êash_ãmp
 = 
ãmp
;

164  
ãmp
;

165 
	}
}

167 
	$gë_bﬂrd_ãmp
(
sh™n⁄_dev
 *
dev
) {

168 
code
 = 
dev
->
	`i‹ód32
(dev, 
SH_TEMP_BOARD_OFFSET
);

169 
ãmp
;

171 i‡(
code
 & 0x2000) {

175 
ãmp
 = (
code
 & 0x1FFFË/ 
SH_EXTERNAL_TEMP_DIV
;

177 i‡((
ãmp
 - 
dev
->
max_bﬂrd_ãmp
) > 0.01)

178 
dev
->
max_bﬂrd_ãmp
 = 
ãmp
;

180  
ãmp
;

181 
	}
}

183 
	$gë_c⁄åﬁÀr_ãmp
(
sh™n⁄_dev
 *
dev
) {

184 
code
 = 
dev
->
	`i‹ód32
(dev, 0x26);

185 
ãmp
 = (
code
 & 0x3FF) * 503975.0 / (1024 * 1000.0) - 273;

187 i‡((
code
 & 0x3FF) == 0x3FF) {

188 
	`¥ötf
("√g©ivêc⁄åﬁÀ∏ãm≥øtuª: code1=0x%X\n", 
code
);

192 i‡((
ãmp
 - 
dev
->
max_c⁄åﬁÀr_ãmp
) > 0.01)

193 
dev
->
max_c⁄åﬁÀr_ãmp
 = 
ãmp
;

195  
ãmp
;

196 
	}
}

198 
	$£t_max_ecc
(
sh™n⁄_dev
 *
dev
, 
max_ecc
) {

199 
code
 = 
dev
->
	`i‹ód32
(dev, 0xC7);

201 
code
 = (codê& ~
SH_HALTREAD_MASK
Ë| ((
max_ecc
 << 
SH_HALTREAD_SHIFT
) & SH_HALTREAD_MASK);

202 
dev
->
	`iowrôe32
(dev, 
code
, 0xC7);

203 
	}
}

205 
	$time•™
(
time_t
 
b
,Åime_à
e
, *
°t
)

207 
•™
 = ()(
e
 - 
b
);

208 
h
 = 
•™
 / 3600;

209 
m
 = (
•™
 % 3600) / 60;

210 
s
 = 
•™
 % 60;

211 
n
 = 0;

213 i‡(
h
)

214 
n
 +
	`•rötf
(
°t
 +Ç, "%dh", 
h
);

215 i‡(
m
 || 
h
)

216 
n
 +
	`•rötf
(
°t
 +Ç, "%dm", 
m
);

217 
	`•rötf
(
°t
 + 
n
, "%ds", 
s
);

218 
	}
}

223 #unde‡
ADVANCED_READ_INFO


225 
	$m±_sˇn_bbt_adv™˚
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
bbt
)

227 
lun
, 
blk
, 
µa
, 
hód
;

228 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

229 
li°_hód
 
ªq_hód
, 
ªq_hód_¨
;

230 
i
, 
ªmaö_ns
, 
ns
, 
bs
;

231 
¥e_˚¡
 = 0, 
now_˚¡
 = 0;

232 
nblock
 = 
bbt
->nblock;

233 
Êash_ãmp
, 
˘æ_ãmp
, 
bﬂrd_ãmp
;

236 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = dev->
c⁄fig_bakup
->sector_size_shift;

237 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = dev->
c⁄fig_bakup
->sector_ncodeword;

238 
dev
->
c⁄fig
->
ecc_mode
 = dev->
c⁄fig_bakup
->ecc_mode;

239 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

240 
dev
->
c⁄fig
->
≈œ√
 = 1;

241 
	`as£π
(
dev
->
c⁄fig
->
£˘‹_size_shi·
 =12 && dev->c⁄fig->
ecc_mode
 =
ECCMODE_ENABLE
);

242 i‡(
	`ª_öô_devi˚
(
dev
)) {

243 
	`¥ötf
("Re-öô-devi˚ %s(ËÁûed."
MPT_HELP
, 
__func__
);

244 
	`exô
(
EXIT_FAILURE
);

246 
dev
->
	`˛ór_queue
(dev);

249 
hód
 = 
INDEP_HEAD
;

250 
	`INIT_LIST_HEAD
(&
ªq_hód
);

251 
	`INIT_LIST_HEAD
(&
ªq_hód_¨
);

253 
	`§™d
(
	`gë£ed
(0));

255 
	`¥öt
("block wôhÉc¯œrgîÅh™ %d wû»bêm¨ked bad:\n", 
dev
->
s‹tög_ecc_limô
);

256 
˘æ_ãmp
 = 
	`gë_c⁄åﬁÀr_ãmp
(
dev
);

257 
Êash_ãmp
 = 
	`gë_Êash_ãmp
(
dev
);

258 
bﬂrd_ãmp
 = 
	`gë_bﬂrd_ãmp
(
dev
);

259 
	`¥öt
("Sorting 0s%sÜoops %d/%d, bad blocks %d, controllerÅemp %3.2f, flashÅemp %3.2f, boardÅemp %3.2f,Örogress 0.00%%",

260 
dev
->
s‹tög_¥öt_°rög
, dev->
lo›s
, dev->
sˇn_lo›s
, dev->
bad_blocks
, 
˘æ_ãmp
, 
Êash_ãmp
, 
bﬂrd_ãmp
);

262 
blk
 = 0; blk < 
nblock
; blk++) {

264 
	`£t_max_ecc
(
dev
, 240);

266 
µa
 = 
blk
 * 
dev
->
Êash
->
≈age
;Öpa < (blk + 1) * dev->flash->npage;Öpa++) {

267 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

268 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

270 
ªq
 = 
	`Æloc_ªque°_no_dma
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
, 
hód
, 0, dev->
c⁄fig
->
∑ge_n£˘‹
, 1);

271 i‡(
NULL
 =
ªq
)

272 
	`mÆloc_Áûed_exô
();

273 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

277 
µa
 = 
blk
 * 
dev
->
Êash
->
≈age
;Öpa < (blk + 1) * dev->flash->npage;Öpa++) {

278 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

279 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

281 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

282 i‡(
NULL
 =
ªq
)

283 
	`mÆloc_Áûed_exô
();

284 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

286 
bs
 = 0;

287 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

288 
ªmaö_ns
) {

289 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

291 
ªq
 = 
	`Æloc_ªque°_no_dma
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
, 
hód
, 
bs
, 
ns
, 1);

292 i‡(
NULL
 =
ªq
)

293 
	`mÆloc_Áûed_exô
();

294 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

296 
bs
 +
ns
;

297 
ªmaö_ns
 -
ns
;

302 
	`submô_pﬁlög_lo›
(
dev
, &
ªq_hód
);

304 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

305 i‡(
sh_wrôe_cmd
 =
ªq
->
›code
 || 
sh_¥îód_cmd
 ==Ñeq->opcode) {

306 i‡(
	`check_ªq_°©us_sûít
(
ªq
Ë&& !
	`ã°_bô
‘eq->
lun
, 
bbt
->
sb_bbt
[
blk
])) {

307 
dev
->
bad_blocks
++;

308 
dev
->
bb_cou¡
[
ªq
->
lun
]++;

309 
	`£t_bô
(
ªq
->
lun
, 
bbt
->
sb_bbt
[
blk
]);

310 
	`¥öt
("Sorting%sÜoops %d/%d, bad blocks %d:Üun %d(%d) blk %d %s failed\n",

311 
dev
->
s‹tög_¥öt_°rög
, dev->
lo›s
, dev->
sˇn_lo›s
, dev->
bad_blocks
, 
ªq
->
lun
, dev->
bb_cou¡
[ªq->lun], 
blk
,

312 (
sh_wrôe_cmd
 =
ªq
->
›code
) ? "write" : "pre-read");

313 i‡((
dev
->
bb_cou¡
[
ªq
->
lun
] > 
MAX_BAD_BLOCK_IN_A_LUN
Ë&& !
	`ã°_bô
‘eq->lun, dev->
lun_bôm≠
)) {

314 
dev
->
vÆid_luns
--;

315 
	`£t_bô
(
ªq
->
lun
, 
dev
->
lun_bôm≠
);

316 
	`¥öt
("lu¿%d ha†toÿm™y bad blocks, m¨kedá†övÆid\n", 
ªq
->
lun
);

319 } i‡(
sh_ˇchîód_cmd
 =
ªq
->
›code
) {

320 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

321 i‡((
ªq
->
ecc
[
i
] >0xFBË&& !
	`ã°_bô
‘eq->
lun
, 
bbt
->
sb_bbt
[
blk
])) {

322 
dev
->
bad_blocks
++;

323 
dev
->
bb_cou¡
[
ªq
->
lun
]++;

324 
	`£t_bô
(
ªq
->
lun
, 
bbt
->
sb_bbt
[
blk
]);

325 
	`¥öt
("Sorting%sÜoops %d/%d, bad blocks %d:Üun %d(%d) blk %dÖage %dÇormalÑeadÉcc is %d\n",

326 
dev
->
s‹tög_¥öt_°rög
, dev->
lo›s
, dev->
sˇn_lo›s
, dev->
bad_blocks
, 
ªq
->
lun
, dev->
bb_cou¡
[ªq->lun], 
blk
,Ñeq->
∑ge
,Ñeq->
ecc
[
i
]);

327 i‡((
dev
->
bb_cou¡
[
ªq
->
lun
] > 
MAX_BAD_BLOCK_IN_A_LUN
Ë&& !
	`ã°_bô
‘eq->lun, dev->
lun_bôm≠
)) {

328 
dev
->
vÆid_luns
--;

329 
	`£t_bô
(
ªq
->
lun
, 
dev
->
lun_bôm≠
);

330 
	`¥öt
("lu¿%d ha†toÿm™y bad blocks, m¨kedá†övÆid\n", 
ªq
->
lun
);

332 } i‡((
ªq
->
ecc
[
i
] > 
dev
->
s‹tög_ecc_limô
Ë&& !
	`ã°_bô
‘eq->
lun
, 
bbt
->
sb_bbt
[
blk
])) {

333 #ifde‡
ADVANCED_READ_INFO


334 
	`¥öt
("Enter Advance Read! Sorting%sÜoops %d/%d:Üun %d blk %dÖage %d highÉcc is %d\n",

335 
dev
->
s‹tög_¥öt_°rög
, dev->
lo›s
, dev->
sˇn_lo›s
, 
ªq
->
lun
, 
blk
,Ñeq->
µa
 % dev->
Êash
->
≈age
,Ñeq->
ecc
[
i
]);

337 
bs
 = 0;

338 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

339 
ªmaö_ns
) {

340 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

341 
tmp
 = 
	`Æloc_ªque°_no_dma
(
dev
, 
sh_ˇchîód_cmd
, 
ªq
->
lun
,Ñeq->
µa
, 
hód
, 
bs
, 
ns
, 1);

342 i‡(
NULL
 =
tmp
)

343 
	`mÆloc_Áûed_exô
();

344 
tmp
->
adv™˚_ªad
 = 1;

345 
	`li°_add_èû
(&
tmp
->
li°
, &
ªq_hód_¨
);

346 
bs
 +
ns
;

347 
ªmaö_ns
 -
ns
;

352 
ecc_hi°ogøm
[
ªq
->
ecc
[
i
]]++;

355 
	`exôlog
("Unk⁄w¿comm™d %x\n", 
ªq
->
›code
);

358 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

359 
	`li°_dñ
(&
ªq
->
li°
);

360 
	`‰ì_ªque°
(
ªq
);

364 
	`£t_max_ecc
(
dev
, dev->
s‹tög_ecc_limô
);

366 
µa
 = 
blk
 * 
dev
->
Êash
->
≈age
;

367 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

368 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

370 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

371 i‡(
NULL
 =
ªq
)

372 
	`mÆloc_Áûed_exô
();

373 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód_¨
);

376 
	`submô_pﬁlög_lo›
(
dev
, &
ªq_hód_¨
);

378 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód_¨
, 
li°
) {

379 i‡(
sh_ˇchîód_cmd
 =
ªq
->
›code
) {

380 #ifde‡
ADVANCED_READ_INFO


381 
	`¥öt
("Sorting%sÜoops %d/%d:Üun %d blk %dÖage %dádvancedÑeadÉccáre:",

382 
dev
->
s‹tög_¥öt_°rög
, dev->
lo›s
, dev->
sˇn_lo›s
, 
ªq
->
lun
, 
blk
,Ñeq->
µa
 % dev->
Êash
->
≈age
);

383 
i
 = 0; i < 
ªq
->
n£˘‹
; i++)

384 
	`¥öt
(" %d", 
ªq
->
ecc
[
i
]);

385 
	`¥ötf
("\n");

387 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

388 i‡(
ªq
->
ecc
[
i
] <
dev
->
tmode
)

389 
ecc_hi°ogøm
[
ªq
->
ecc
[
i
]]++;

391 i‡((
ªq
->
ecc
[
i
] > 
dev
->
s‹tög_ecc_limô
Ë&& !
	`ã°_bô
‘eq->
lun
, 
bbt
->
sb_bbt
[
blk
])) {

392 
dev
->
bad_blocks
++;

393 
dev
->
bb_cou¡
[
ªq
->
lun
]++;

394 
	`£t_bô
(
ªq
->
lun
, 
bbt
->
sb_bbt
[
blk
]);

395 
	`¥öt
("Sorting%sÜoops %d/%d, bad blocks %d:Üun %d(%d) blk %dádvancedÑeadÉcc is %d\n",

396 
dev
->
s‹tög_¥öt_°rög
, dev->
lo›s
, dev->
sˇn_lo›s
, dev->
bad_blocks
, 
ªq
->
lun
, dev->
bb_cou¡
[ªq->lun], 
blk
,Ñeq->
ecc
[
i
]);

397 i‡((
dev
->
bb_cou¡
[
ªq
->
lun
] > 
MAX_BAD_BLOCK_IN_A_LUN
Ë&& !
	`ã°_bô
‘eq->lun, dev->
lun_bôm≠
)) {

398 
dev
->
vÆid_luns
--;

399 
	`£t_bô
(
ªq
->
lun
, 
dev
->
lun_bôm≠
);

400 
	`¥öt
("lu¿%d ha†toÿm™y bad blocks, m¨kedá†övÆid\n", 
ªq
->
lun
);

404 } i‡(
sh_îa£_cmd
 =
ªq
->
›code
) {

405 i‡(
	`check_ªq_°©us_sûít
(
ªq
Ë&& !
	`ã°_bô
‘eq->
lun
, 
bbt
->
sb_bbt
[
blk
])) {

406 
dev
->
bad_blocks
++;

407 
dev
->
bb_cou¡
[
ªq
->
lun
]++;

408 
	`£t_bô
(
ªq
->
lun
, 
bbt
->
sb_bbt
[
blk
]);

409 
	`¥öt
("Sorting%sÜoops %d/%d, bad blocks %d:Üun %d(%d) blk %dÉrase failed\n",

410 
dev
->
s‹tög_¥öt_°rög
, dev->
lo›s
, dev->
sˇn_lo›s
, dev->
bad_blocks
, 
ªq
->
lun
, dev->
bb_cou¡
[ªq->lun], 
blk
);

411 i‡((
dev
->
bb_cou¡
[
ªq
->
lun
] > 
MAX_BAD_BLOCK_IN_A_LUN
Ë&& !
	`ã°_bô
‘eq->lun, dev->
lun_bôm≠
)) {

412 
dev
->
vÆid_luns
--;

413 
	`£t_bô
(
ªq
->
lun
, 
dev
->
lun_bôm≠
);

414 
	`¥öt
("lu¿%d ha†toÿm™y bad blocks, m¨kedá†övÆid\n", 
ªq
->
lun
);

418 
	`exôlog
("Unk⁄w¿comm™d %x\n", 
ªq
->
›code
);

421 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód_¨
, 
li°
) {

422 
	`li°_dñ
(&
ªq
->
li°
);

423 
	`‰ì_ªque°
(
ªq
);

427 i‡(
blk
 =(
MPT_MBR_NBLK
 - 1))

428 
	`check_mbr_bbt
(
dev
, 
bbt
, (bbt->
nblock
 =
MPT_MBR_NBLK
) ? "MBR-LOOP check MBR blocks badÜuns" : "INIT-LOOP check MBR blocks badÜuns");

430 
now_˚¡
 = 100.0 * (
blk
 + 1Ë/ 
nblock
;

431 i‡((
now_˚¡
 - 
¥e_˚¡
) > 0.05) {

432 
˘æ_ãmp
 = 
	`gë_c⁄åﬁÀr_ãmp
(
dev
);

433 
Êash_ãmp
 = 
	`gë_Êash_ãmp
(
dev
);

434 
bﬂrd_ãmp
 = 
	`gë_bﬂrd_ãmp
(
dev
);

435 
	`time•™
(
dev
->
m±_begötime
, 
	`time
(
NULL
), dev->
m±_timëook
);

436 
	`¥ötf
("\r\033[K");

437 
	`¥öt
("Sorting %s%sÜoops %d/%d, bad blocks %d, controllerÅemp %3.2f, flashÅemp %3.2f, boardÅemp %3.2f,Örogress %2.2f%%",

438 
dev
->
m±_timëook
, dev->
s‹tög_¥öt_°rög
, dev->
lo›s
, dev->
sˇn_lo›s
, dev->
bad_blocks
, 
˘æ_ãmp
, 
Êash_ãmp
, 
bﬂrd_ãmp
, 
now_˚¡
);

439 
¥e_˚¡
 = 
now_˚¡
;

443 i‡(
bbt
->
nblock
 =
dev
->
Êash
->
nblk
)

444 
	`check_Æl_bbt
(
dev
, 
bbt
, "INIT LOOP check badÜuns");

446 
	`¥öt
("\n");

449 
	`£t_max_ecc
(
dev
, 240);

450 
	}
}

452 
	$m±_sˇn_mbr_bbt
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
mbr_bbt
, 
√w
)

454 
	`m±_sˇn_mbr_bbt_basic
(
dev
, 
mbr_bbt
, 
√w
);

455 
	}
}

457 
	$m±_buûd_sb_lunöfo
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
bbt
)

459 
lun
, 
blk
;

460 
group
, 
group_vÆid_luns
, 
mö_d©a_luns
, 
vÆid_groups
;

462 
	`as£π
(
NULL
 !
dev
->
sb
);

463 
	`as£π
(
dev
->
c⁄fig
->
≈œ√
 =dev->
c⁄fig_bakup
->nplane);

464 
	`mem£t
(
dev
->
sb
, 0x00, (*dev->sbË* dev->
Êash
->
nblk
 / dev->
c⁄fig_bakup
->
≈œ√
);

466 
	`f‹_dev_óch_block
(
dev
, 
blk
) {

467 
dev
->
sb
[
blk
].
sb_lunöfo
.
luns
 = 0;

468 
dev
->
sb
[
blk
].
sb_lunöfo
.
nd©Æun
 = 0;

470 
mö_d©a_luns
 = 65536;

471 
vÆid_groups
 = 0;

473 
group
 = 0; grou∞< 
dev
->
group_øid_num
; group++) {

474 
group_vÆid_luns
 = 0;

476 
lun
 = 
group
 * 
dev
->
group_øid_luns
;Üun < (group + 1) * dev->group_raid_luns;Üun++) {

477 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

478 
	`£t_bô
(
lun
, 
dev
->
sb
[
blk
].
sb_lunöfo
.
sb_bbt
);

480 
group_vÆid_luns
++;

483 i‡(
group_vÆid_luns
 > 1) {

484 
dev
->
sb
[
blk
].
sb_lunöfo
.
luns
 +
group_vÆid_luns
;

485 i‡((
group_vÆid_luns
 - 1Ë< 
mö_d©a_luns
)

486 
mö_d©a_luns
 = 
group_vÆid_luns
 - 1;

487 
vÆid_groups
++;

490 
dev
->
sb
[
blk
].
sb_lunöfo
.
nd©Æun
 = 
mö_d©a_luns
 * 
vÆid_groups
;

492 i‡(
dev
->
sb
[
blk
].
sb_lunöfo
.
nd©Æun
 < 8)

493 
dev
->
sb
[
blk
].
sb_lunöfo
.
luns
 = dev->sb[blk].sb_lunöfo.
nd©Æun
 = 0;

496 
	}
}

499 
	$check_ecc_powî
(
sh™n⁄_dev
 *
dev
, 
powî
)

503 i‡(16 =
dev
->
tmode
) {

504 i‡(
powî
 != 6) {

505 
	`¥ötf
("%s(ËÁû:Åmode=%dÉcc_powî=%d\n", 
__func__
, 
dev
->
tmode
, 
powî
);

506 
	`exô
(
EXIT_FAILURE
);

508 } i‡(35 =
dev
->
tmode
 || 50 == dev->tmode || 58 == dev->tmode) {

509 i‡(
powî
 != 12 &&Öower != 8) {

510 
	`¥ötf
("%s(ËÁû:Åmode=%dÉcc_powî=%d\n", 
__func__
, 
dev
->
tmode
, 
powî
);

511 
	`exô
(
EXIT_FAILURE
);

514 
	`¥ötf
("%s(): invÆidÅmodê%d\n", 
__func__
, 
dev
->
tmode
);

515 
	`exô
(
EXIT_FAILURE
);

517 
	}
}

519 
	$m±_£tvÆue_mbr
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_mbr
 *
mbr
)

521 
lun
, 
blk
, 
öô_hŸ_sblk
, 
öô_cﬁd_sblk
;

522 
u64
 
nd©ablock
, 
ˇ∑côy
;

524 
	`mem£t
(
mbr
, 0x00, (*mbr));

527 
blk
 = 
MPT_MBR_NBLK
/
dev
->
c⁄fig_bakup
->
≈œ√
; blk < dev->
Êash
->
nblk
 / dev->config_bakup->nplane; blk++) {

528 i‡(
dev
->
sb
[
blk
].
sb_lunöfo
.
nd©Æun
 != 0) {

529 
öô_hŸ_sblk
 = 
blk
;

533 
	`as£π
(
öô_hŸ_sblk
 < 
dev
->
Êash
->
nblk
 / dev->
c⁄fig_bakup
->
≈œ√
);

535 
blk
 +1; blk < 
dev
->
Êash
->
nblk
 / dev->
c⁄fig_bakup
->
≈œ√
; blk++) {

536 i‡(
dev
->
sb
[
blk
].
sb_lunöfo
.
nd©Æun
 != 0) {

537 
öô_cﬁd_sblk
 = 
blk
;

541 
	`as£π
(
öô_cﬁd_sblk
 < 
dev
->
Êash
->
nblk
 / dev->
c⁄fig_bakup
->
≈œ√
);

544 
nd©ablock
 = 0;

545 
blk
 = 
MPT_MBR_NBLK
/
dev
->
c⁄fig_bakup
->
≈œ√
; blk < dev->
Êash
->
nblk
 / dev->config_bakup->nplane; blk++)

546 
nd©ablock
 +
dev
->
sb
[
blk
].
sb_lunöfo
.
nd©Æun
;

547 i‡(
nd©ablock
 <17 * (
dev
->
vÆid_luns
 - dev->
group_øid_num
)) {

548 
	`¥ötf
("CapacityÅoo small\n");

549 
	`exô
(
EXIT_FAILURE
);

551 
nd©ablock
 -17 * (
dev
->
vÆid_luns
 - dev->
group_øid_num
);

552 
ˇ∑côy
 = (
nd©ablock
 * 
dev
->
Êash
->
≈age
 * dev->
c⁄fig_bakup
->
chunk_nd©a
) >> 9;

553 i‡(0 =
dev
->
m±_£t_ˇ∑côy
) {

554 
ˇ∑côy
 = c≠acôy * (100 - 
dev
->
c⁄fig_bakup
->
ovî¥ovisi⁄_øã
) / 100;

556 i‡(
dev
->
m±_£t_ˇ∑côy
 > (
ˇ∑côy
 << 9) * 95/100) {

557 
	`¥ötf
("WARNNING: your input capacity isÜargerÅhan 95%%Öhysical capacity will be ignored, use default\n");

558 
ˇ∑côy
 = c≠acôy * (100 - 
dev
->
c⁄fig_bakup
->
ovî¥ovisi⁄_øã
) / 100;

560 
ˇ∑côy
 = (
dev
->
m±_£t_ˇ∑côy
 + 511) >> 9;

562 
ˇ∑côy
 = (capacity + 0x7FFllu) & (~0x7FFllu);

565 
	`•rötf
(
mbr
->
id
, 
MBR_ID
);

566 
mbr
->
mbr_vîsi⁄
 = 
dev
->mbr_version;

567 
mbr
->
h¨dw¨e_vîsi⁄
 = 
dev
->
c⁄fig_bakup
->hardware_version;

568 
mbr
->
so·w¨e_vîsi⁄
 = 
dev
->
c⁄fig_bakup
->software_version;

569 
mbr
->
«nd_m™uÁ˘uª
 = 
dev
->
Êash
->
víd‹_id
;

570 
mbr
->
«nd_id
 = 
dev
->
Êash
->
devi˚_id
;

571 
mbr
->
ˇ∑côy
 = capacity;

573 
mbr
->
lun_amou¡
 = 
dev
->
c⁄fig_bakup
->
luns
;

574 
mbr
->
eblocks_ö_lun
 = 
dev
->
Êash
->
nblk
;

575 
mbr
->
∑ges_ö_eblock
 = 
dev
->
Êash
->
≈age
;

576 
mbr
->
«nd_∑ge_shi·
 = 
dev
->
Êash
->
∑ge_size_shi·
;

577 
mbr
->
oob_size
 = 
dev
->
Êash
->oob_size;

578 
mbr
->
logicb_shi·
 = 
dev
->
c⁄fig_bakup
->
£˘‹_size_shi·
;

579 i‡(1 =
dev
->
c⁄fig_bakup
->
≈œ√
)

580 
mbr
->
∂™e_‹dî
 = 0;

581 i‡(2 =
dev
->
c⁄fig_bakup
->
≈œ√
)

582 
mbr
->
∂™e_‹dî
 = 1;

583 i‡(4 =
dev
->
c⁄fig_bakup
->
≈œ√
)

584 
mbr
->
∂™e_‹dî
 = 2;

586 
	`as£π
(0);

587 
mbr
->
cfg_nch™√l
 = 
dev
->
c⁄fig_bakup
->
nch™√l
;

588 
mbr
->
cfg_¡hªad
 = 
dev
->
c⁄fig_bakup
->
¡hªad
;

589 
mbr
->
cfg_∆un
 = 
dev
->
c⁄fig_bakup
->
∆un
;

591 
mbr
->
öô_hŸ_sblk
 = init_hot_sblk;

592 
mbr
->
öô_cﬁd_sblk
 = init_cold_sblk;

594 
mbr
->
öãºu±_dñay
 = 
dev
->interrupt_delay ? dev->interrupt_delay : 5;

595 
mbr
->
ecc_codew‹ds_ö_logicb
 = 
dev
->
c⁄fig_bakup
->
£˘‹_ncodew‹d
;

596 
mbr
->
ecc_c‹ª˘i⁄_powî
 = 
dev
->
hw_c⁄fig
->
hw_ecc_powî
 & 0x0F;

597 
	`check_ecc_powî
(
dev
, 
mbr
->
ecc_c‹ª˘i⁄_powî
);

598 
mbr
->
Êash_drvmode
 = 
dev
->
c⁄fig_bakup
->
drvmode
 + 1;

599 
mbr
->
lun_m≠_mode
 = 
dev
->
√wlunm≠
;

600 
mbr
->
luns_≥r_˚_mask
 = 
dev
->
c⁄fig
->
lun_mask
;

601 
mbr
->
øid_°rùes
 = 
dev
->
group_øid_num
;

604 
	`mem£t
(
mbr
->
bad_phy_lun_m≠
, 0xFF, (mbr->bad_phy_lun_map));

605 
mbr
->
u£r_logicb_shi·
 = 
dev
->
c⁄fig_bakup
->
u£r_£˘‹_size_shi·
;

606 
mbr
->
powî_budgë
 = 
dev
->power_budget;

607 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

608 
	`˛ór_bô
(
	`log2phy_lun
(
dev
, 
lun
), (*)
mbr
->
bad_phy_lun_m≠
);

610 i‡(
dev
->
©omic_wrôe
)

611 
mbr
->
„©uª_Êags
 |
ATOMIC_WRITE
;

612 i‡(
dev
->
¥i‹ôize_wrôe
)

613 
mbr
->
„©uª_Êags
 |
PRIORITIZE_WRITE
;

615 
mbr
->
dma_max_ªad_limô
 = 
dev
->dma_max_read_limit;

616 
mbr
->
˛k
 = 
dev
->
Êash_if˛ock
;

617 
mbr
->
max_out°™dög_bios
 = 
dev
->max_outstanding_bios;

618 
	}
}

620 
	$m±_¥öt_mbr
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_mbr
 *
mbr
)

622 
i
, 
„n˚
 = 0;

624 i‡(
	`°rcmp
(
mbr
->
id
, 
MBR_ID
)) {

625 
	`¥ötf
("No MBR\n");

629 
	`¥ötf
("id=%s\n", 
mbr
->
id
);

630 
	`¥ötf
("mbr_vîsi⁄=0x%04lX\n", 
mbr
->
mbr_vîsi⁄
);

631 
	`¥ötf
("h¨dw¨e_vîsi⁄=0x%08lX\n", 
mbr
->
h¨dw¨e_vîsi⁄
);

632 
	`¥ötf
("so·w¨e_vîsi⁄=%ld\n", 
mbr
->
so·w¨e_vîsi⁄
);

633 
	`¥ötf
("«nd_m™uÁ˘uª=0x%02lX\n", 
mbr
->
«nd_m™uÁ˘uª
);

634 
	`¥ötf
("«nd_id=0x%02lX\n", 
mbr
->
«nd_id
);

635 
	`¥ötf
("ˇ∑côy=%ld se˘‹ (%ld MB, %ld GiB)\n", 
mbr
->
ˇ∑côy
, mbr->capacity >> 11, (mbr->capacity * 512)/1000000000ul);

637 
	`¥ötf
("lun_amou¡=%d\n", 
mbr
->
lun_amou¡
);

638 
	`¥ötf
("eblocks_ö_lun=%d\n", 
mbr
->
eblocks_ö_lun
);

639 
	`¥ötf
("∑ges_ö_eblock=%d\n", 
mbr
->
∑ges_ö_eblock
);

640 
	`¥ötf
("«nd_∑ge_shi·=%d\n", 
mbr
->
«nd_∑ge_shi·
);

641 
	`¥ötf
("oob_size=%d\n", 
mbr
->
oob_size
);

642 
	`¥ötf
("logicb_shi·=%d\n", 
mbr
->
logicb_shi·
);

643 
	`¥ötf
("∂™e_‹dî=%d\n", 
mbr
->
∂™e_‹dî
);

644 
	`¥ötf
("cfg_nch™√l=%d\n", 
mbr
->
cfg_nch™√l
);

645 
	`¥ötf
("cfg_¡hªad=%d\n", 
mbr
->
cfg_¡hªad
);

646 
	`¥ötf
("cfg_∆un=%d\n", 
mbr
->
cfg_∆un
);

648 
	`¥ötf
("öô_hŸ_sblk=%d\n", 
mbr
->
öô_hŸ_sblk
);

649 
	`¥ötf
("öô_cﬁd_sblk=%d\n", 
mbr
->
öô_cﬁd_sblk
);

651 
	`¥ötf
("öãºu±_dñay=%d\n", 
mbr
->
öãºu±_dñay
);

653 
	`¥ötf
("ecc_codew‹ds_ö_logicb=%d\n", 
mbr
->
ecc_codew‹ds_ö_logicb
);

654 
	`¥ötf
("ecc_c‹ª˘i⁄_powî=%d\n", 
mbr
->
ecc_c‹ª˘i⁄_powî
);

655 
	`¥ötf
("Êash_drvmode=%d\n", 
mbr
->
Êash_drvmode
 - 1);

656 
	`¥ötf
("lun_m≠_mode=%d\n", 
mbr
->
lun_m≠_mode
);

657 
	`¥ötf
("luns_≥r_˚_mask=0x%02X\n", 
mbr
->
luns_≥r_˚_mask
);

658 
	`¥ötf
("group_øid_num=%d\n", 
mbr
->
øid_°rùes
);

660 
	`¥ötf
("bad_phy_lun_map=");

661 
i
 = 0; i < 7; i++)

662 
	`¥ötf
("%016lX_", 
mbr
->
bad_phy_lun_m≠
[
i
]);

663 
	`¥ötf
("%016lX\n", 
mbr
->
bad_phy_lun_m≠
[7]);

664 
	`¥ötf
("u£r_logicb_shi·=%d\n", 
mbr
->
u£r_logicb_shi·
);

665 
	`¥ötf
("powî_budgë=%d\n", 
mbr
->
powî_budgë
);

667 
	`¥ötf
("©omic_wrôe=%d\n", (
mbr
->
„©uª_Êags
 & 
ATOMIC_WRITE
) ? 1 : 0);

668 
	`¥ötf
("¥i‹ôize_wrôe=%d\n", (
mbr
->
„©uª_Êags
 & 
PRIORITIZE_WRITE
) ? 1 : 0);

670 
	`¥ötf
("dma_max_ªad_limô=%d\n", 
mbr
->
dma_max_ªad_limô
);

671 
	`¥ötf
("˛k=%d\n", 
mbr
->
˛k
);

672 
	`¥ötf
("max_out°™dög_bios=%d\n", 
mbr
->
max_out°™dög_bios
);

674 
	`¥ötf
("*öhîít_mbr_£˘‹_size=%d\n", 
dev
->
öhîít_mbr_£˘‹_size
);

676 
	`¥ötf
("\033[0;1;31mFenced Bad Log Luns:\033[0m");

677 
i
 = 0; i < 
dev
->
c⁄fig
->
luns
; i++) {

678 i‡(
	`ã°_bô
(
i
, 
dev
->
lun_bôm≠
))

681 i‡(
	`ã°_bô
(
	`log2phy_lun
(
dev
, 
i
), (*)
mbr
->
bad_phy_lun_m≠
)) {

682 
	`¥ötf
(" %d", 
i
);

683 
„n˚
++;

686 i‡(
„n˚
)

687 
	`¥ötf
("ÅŸÆ=%d", 
„n˚
);

688 
	`¥ötf
("\n");

690 
„n˚
 = 0;

691 
	`¥ötf
("\033[0;1;31mFenced Bad Phy Luns:\033[0m");

692 
i
 = 0; i < 
dev
->
c⁄fig
->
luns
; i++) {

693 i‡(
	`ã°_bô
(
	`phy2log_lun
(
dev
, 
i
), dev->
lun_bôm≠
))

696 i‡(
	`ã°_bô
(
i
, (*)
mbr
->
bad_phy_lun_m≠
)) {

697 
	`¥ötf
(" %d", 
i
);

698 
„n˚
++;

701 i‡(
„n˚
)

702 
	`¥ötf
("ÅŸÆ=%d", 
„n˚
);

703 
	`¥ötf
("\n");

704 
	}
}

707 
	#GET_MBR_LINE
(
key
, 
key«me
, 
ba£
, 
mu°
) \

709 
k
; \

711 
k
 = 0; k < 
‚
; k++) { \

712 i‡(!
	`°rcmp
(
key«me
, 
f˘x
[
k
][0])) { \

713 
mbr
->
key
 = 
	`°πoul
(
f˘x
[
k
][1], 
NULL
, 
ba£
); \

718 i‡(
mu°
 && 
k
 >
‚
) { \

719 
	`¥ötf
("Nÿfound %†ö mb∏fûe\n", 
key«me
); \

720 
	`exô
(
EXIT_FAILURE
); \

722 } 0)

	)

724 
	$m±_£tvÆue_mbr_‰om_fûe
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_mbr
 *
mbr
, 
FILE
 *
Â
)

726 
i
, 
j
, 
‚
;

727 
löe
[1024], *
f˘x
[512][2], *
°mp
, *
ï
, *
≈
;

729 
‚
 = 0;

730 
	`fgës
(
löe
, ÷öe), 
Â
)) {

731 i‡('*' =
löe
[0])

734 i‡((
ï
 = 
	`°rchr
(
löe
, '=')Ë=
NULL
) {

735 
	`¥ötf
("InvÆid mb∏löe: %s\n", 
löe
);

736 
	`exô
(
EXIT_FAILURE
);

738 *
ï
 = '\0';

740 
f˘x
[
‚
][0]=
	`°rdup
(
löe
);

741 
f˘x
[
‚
][1]=
	`°rdup
(
ï
+1);

743 i‡(++
‚
 >= 512) {

744 
	`¥ötf
("Toÿm™yÜöe†ö MBR fûê%d\n", 
‚
);

745 
	`exô
(
EXIT_FAILURE
);

752 i‡(
	`°∫cmp
(
f˘x
[0][1], 
MBR_ID
, 
	`°æí
(MBR_ID))) {

753 
	`¥ötf
("Thê1°Üöêo‡MBR fûêi†övÆid: %s=%s", 
f˘x
[0][0], fctx[0][1]);

754 
	`exô
(
EXIT_FAILURE
);

757 
	`•rötf
(
mbr
->
id
, 
MBR_ID
);

759 
	`GET_MBR_LINE
(
mbr_vîsi⁄
, "mbr_version", 16, 1);

760 
	`GET_MBR_LINE
(
h¨dw¨e_vîsi⁄
, "hardware_version", 16, 0);

761 
	`GET_MBR_LINE
(
so·w¨e_vîsi⁄
, "software_version", 10, 0);

762 
	`GET_MBR_LINE
(
«nd_m™uÁ˘uª
, "nand_manufacture", 16, 0);

763 
	`GET_MBR_LINE
(
«nd_id
, "nand_id", 16, 0);

764 
	`GET_MBR_LINE
(
ˇ∑côy
, "capacity", 10, 1);

766 
	`GET_MBR_LINE
(
lun_amou¡
, "lun_amount", 10, 1);

767 
	`GET_MBR_LINE
(
eblocks_ö_lun
, "eblocks_in_lun", 10, 1);

768 
	`GET_MBR_LINE
(
∑ges_ö_eblock
, "pages_in_eblock", 10, 1);

769 
	`GET_MBR_LINE
(
«nd_∑ge_shi·
, "nand_page_shift", 10, 1);

770 
	`GET_MBR_LINE
(
oob_size
, "oob_size", 10, 1);

771 
	`GET_MBR_LINE
(
logicb_shi·
, "logicb_shift", 10, 1);

772 
	`GET_MBR_LINE
(
∂™e_‹dî
, "plane_order", 10, 1);

773 
	`GET_MBR_LINE
(
cfg_nch™√l
, "config_channels", 10, 1);

774 
	`GET_MBR_LINE
(
cfg_¡hªad
, "config_lunset_in_channel", 10, 1);

775 
	`GET_MBR_LINE
(
cfg_∆un
, "config_lun_in_lunset", 10, 1);

777 
	`GET_MBR_LINE
(
öô_hŸ_sblk
, "init_hot_sblk", 10, 1);

778 
	`GET_MBR_LINE
(
öô_cﬁd_sblk
, "init_cold_sblk", 10, 1);

780 
	`GET_MBR_LINE
(
ecc_codew‹ds_ö_logicb
, "ecc_codewords_in_logicb", 10, 1);

781 
	`GET_MBR_LINE
(
ecc_c‹ª˘i⁄_powî
, "ecc_correction_power", 10, 1);

782 
	`GET_MBR_LINE
(
hi°‹y_îa£_cou¡
, "history_erase_count", 10, 0);

784 
	`GET_MBR_LINE
(
powî_cy˛e_cou¡
, "power_cycle_count", 10, 0);

785 
	`GET_MBR_LINE
(
powî_⁄_£c⁄ds
, "power_on_seconds", 10, 0);

786 
	`GET_MBR_LINE
(
ho°_wrôe_£˘‹s
, "host_write_sectors", 10, 0);

787 
	`GET_MBR_LINE
(
tŸÆ_wrôe_£˘‹s
, "total_write_sectors", 10, 0);

788 
	`GET_MBR_LINE
(
ho°_ªad_£˘‹s
, "host_read_sectors", 10, 0);

790 
	`GET_MBR_LINE
(
Êash_drvmode
, "flash_drvmode", 10, 0);

791 
	`GET_MBR_LINE
(
luns_≥r_˚_mask
, "luns_per_ce_mask", 16, 1);

792 
	`GET_MBR_LINE
(
lun_m≠_mode
, "lun_map_mode", 10, 0);

793 
	`GET_MBR_LINE
(
øid_°rùes
, "raid_stripes", 10, 0);

795 
	`GET_MBR_LINE
(
max_∑ges_ö_eblock
, "max_pages_in_eblock", 10, 0);

796 
	`GET_MBR_LINE
(
u£r_logicb_shi·
, "user_logicb_shift", 10, 0);

799 
ï
 = 
NULL
;

800 
i
 = 0; i < 
‚
; i++) {

801 i‡(!
	`°rcmp
(
f˘x
[
i
][0], "bad_phy_lun_map")) {

802 
ï
 = 
f˘x
[
i
][1];

806 i‡(
NULL
 =
ï
) {

807 
	`¥ötf
("No foundd bad_phy_lun_map in mbr file\n");

808 
	`exô
(
EXIT_FAILURE
);

810 
°mp
 = 
ï
;

812 
≈
 = 
ï
;

813 
i
 = 0; i < 8; i++) {

814 
mbr
->
bad_phy_lun_m≠
[
i
] = 
	`°πoul
(
≈
, &
ï
, 16);

815 i‡(
i
 !7 && *
ï
 != '_') {

816 
	`¥ötf
("InvÆid bad_phy_lun_m≠ i¿mb∏%s", 
°mp
);

817 
	`exô
(
EXIT_FAILURE
);

819 
≈
 = 
ï
 + 1;

821 
j
 = 0; j < 64; j++) {

822 i‡(
i
*64+
j
 >
dev
->
hw_luns
)

825 i‡(
	`ã°_bô
(
j
, (*)&
mbr
->
bad_phy_lun_m≠
[
i
]))

826 
	`£t_bô
(
	`phy2log_lun
(
dev
, 
i
*64+
j
), dev->
lun_bôm≠
);

830 
	`f˛o£
(
Â
);

832 
	}
}

834 
	$m±_£tbbt_‰om_fûe
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
bbt
, 
FILE
 *
Â
)

836 
löe
[1024], *
p
, *
ï
, *
≈
;

837 
i
, 
j
, 
blk
;

838 
bmp
;

840 
	`fgës
(
löe
, ÷öe), 
Â
)) {

841 i‡((
p
 = 
	`°rchr
(
löe
, '[')Ë=
NULL
) {

842 
	`¥ötf
("InvÆid bbàlöê%s", 
löe
);

843 
	`exô
(
EXIT_FAILURE
);

846 
blk
 = 
	`°πoul
(
p
+1, 
NULL
, 10);

847 i‡(
blk
 * (1 << 
dev
->
mbr
->
∂™e_‹dî
Ë< 
MPT_MBR_NBLK
)

852 i‡((
p
 = 
	`°rchr
(
löe
, ':')Ë=
NULL
) {

853 
	`¥ötf
("InvÆid bbàlöê%s", 
löe
);

854 
	`exô
(
EXIT_FAILURE
);

856 
≈
 = 
p
 + 1;

858 
i
 = 0; i < 4; i++) {

859 
bmp
 = 
	`°πoul
(
≈
, &
ï
, 16);

860 i‡(
i
 !3 && *
ï
 != ' ') {

861 
	`¥ötf
("InvÆid bbàlöê%s", 
löe
);

862 
	`exô
(
EXIT_FAILURE
);

864 
≈
 = 
ï
 + 1;

868 
j
 = 0; j < 64; j++) {

869 i‡(
	`ã°_bô
(
j
, &
bmp
))

870 
	`£t_bô
(
i
*64+
j
, 
bbt
->
sb_bbt
[
blk
]);

876 
	`f˛o£
(
Â
);

877 
	}
}

880 
	$m±_wrôe_mbr
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_mbr
 *
mbr
)

882 
i
, 
lun
, 
blk
, 
µa
, 
hód
;

883 
sh™n⁄_bbt
 *
mbr_bbt
;

884 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

885 
li°_hód
 
ªq_hód
;

886 
sh™n⁄_mbr
 *
À_mbr
;

888 
	`as£π
(!
	`°rcmp
(
MBR_ID
, 
mbr
->
id
));

889 
	`as£π
(
dev
->
c⁄fig
->
£˘‹_size_shi·
 =(dev->
mbr_by_4k
 ? 12 : 9));

890 
	`as£π
(
ECCMODE_ENABLE
 =
dev
->
c⁄fig
->
ecc_mode
);

892 
dev
->
öhîít_mbr_£˘‹_size
 = 2 << dev->
c⁄fig
->
£˘‹_size_shi·
;

894 
À_mbr
 = 
	`zmÆloc
((*le_mbr));

895 
	`as£π
(
NULL
 !
À_mbr
);

896 
	`mem˝y
(
À_mbr
, 
mbr
, (*le_mbr));

900 
	`˝u_to_À64s
(&
À_mbr
->
mbr_vîsi⁄
);

901 
	`˝u_to_À64s
(&
À_mbr
->
h¨dw¨e_vîsi⁄
);

902 
	`˝u_to_À64s
(&
À_mbr
->
so·w¨e_vîsi⁄
);

903 
	`˝u_to_À64s
(&
À_mbr
->
«nd_m™uÁ˘uª
);

904 
	`˝u_to_À64s
(&
À_mbr
->
«nd_id
);

905 
	`˝u_to_À64s
(&
À_mbr
->
ˇ∑côy
);

907 
	`˝u_to_À32s
(&
À_mbr
->
lun_amou¡
);

908 
	`˝u_to_À32s
(&
À_mbr
->
eblocks_ö_lun
);

909 
	`˝u_to_À32s
(&
À_mbr
->
∑ges_ö_eblock
);

910 
	`˝u_to_À32s
(&
À_mbr
->
«nd_∑ge_shi·
);

911 
	`˝u_to_À32s
(&
À_mbr
->
oob_size
);

912 
	`˝u_to_À32s
(&
À_mbr
->
logicb_shi·
);

913 
	`˝u_to_À32s
(&
À_mbr
->
∂™e_‹dî
);

914 
	`˝u_to_À32s
(&
À_mbr
->
cfg_nch™√l
);

915 
	`˝u_to_À32s
(&
À_mbr
->
cfg_¡hªad
);

916 
	`˝u_to_À32s
(&
À_mbr
->
cfg_∆un
);

918 
	`˝u_to_À32s
(&
À_mbr
->
öô_hŸ_sblk
);

919 
	`˝u_to_À32s
(&
À_mbr
->
öô_cﬁd_sblk
);

921 
	`˝u_to_À16s
(&
À_mbr
->
öãºu±_dñay
);

924 
	`˝u_to_À32s
(&
À_mbr
->
hi°‹y_îa£_cou¡
);

926 
	`˝u_to_À64s
(&
À_mbr
->
powî_cy˛e_cou¡
);

927 
	`˝u_to_À64s
(&
À_mbr
->
powî_⁄_£c⁄ds
);

928 
	`˝u_to_À64s
(&
À_mbr
->
ho°_wrôe_£˘‹s
);

929 
	`˝u_to_À64s
(&
À_mbr
->
tŸÆ_wrôe_£˘‹s
);

930 
	`˝u_to_À64s
(&
À_mbr
->
ho°_ªad_£˘‹s
);

932 
	`˝u_to_À32s
(&
À_mbr
->
Êash_drvmode
);

935 
	`˝u_to_À16s
(&
À_mbr
->
øid_°rùes
);

937 
i
 = 0; i <
	`ARRAY_SIZE
(
mbr
->
bad_phy_lun_m≠
); i++Ë
	`˝u_to_À64s
(&
À_mbr
->bad_phy_lun_map[i]);

938 
	`˝u_to_À32s
(&
À_mbr
->
max_∑ges_ö_eblock
);

939 
	`˝u_to_À32s
(&
À_mbr
->
u£r_logicb_shi·
);

941 
	`˝u_to_À64s
(&
À_mbr
->
„©uª_Êags
);

945 
	`˝u_to_À16s
(&
À_mbr
->
˛k
);

946 
	`˝u_to_À32s
(&
À_mbr
->
max_out°™dög_bios
);

949 
mbr_bbt
 = 
dev
->
¥iv©e_d©a
;

950 
	`as£π
(
NULL
 !
mbr_bbt
);

952 
hód
 = 
INDEP_HEAD
;

953 
	`INIT_LIST_HEAD
(&
ªq_hód
);

955 
blk
 = 0; blk < 
MPT_MBR_NBLK
; blk++) {

956 
µa
 = 
blk
 * 
dev
->
Êash
->
≈age
 + 
MPT_MBR_PAGEOFF
;

959 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

960 i‡(
	`ã°_bô
(
lun
, 
mbr_bbt
->
sb_bbt
[
blk
]))

963 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
, 
hód
, 0, 1);

964 i‡(
NULL
 =
ªq
)

965 
	`mÆloc_Áûed_exô
();

966 
	`mem£t
(
ªq
->
d©a
, 0x00, 
dev
->
c⁄fig
->
£˘‹_size
);

967 
	`mem˝y
(
ªq
->
d©a
, 
À_mbr
, (*le_mbr));

968 
ªq
->
mëad©a
[0] = 
MBR_WATERMARK
;

969 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

973 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

974 i‡(
dev
->
	`submô_ªque°
(
ªq
))

975 
	`submô_Áûed_exô
(
ªq
->
lun
);

978 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

979 
	`upd©e_cmdqueue
(
dev
, 
lun
);

981 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

982 i‡(
	`pﬁl_cmdqueue
(
dev
, 
lun
))

983 
	`pﬁl_Áûed_exô
(
lun
);

987 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

988 i‡(
	`check_ªq_°©us
(
ªq
))

989 
	`exôlog
("wrôêMBR check sètu†Áûed:Üun-%03d block-%03d\n", 
ªq
->
lun
,Ñeq->
block
);

992 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

993 
	`li°_dñ
(&
ªq
->
li°
);

994 
	`‰ì_ªque°
(
ªq
);

998 
	`‰ì
(
À_mbr
);

999 
	}
}

1001 
	$m±_wrôe_bbt
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
bbt
)

1003 
i
, 
lun
, 
blk
, 
µa
, 
∂™e
, 
hód
, 
mblk
;

1004 
sh™n⁄_ªque°
 *
lun_hód_ªq
, *
ªq
, *
tmp
;

1005 
li°_hód
 
ªq_hód
;

1006 
sh™n⁄_bbt
 *
mbr_bbt
;

1007 
__u16
 *
blkm≠
, 
off
;

1009 
mbr_bbt
 = 
dev
->
¥iv©e_d©a
;

1010 
	`as£π
(
NULL
 !
mbr_bbt
);

1012 
hód
 = 
INDEP_HEAD
;

1013 
	`INIT_LIST_HEAD
(&
ªq_hód
);

1016 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1017 
lun_hód_ªq
 = 
NULL
;

1019 i‡(
dev
->
¥iv©e_öt
)

1020 
	`¥öt
("Lun-%02d Phylun-%03d badblock:", 
lun
, 
	`log2phy_lun
(
dev
,Üun));

1022 
mblk
 = 0; mblk < 
MPT_MBR_NBLK
; mblk++) {

1023 i‡(
	`ã°_bô
(
lun
, 
mbr_bbt
->
sb_bbt
[
mblk
]))

1026 
µa
 = 
mblk
 * 
dev
->
Êash
->
≈age
 + 
MPT_BBT_PAGEOFF
;

1029 i‡(
NULL
 =
lun_hód_ªq
) {

1030 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
, 
hód
, 0, dev->
c⁄fig_bakup
->
∑ge_n£˘‹
);

1031 i‡(
NULL
 =
ªq
)

1032 
	`mÆloc_Áûed_exô
();

1033 
ªq
->
b‰ì
 = 0;

1034 i‡(
dev
->
bm_bbt
) {

1035 
	`mem£t
(
ªq
->
d©a
, 0x00, 
dev
->
c⁄fig_bakup
->
nd©a
);

1036 *((*)
ªq
->
d©a
Ë
BITMAP_BBT_MAGIC
;

1038 
	`mem£t
(
ªq
->
d©a
, 0xFF, 
dev
->
c⁄fig_bakup
->
nd©a
);

1039 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++)

1040 
ªq
->
mëad©a
[
i
] = 
MBR_WATERMARK
;

1042 
off
 = 0;

1043 
blkm≠
 = (
__u16
 *)
ªq
->
d©a
;

1044 
blk
 = 0; blk < 
MPT_MBR_NBLK
; blk++) {

1045 i‡(
	`ã°_bô
(
lun
, 
mbr_bbt
->
sb_bbt
[
blk
])) {

1046 i‡(
dev
->
bm_bbt
)

1047 
	`£t_bô
(
blk
, (*)
ªq
->
d©a
 + 1);

1049 
blkm≠
[
off
++] = 
	`˝u_to_À16
((
__u16
)
blk
);

1050 
dev
->
övÆid_blocks
++;

1052 i‡(
dev
->
¥iv©e_öt
)

1053 
	`¥öt
(" %d", 
blk
);

1056 
blk
 = 
MPT_MBR_NBLK
 / 
dev
->
c⁄fig_bakup
->
≈œ√
; blk < dev->
Êash
->
nblk
 / dev->config_bakup->nplane; blk++) {

1057 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
])) {

1058 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig_bakup
->
≈œ√
;Ölane++) {

1059 i‡(
dev
->
bm_bbt
)

1060 
	`£t_bô
(
blk
 * 
dev
->
c⁄fig_bakup
->
≈œ√
 + 
∂™e
, (*)
ªq
->
d©a
 + 1);

1062 
blkm≠
[
off
++] = 
	`˝u_to_À16
((
__u16
)(
blk
 * 
dev
->
c⁄fig_bakup
->
≈œ√
 + 
∂™e
));

1063 
dev
->
övÆid_blocks
++;

1065 i‡(
dev
->
¥iv©e_öt
)

1066 
	`¥öt
(" %d", 
blk
 * 
dev
->
c⁄fig_bakup
->
≈œ√
 + 
∂™e
);

1071 i‡(
dev
->
bm_bbt
) {

1072 
i
 = 0; i < 
dev
->
c⁄fig_bakup
->
nd©a
/8; i++)

1073 
	`˝u_to_À64s
((*)
ªq
->
d©a
 + 
i
);

1076 
lun_hód_ªq
 = 
ªq
;

1077 
	`li°_add_èû
(&
lun_hód_ªq
->
li°
, &
ªq_hód
);

1080 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

1081 i‡(
NULL
 =
ªq
)

1082 
	`mÆloc_Áûed_exô
();

1083 
ªq
->
b‰ì
 = 0;

1084 
ªq
->
n£˘‹
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

1085 
ªq
->
d©a
 = 
lun_hód_ªq
->data;

1086 
ªq
->
mëad©a
 = 
lun_hód_ªq
->metadata;

1087 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

1091 i‡(
dev
->
¥iv©e_öt
)

1092 
	`¥ötf
("\n");

1094 
ªq
->
b‰ì
 = 1;

1098 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1099 i‡(
dev
->
	`submô_ªque°
(
ªq
))

1100 
	`submô_Áûed_exô
(
ªq
->
lun
);

1103 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

1104 
	`upd©e_cmdqueue
(
dev
, 
lun
);

1106 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1107 i‡(
	`pﬁl_cmdqueue
(
dev
, 
lun
))

1108 
	`pﬁl_Áûed_exô
(
lun
);

1112 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1113 i‡(
	`check_ªq_°©us
(
ªq
))

1114 
	`exôlog
("wrôêMBR check sètu†Áûed:Üun-%03d block-%03d\n", 
ªq
->
lun
,Ñeq->
block
);

1117 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1118 
	`li°_dñ
(&
ªq
->
li°
);

1119 
	`‰ì_ªque°
(
ªq
);

1121 
	}
}

1135 
	$__ªadmbr
(
sh™n⁄_dev
 *
dev
, 
li°_hód
 *
ªq_hód
, li°_hód *
¨ªq_hód
)

1137 
i
, 
lun
, 
blk
, 
µa
, 
hód
;

1138 
sh™n⁄_mbr
 *
mbr
;

1139 
sh™n⁄_ªque°
 *
ªq
, *
¨ªq
, *
tmp
;

1141 
hód
 = 
INDEP_HEAD
;

1142 
	`INIT_LIST_HEAD
(
ªq_hód
);

1143 
	`INIT_LIST_HEAD
(
¨ªq_hód
);

1146 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1147 
blk
 = 0; blk < 
MPT_MBR_NBLK
; blk++) {

1148 
µa
 = 
blk
 * 
dev
->
Êash
->
≈age
 + 
MPT_MBR_PAGEOFF
;

1150 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

1151 i‡(
NULL
 =
ªq
)

1152 
	`mÆloc_Áûed_exô
();

1153 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

1155 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
, 
hód
, 0, 1);

1156 i‡(
NULL
 =
ªq
)

1157 
	`mÆloc_Áûed_exô
();

1158 
	`li°_add_èû
(&
ªq
->
li°
, 
ªq_hód
);

1161 
¨ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
, 
hód
, 0, 1);

1162 i‡(
NULL
 =
¨ªq
)

1163 
	`mÆloc_Áûed_exô
();

1164 
¨ªq
->
adv™˚_ªad
 = 1;

1165 
ªq
->
siblög_¨ªq
 = 
¨ªq
;

1166 
	`li°_add_èû
(&
¨ªq
->
li°
, 
¨ªq_hód
);

1171 
	`li°_f‹_óch_íåy
(
ªq
, 
ªq_hód
, 
li°
) {

1172 i‡(
dev
->
	`submô_ªque°
(
ªq
))

1173 
	`submô_Áûed_exô
(
ªq
->
lun
);

1176 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

1177 
	`upd©e_cmdqueue
(
dev
, 
lun
);

1179 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1180 i‡(
	`pﬁl_cmdqueue
(
dev
, 
lun
))

1181 
	`pﬁl_Áûed_exô
(
lun
);

1185 
	`li°_f‹_óch_íåy
(
ªq
, 
¨ªq_hód
, 
li°
) {

1186 i‡(
dev
->
	`submô_ªque°
(
ªq
))

1187 
	`submô_Áûed_exô
(
ªq
->
lun
);

1190 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

1191 
	`upd©e_cmdqueue
(
dev
, 
lun
);

1193 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1194 i‡(
	`pﬁl_cmdqueue
(
dev
, 
lun
))

1195 
	`pﬁl_Áûed_exô
(
lun
);

1199 
	`li°_f‹_óch_íåy
(
ªq
, 
ªq_hód
, 
li°
) {

1200 i‡(
sh_ˇchîód_cmd
 =
ªq
->
›code
) {

1201 
mbr
 = (
sh™n⁄_mbr
 *)
ªq
->
d©a
;

1203 i‡(
ªq
->
ecc
[0] < 251 && !
	`°rcmp
(
MBR_ID
, 
mbr
->
id
)) {

1206 
	`À64_to_˝us
(&
mbr
->
mbr_vîsi⁄
);

1207 
	`À64_to_˝us
(&
mbr
->
h¨dw¨e_vîsi⁄
);

1208 
	`À64_to_˝us
(&
mbr
->
so·w¨e_vîsi⁄
);

1209 
	`À64_to_˝us
(&
mbr
->
«nd_m™uÁ˘uª
);

1210 
	`À64_to_˝us
(&
mbr
->
«nd_id
);

1211 
	`À64_to_˝us
(&
mbr
->
ˇ∑côy
);

1213 
	`À32_to_˝us
(&
mbr
->
lun_amou¡
);

1214 
	`À32_to_˝us
(&
mbr
->
eblocks_ö_lun
);

1215 
	`À32_to_˝us
(&
mbr
->
∑ges_ö_eblock
);

1216 
	`À32_to_˝us
(&
mbr
->
«nd_∑ge_shi·
);

1217 
	`À32_to_˝us
(&
mbr
->
oob_size
);

1218 
	`À32_to_˝us
(&
mbr
->
logicb_shi·
);

1219 
	`À32_to_˝us
(&
mbr
->
∂™e_‹dî
);

1220 
	`À32_to_˝us
(&
mbr
->
cfg_nch™√l
);

1221 
	`À32_to_˝us
(&
mbr
->
cfg_¡hªad
);

1222 
	`À32_to_˝us
(&
mbr
->
cfg_∆un
);

1224 
	`À32_to_˝us
(&
mbr
->
öô_hŸ_sblk
);

1225 
	`À32_to_˝us
(&
mbr
->
öô_cﬁd_sblk
);

1227 
	`À16_to_˝us
(&
mbr
->
öãºu±_dñay
);

1230 
	`À32_to_˝us
(&
mbr
->
hi°‹y_îa£_cou¡
);

1232 
	`À64_to_˝us
(&
mbr
->
powî_cy˛e_cou¡
);

1233 
	`À64_to_˝us
(&
mbr
->
powî_⁄_£c⁄ds
);

1234 
	`À64_to_˝us
(&
mbr
->
ho°_wrôe_£˘‹s
);

1235 
	`À64_to_˝us
(&
mbr
->
tŸÆ_wrôe_£˘‹s
);

1236 
	`À64_to_˝us
(&
mbr
->
ho°_ªad_£˘‹s
);

1238 
	`À32_to_˝us
(&
mbr
->
Êash_drvmode
);

1241 
	`À16_to_˝us
(&
mbr
->
øid_°rùes
);

1243 
i
 = 0; i < 
	`ARRAY_SIZE
(
mbr
->
bad_phy_lun_m≠
); i++Ë
	`À64_to_˝us
(&mbr->bad_phy_lun_map[i]);

1244 
	`À32_to_˝us
(&
mbr
->
max_∑ges_ö_eblock
);

1245 
	`À32_to_˝us
(&
mbr
->
u£r_logicb_shi·
);

1247 
	`˝u_to_À64s
(&
mbr
->
„©uª_Êags
);

1251 
	`˝u_to_À16s
(&
mbr
->
˛k
);

1252 
	`˝u_to_À32s
(&
mbr
->
max_out°™dög_bios
);

1255 
	`mem˝y
(
dev
->
mbr
, mbr, (*mbr));

1256 
	`mem˝y
(
dev
->
öhîít_mbr
, 
mbr
, (*mbr));

1262 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, 
ªq_hód
, 
li°
) {

1263 
	`li°_dñ
(&
ªq
->
li°
);

1264 
	`‰ì_ªque°
(
ªq
);

1267 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, 
¨ªq_hód
, 
li°
) {

1268 
	`li°_dñ
(&
ªq
->
li°
);

1269 
	`‰ì_ªque°
(
ªq
);

1272 
	}
}

1274 
	$sh™n⁄_m±_ªadmbr
(
sh™n⁄_dev
 *
dev
, 
gë⁄ly
, 
íabÀ_¥öt
)

1276 
li°_hód
 
ªq_hód
, 
¨ªq_hód
;

1277 
sh™n⁄_bbt
 *
mbr_bbt
;

1278 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

1280 
mbr_bbt
 = (
sh™n⁄_bbt
 *)
dev
->
¥iv©e_d©a
;

1283 i‡(!
dev
->
mbr_by_4k
) {

1284 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = 9;

1285 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = 1;

1286 
dev
->
c⁄fig
->
ecc_mode
 = 
ECCMODE_ENABLE
;

1287 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

1288 
dev
->
c⁄fig
->
≈œ√
 = 1;

1289 i‡(
	`ª_öô_devi˚
(
dev
)) {

1290 
	`¥ötf
("Re-öô-devi˚ (WRITE-MBRËÁûed."
MPT_HELP
);

1291 
	`exô
(
EXIT_FAILURE
);

1294 i‡(!
	`__ªadmbr
(
dev
, &
ªq_hód
, &
¨ªq_hód
)) {

1295 
dev
->
öhîít_mbr_£˘‹_size
 = 512;

1296 
found_mbr
;

1301 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = dev->
c⁄fig_bakup
->sector_size_shift;

1302 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = dev->
c⁄fig_bakup
->sector_ncodeword;

1303 
dev
->
c⁄fig
->
ecc_mode
 = 
ECCMODE_ENABLE
;

1304 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

1305 
dev
->
c⁄fig
->
≈œ√
 = 1;

1306 i‡(
	`ª_öô_devi˚
(
dev
)) {

1307 
	`¥ötf
("Re-öô-devi˚ (WRITE-MBRËÁûed."
MPT_HELP
);

1308 
	`exô
(
EXIT_FAILURE
);

1311 i‡(!
	`__ªadmbr
(
dev
, &
ªq_hód
, &
¨ªq_hód
)) {

1312 
dev
->
öhîít_mbr_£˘‹_size
 = 4096;

1313 
found_mbr
;

1316 
	`¥ötf
("No MBR found. MaybeÇot format!\n");

1317  
ERR
;

1319 
found_mbr
:

1320 
	`as£π
(
dev
->
öhîít_mbr_£˘‹_size
 == 512 || dev->inherent_mbr_sector_size == 4096);

1321 i‡(
íabÀ_¥öt
)

1322 
	`m±_¥öt_mbr
(
dev
, dev->
mbr
);

1325 i‡(!
gë⁄ly
) {

1326 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1327 i‡(
NULL
 !
mbr_bbt
) {

1328 i‡(
	`ã°_bô
(
ªq
->
lun
, 
mbr_bbt
->
sb_bbt
[ªq->
block
]))

1332 i‡(
sh_ˇchîód_cmd
 =
ªq
->
›code
) {

1333 i‡((
ªq
->
ecc
[0] >251 || 
	`°rcmp
(
MBR_ID
, ((
sh™n⁄_mbr
 *)‘eq->
d©a
))->
id
)) &&

1334 (
ªq
->
siblög_¨ªq
->
ecc
[0] >251 || 
	`°rcmp
(
MBR_ID
, ((
sh™n⁄_mbr
 *)‘eq->siblög_¨ªq->
d©a
))->
id
))) {

1335 
dev
->
¥iv©e_öt
 = 1;

1336 
	`¥ötf
("### NOTE:Üun-%03dÖhylun-%03d block-%02dÜost MBR\n",

1337 
ªq
->
lun
, 
	`log2phy_lun
(
dev
,Ñeq->lun),Ñeq->
block
);

1343 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1344 
	`li°_dñ
(&
ªq
->
li°
);

1345 
	`‰ì_ªque°
(
ªq
);

1348 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
¨ªq_hód
, 
li°
) {

1349 
	`li°_dñ
(&
ªq
->
li°
);

1350 
	`‰ì_ªque°
(
ªq
);

1353 
	}
}

1366 
	$sh™n⁄_m±_ªadbbt
(
sh™n⁄_dev
 *
dev
, 
check_⁄ly
)

1368 
i
, 
lun
, 
blk
, 
µa
, 
hód
;

1369 
sh™n⁄_ªque°
 *
ªq
, *
¨ªq
, *
tmp
;

1370 
li°_hód
 
ªq_hód
, 
¨ªq_hód
;

1371 
__u16
 *
blkm≠
;

1372 
sh™n⁄_bbt
 *
mbr_bbt
;

1374 
mbr_bbt
 = (
sh™n⁄_bbt
 *)
dev
->
¥iv©e_d©a
;

1377 i‡(
	`sh™n⁄_m±_ªadmbr
(
dev
, 1, 0))

1378  
ERR
;

1381 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = dev->
mbr
->
logicb_shi·
;

1382 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = dev->
mbr
->
ecc_codew‹ds_ö_logicb
;

1383 
dev
->
c⁄fig
->
ecc_mode
 = 
ECCMODE_ENABLE
;

1384 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

1385 
dev
->
c⁄fig
->
≈œ√
 = 1;

1386 i‡(
	`ª_öô_devi˚
(
dev
)) {

1387 
	`¥ötf
("Re-öô-devi˚ (WRITE-MBRËÁûed."
MPT_HELP
);

1388 
	`exô
(
EXIT_FAILURE
);

1391 
hód
 = 
INDEP_HEAD
;

1392 
	`INIT_LIST_HEAD
(&
ªq_hód
);

1393 
	`INIT_LIST_HEAD
(&
¨ªq_hód
);

1396 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1397 
blk
 = 0; blk < 
MPT_MBR_NBLK
; blk++) {

1398 
µa
 = 
blk
 * 
dev
->
Êash
->
≈age
 + 
MPT_BBT_PAGEOFF
;

1400 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

1401 i‡(
NULL
 =
ªq
)

1402 
	`mÆloc_Áûed_exô
();

1403 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

1405 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
, 
hód
, 0,

1406 (
dev
->
c⁄fig
->
∑ge_n£˘‹
) > 8 ? 8 : dev->config->page_nsector);

1407 i‡(
NULL
 =
ªq
)

1408 
	`mÆloc_Áûed_exô
();

1409 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

1412 
¨ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
, 
hód
, 0,

1413 (
dev
->
c⁄fig
->
∑ge_n£˘‹
) > 8 ? 8 : dev->config->page_nsector);

1414 i‡(
NULL
 =
¨ªq
)

1415 
	`mÆloc_Áûed_exô
();

1416 
¨ªq
->
adv™˚_ªad
 = 1;

1417 
ªq
->
siblög_¨ªq
 = 
¨ªq
;

1418 
	`li°_add_èû
(&
¨ªq
->
li°
, &
¨ªq_hód
);

1423 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1424 i‡(
dev
->
	`submô_ªque°
(
ªq
))

1425 
	`submô_Áûed_exô
(
ªq
->
lun
);

1428 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

1429 
	`upd©e_cmdqueue
(
dev
, 
lun
);

1431 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1432 i‡(
	`pﬁl_cmdqueue
(
dev
, 
lun
))

1433 
	`pﬁl_Áûed_exô
(
lun
);

1437 
	`li°_f‹_óch_íåy
(
ªq
, &
¨ªq_hód
, 
li°
) {

1438 i‡(
dev
->
	`submô_ªque°
(
ªq
))

1439 
	`submô_Áûed_exô
(
ªq
->
lun
);

1442 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

1443 
	`upd©e_cmdqueue
(
dev
, 
lun
);

1445 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1446 i‡(
	`pﬁl_cmdqueue
(
dev
, 
lun
))

1447 
	`pﬁl_Áûed_exô
(
lun
);

1450 i‡(
check_⁄ly
)

1451 
check_⁄ly_bbt
;

1454 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1455 i‡(
NULL
 =
u£d_bbt
)

1456 
	`¥ötf
("lun-%03dÖhylun-%03d bad blocks:", 
lun
, 
	`log2phy_lun
(
dev
,Üun));

1458 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1459 i‡(
ªq
->
lun
 !=Üun)

1461 i‡(
sh_¥îód_cmd
 !
ªq
->
›code
)

1463 i‡(
	`check_ªq_°©us_sûít
(
ªq
))

1466 
tmp
 = 
	`li°_íåy
(
ªq
->
li°
.
√xt
, 
sh™n⁄_ªque°
,Üist);

1467 i‡(
tmp
->
mëad©a
[0] !
MBR_WATERMARK
)

1470 
i
 = 0; i < 
tmp
->
n£˘‹
; i++) {

1471 i‡(
tmp
->
ecc
[
i
] >= 251)

1474 i‡(
i
 =
tmp
->
n£˘‹
)

1478 
tmp
 =Åmp->
siblög_¨ªq
;

1479 i‡(
tmp
->
mëad©a
[0] !
MBR_WATERMARK
)

1482 
i
 = 0; i < 
tmp
->
n£˘‹
; i++) {

1483 i‡(
tmp
->
ecc
[
i
] >= 251)

1486 i‡(
i
 =
tmp
->
n£˘‹
)

1491 i‡(&
ªq
->
li°
 =&
ªq_hód
) {

1492 i‡(
NULL
 =
u£d_bbt
)

1493 
	`¥ötf
(" \033[0;1;31mlost BBT\033[0m\n");

1498 i‡(
	`˝u_to_À64
(*((*)
tmp
->
d©a
)Ë=
BITMAP_BBT_MAGIC
)

1499 
ªad_bm_bbt
;

1501 
blkm≠
 = (
__u16
 *)
tmp
->
d©a
;

1503 i‡(
NULL
 !
u£d_bbt
) {

1504 
i
 = 0; i < 
MAX_BADBLK_COUNT
 && 
	`À16_to_˝u
(
blkm≠
[i]) != 0xFFFF; i++) {

1505 i‡(
	`À16_to_˝u
(
blkm≠
[
i
]Ë>
dev
->
Êash
->
nblk
) {

1506 
	`¥ötf
("FATAL %s():Üun-%03d static badblk %dÜargerÅhanÖhyicaláddress!!!\n",

1507 
__func__
, 
lun
, 
	`À16_to_˝u
(
blkm≠
[
i
]));

1509 
	`£t_bô
(
lun
, 
u£d_bbt
->
sb_bbt
[
	`À16_to_˝u
(
blkm≠
[
i
])]);

1510 
	`£t_bô
(
lun
, 
dev
->
sb
[
	`À16_to_˝u
(
blkm≠
[
i
])/dev->
c⁄fig_bakup
->
≈œ√
].
sb_lunöfo
.
sb_bbt
);

1514 i‡(
i
 >
MAX_BADBLK_COUNT
)

1515 
	`exôlog
("Toÿm™y bad block†- %d, maybêsomêFATAL\n", 
i
);

1517 
i
 = 0; i < 
MAX_BADBLK_COUNT
 && 
	`À16_to_˝u
(
blkm≠
[i]) != 0xFFFF; i++) {

1518 
	`£t_bô
(
lun
, 
dev
->
sb
[
	`À16_to_˝u
(
blkm≠
[
i
])/dev->
c⁄fig_bakup
->
≈œ√
].
sb_lunöfo
.
sb_bbt
);

1519 
	`¥ötf
(" %d", 
	`À16_to_˝u
(
blkm≠
[
i
]));

1522 i‡(
i
 >
MAX_BADBLK_COUNT
)

1523 
	`¥ötf
(" \033[0;1;31mToÿm™y bad block†- %d, maybêsomêFATAL\033[0m", 
i
);

1525 i‡(
i
 * 100 / 
dev
->
Êash
->
nblk
 >= 5 )

1526 
	`¥ötf
(" [%d/%d \033[0;1;31m%.2f%%\033[0m]\n", 
i
, 
dev
->
Êash
->
nblk
, i * 100.0 / dev->flash->nblk);

1528 
	`¥ötf
(" [%d/%d \033[0;1;32m%.2f%%\033[0m]\n", 
i
, 
dev
->
Êash
->
nblk
, i * 100.0 / dev->flash->nblk);

1532 
ªad_bm_bbt
:

1533 
i
 = 0; i < 
dev
->
c⁄fig_bakup
->
nd©a
/8; i++)

1534 
	`˝u_to_À64s
((*)
tmp
->
d©a
 + 
i
);

1536 i‡(
NULL
 !
u£d_bbt
) {

1537 
blk
 = 0; blk < 
dev
->
Êash
->
nblk
; blk++) {

1538 i‡(
	`ã°_bô
(
blk
, (*)
tmp
->
d©a
 + 1)) {

1539 
	`£t_bô
(
lun
, 
u£d_bbt
->
sb_bbt
[
blk
]);

1540 
	`£t_bô
(
lun
, 
dev
->
sb
[
blk
/dev->
c⁄fig_bakup
->
≈œ√
].
sb_lunöfo
.
sb_bbt
);

1544 
lunbadblk
 = 0;

1546 
blk
 = 0; blk < 
dev
->
Êash
->
nblk
; blk++) {

1547 i‡(
	`ã°_bô
(
blk
, (*)
tmp
->
d©a
 + 1)) {

1548 
	`£t_bô
(
lun
, 
dev
->
sb
[
blk
/dev->
c⁄fig_bakup
->
≈œ√
].
sb_lunöfo
.
sb_bbt
);

1549 
lunbadblk
++;

1550 
	`¥ötf
(" %d", 
blk
);

1554 i‡((
lunbadblk
 - 
dev
->
èrgëlun
[
lun
].
blk_hﬁe_cou¡
Ë* 100 / dev->
Êash
->
nblk
 >= 5 )

1555 
	`¥ötf
(" [%d/%d \033[0;1;31m%.2f%%\033[0m]\n", 
i
, 
dev
->
Êash
->
nblk
, 
lunbadblk
 * 100.0 / dev->flash->nblk);

1557 
	`¥ötf
(" [%d/%d \033[0;1;32m%.2f%%\033[0m]\n", 
i
, 
dev
->
Êash
->
nblk
, 
lunbadblk
 * 100.0 / dev->flash->nblk);

1560 
‰ì_ªq_out
;

1563 
check_⁄ly_bbt
:

1564 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1565 
__u16
 *
pbad
 = (__u16 *)
ªq
->
d©a
;

1567 i‡(
sh_ˇchîód_cmd
 !
ªq
->
›code
)

1570 i‡(
NULL
 !
mbr_bbt
) {

1571 i‡(
	`ã°_bô
(
ªq
->
lun
, 
mbr_bbt
->
sb_bbt
[ªq->
block
]))

1575 
i
 = 0;

1576 i‡(
	`˝u_to_À64
(*((*)
ªq
->
d©a
)Ë=
BITMAP_BBT_MAGIC
 || 
	`À16_to_˝u
(
pbad
[
MAX_BADBLK_COUNT
]) == 0xFFFF) {

1577 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

1578 i‡(
ªq
->
ecc
[
i
] >= 251)

1584 i‡(
i
 !
ªq
->
n£˘‹
) {

1585 
i
 = 0;

1586 
pbad
 = (
__u16
 *)
ªq
->
siblög_¨ªq
->
d©a
;

1588 i‡(
	`˝u_to_À64
(*((*)
ªq
->
siblög_¨ªq
->
d©a
)Ë=
BITMAP_BBT_MAGIC
 || 
	`À16_to_˝u
(
pbad
[
MAX_BADBLK_COUNT
]) == 0xFFFF) {

1589 
i
 = 0; i < 
ªq
->
siblög_¨ªq
->
n£˘‹
; i++) {

1590 i‡(
ªq
->
siblög_¨ªq
->
ecc
[
i
] >= 251)

1595 i‡(
i
 !
ªq
->
siblög_¨ªq
->
n£˘‹
) {

1596 
dev
->
¥iv©e_öt
 = 1;

1597 
	`¥ötf
("### NOTE:Üun-%03dÖhylun-%03d block-%02dÜost BBT\n",

1598 
ªq
->
lun
, 
	`log2phy_lun
(
dev
,Ñeq->lun),Ñeq->
block
);

1604 
‰ì_ªq_out
:

1605 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1606 
	`li°_dñ
(&
ªq
->
li°
);

1607 
	`‰ì_ªque°
(
ªq
);

1610 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
¨ªq_hód
, 
li°
) {

1611 
	`li°_dñ
(&
ªq
->
li°
);

1612 
	`‰ì_ªque°
(
ªq
);

1615 
	}
}

1618 
	#HW_REG_SIZE
 16384

	)

1620 
live_c⁄ãxt
 *
	$Æloc_live_c⁄ãxt
(
sh™n⁄_dev
 *
dev
)

1622 
lun
;

1623 
live_c⁄ãxt
 *
c⁄ãxt
;

1625 
	`as£π
(
NULL
 !
dev
->
mbr
);

1627 
c⁄ãxt
 = 
	`zmÆloc
((*context));

1628 i‡(
NULL
 =
c⁄ãxt
)

1629 
out
;

1630 
c⁄ãxt
->
dev
 = dev;

1632 
c⁄ãxt
->
ªg
 = 
	`mÆloc
(
HW_REG_SIZE
);

1633 i‡(
NULL
 =
c⁄ãxt
->
ªg
)

1634 
‰ì_c⁄ãxt_out
;

1636 
c⁄ãxt
->
cmdq
 = 
	`zmÆloc
(
dev
->
c⁄fig
->
luns
 * (*context->cmdq));

1637 i‡(
NULL
 =
c⁄ãxt
->
cmdq
)

1638 
‰ì_ªg_out
;

1639 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1640 
c⁄ãxt
->
cmdq
[
lun
] = 
	`mÆloc
(
PAGE_SIZE
);

1641 i‡(
NULL
 =
c⁄ãxt
->
cmdq
[
lun
])

1642 
‰ì_cmdq_out
;

1645 
c⁄ãxt
->
cmpq
 = 
	`zmÆloc
(
dev
->
c⁄fig
->
luns
 * (*context->cmpq));

1646 i‡(
NULL
 =
c⁄ãxt
->
cmdq
)

1647 
‰ì_cmdq_out
;

1648 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1649 
c⁄ãxt
->
cmpq
[
lun
] = 
	`mÆloc
(
PAGE_SIZE
);

1650 i‡(
NULL
 =
c⁄ãxt
->
cmpq
[
lun
])

1651 
‰ì_cmpq_out
;

1653  
c⁄ãxt
;

1655 
‰ì_cmpq_out
:

1656 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1657 i‡(
NULL
 =
c⁄ãxt
->
cmpq
[
lun
])

1659 
	`‰ì
(
c⁄ãxt
->
cmpq
[
lun
]);

1661 
	`‰ì
(
c⁄ãxt
->
cmpq
);

1662 
‰ì_cmdq_out
:

1663 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1664 i‡(
NULL
 =
c⁄ãxt
->
cmdq
[
lun
])

1666 
	`‰ì
(
c⁄ãxt
->
cmdq
[
lun
]);

1668 
	`‰ì
(
c⁄ãxt
->
cmdq
);

1669 
‰ì_ªg_out
:

1670 
	`‰ì
(
c⁄ãxt
->
ªg
);

1671 
‰ì_c⁄ãxt_out
:

1672 
	`‰ì
(
c⁄ãxt
);

1673 
out
:

1674  
NULL
;

1675 
	}
}

1677 
	$‰ì_live_c⁄ãxt
(
live_c⁄ãxt
 *
c⁄ãxt
)

1679 
lun
;

1680 
sh™n⁄_dev
 *
dev
 = 
c⁄ãxt
->dev;

1682 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1683 i‡(
NULL
 =
c⁄ãxt
->
cmpq
[
lun
])

1685 
	`‰ì
(
c⁄ãxt
->
cmpq
[
lun
]);

1687 
	`‰ì
(
c⁄ãxt
->
cmpq
);

1689 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1690 i‡(
NULL
 =
c⁄ãxt
->
cmdq
[
lun
])

1692 
	`‰ì
(
c⁄ãxt
->
cmdq
[
lun
]);

1694 
	`‰ì
(
c⁄ãxt
->
cmdq
);

1696 
	`‰ì
(
c⁄ãxt
->
ªg
);

1697 
	`‰ì
(
c⁄ãxt
);

1698 
	}
}

1700 
	$ªc‹d_live_c⁄ãxt
(
live_c⁄ãxt
 *
c⁄ãxt
)

1702 
lun
;

1703 
sh™n⁄_dev
 *
dev
 = 
c⁄ãxt
->dev;

1705 i‡(
	`l£ek
(
dev
->
fd
, 0, 
SEEK_SET
) < 0)

1706 
	`≥º‹_exô
("%s(Ël£ek faûed", 
__func__
);

1708 i‡(
	`ªad
(
dev
->
fd
, 
c⁄ãxt
->
ªg
, 
HW_REG_SIZE
) != HW_REG_SIZE)

1709 
	`≥º‹_exô
("%s(Ëªad faûed", 
__func__
);

1711 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1712 
dev
->
	`ªad_mem
(dev, 
c⁄ãxt
->
cmdq
[
lun
], dev->lun[lun].
thªad
->
cmdmem
.
kî√l_addr
, 
PAGE_SIZE
);

1713 
dev
->
	`ªad_mem
(dev, 
c⁄ãxt
->
cmpq
[
lun
], dev->lun[lun].
thªad
->
cmdmem
.
kî√l_addr
 + 
PAGE_SIZE
, PAGE_SIZE);

1715 
	}
}

1718 
	$ßve_live_c⁄ãxt
(
live_c⁄ãxt
 *
c⁄ãxt
, 
FILE
 *
Â
)

1720 
i
, 
lun
;

1721 
sh™n⁄_dev
 *
dev
 = 
c⁄ãxt
->dev;

1723 
	`Ârötf
(
Â
, "==================================%†===================================\n", 
c⁄ãxt
->
id
);

1725 
	`Ârötf
(
Â
, "sysÑegisters:");

1726 
i
 = 0; i < (*
dev
->
hw_sysöfo
)/4; i++)

1727 
	`Ârötf
(
Â
, " %08X ", 
c⁄ãxt
->
ªg
[
dev
->
sy§eg_dwoff
 + 
i
]);

1728 
	`Ârötf
(
Â
, "\n");

1730 
	`Ârötf
(
Â
, "cfgÑegisters:");

1731 
i
 = 0; i < (*
dev
->
hw_c⁄fig
)/4; i++)

1732 
	`Ârötf
(
Â
, " %08X", 
c⁄ãxt
->
ªg
[
dev
->
cfgªg_dwoff
 + 
i
]);

1733 
	`Ârötf
(
Â
, "\n");

1735 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1736 
	`Ârötf
(
Â
, "cmdÜun-%03dÖhylun-%03d:", 
lun
, 
	`log2phy_lun
(
dev
,Üun));

1738 
i
 = 0; i < 
PAGE_SIZE
 / 8; i++) {

1739 i‡(0 =
i
 % 8)

1740 
	`Ârötf
(
Â
, "\n%04X:", 
i
 * 8);

1741 
	`Ârötf
(
Â
, " %016lX", 
c⁄ãxt
->
cmdq
[
lun
][
i
]);

1744 
	`Ârötf
(
Â
, "\n");

1747 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1748 
	`Ârötf
(
Â
, "cm∞lun-%03dÖhylun-%03d:", 
lun
, 
	`log2phy_lun
(
dev
,Üun));

1750 
i
 = 0; i < 
PAGE_SIZE
 / 8; i++) {

1751 i‡(0 =
i
 % 8)

1752 
	`Ârötf
(
Â
, "\n%04X:", 
i
 * 8);

1753 
	`Ârötf
(
Â
, " %016lX", 
c⁄ãxt
->
cmpq
[
lun
][
i
]);

1756 
	`Ârötf
(
Â
, "\n");

1758 
	}
}

1762 
	$sh™n⁄_m±_ªad_u£d_bbt
(
sh™n⁄_dev
 *
dev
, 
¥öt_⁄ly
, 
skù_dy«mic
)

1764 
lun
, 
blk
, 
∑ge
, 
µa
, 
badblk
;

1765 
sh™n⁄_ªque°
 *
¥îód_ªq
 = 
NULL
, *
ˇchªad_ªq
 = NULL;

1766 
¥e_˚¡
 = 0, 
now_˚¡
 = 0;

1768 i‡(!
¥öt_⁄ly
) {

1769 
u£d_bbt
 = 
	`zmÆloc
((*u£d_bbtË+ 
dev
->
Êash
->
nblk
 * (
MAX_LUN_NBYTE
));

1770 i‡(
NULL
 =
u£d_bbt
) {

1771 
	`¥ötf
("%s(ËmÆlo¯bbàÁûed\n", 
__func__
);

1772 
	`exô
(
EXIT_FAILURE
);

1777 i‡(
	`sh™n⁄_m±_ªadbbt
(
dev
, 0))

1778  
ERR
;

1780 i‡(
skù_dy«mic
)

1784 
lun
 = 0;

1785 i‡(!
¥öt_⁄ly
)

1786 
	`¥öt
("Ród BBT...%%%02d", 
now_˚¡
);

1788 
√xt_lun
:

1789 i‡(
	`ã°_bô
(
lun
, 
dev
->
lun_bôm≠
))

1790 
¥ï¨e_√xt_lun
;

1792 i‡(
¥öt_⁄ly
)

1793 
	`¥ötf
("dy«mi¯bad block†lun-%03dÖhylun-%03d:", 
lun
, 
	`log2phy_lun
(
dev
,Üun));

1795 
∑ge
 = 
MPT_DBBT_PAGEOFF
;Öagê< 
dev
->
Êash
->
≈age
;Öage++) {

1796 
blk
 = 0; blk < 
MPT_MBR_NBLK
; blk++) {

1797 
µa
 = 
blk
 * 
dev
->
Êash
->
≈age
 + 
∑ge
;

1800 i‡(
NULL
 !
¥îód_ªq
)

1801 
	`‰ì_ªque°
(
¥îód_ªq
);

1802 i‡(
NULL
 !
ˇchªad_ªq
)

1803 
	`‰ì_ªque°
(
ˇchªad_ªq
);

1806 
¥îód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
, 
INDEP_HEAD
, 0, 0);

1807 i‡(
NULL
 =
¥îód_ªq
)

1808 
	`mÆloc_Áûed_exô
();

1809 i‡(
dev
->
	`submô_ªque°
(
¥îód_ªq
))

1810 
	`submô_Áûed_exô
(
¥îód_ªq
->
lun
);

1813 
ˇchªad_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
, 
INDEP_HEAD
, 0, 1);

1814 i‡(
NULL
 =
ˇchªad_ªq
)

1815 
	`mÆloc_Áûed_exô
();

1816 i‡(
dev
->
	`submô_ªque°
(
ˇchªad_ªq
))

1817 
	`submô_Áûed_exô
(
ˇchªad_ªq
->
lun
);

1820 
	`upd©e_cmdqueue
(
dev
, 
lun
);

1821 i‡(
	`pﬁl_cmdqueue
(
dev
, 
lun
))

1822 
	`pﬁl_Áûed_exô
(
lun
);

1825 i‡(0xFE =
¥îód_ªq
->
°©us
) {

1826 i‡((
MPT_MBR_NBLK
 - 1Ë=
blk
)

1827 
íd_this_lun
;

1831 i‡(
	`check_ªq_°©us_sûít
(
¥îód_ªq
Ë|| 
ˇchªad_ªq
->
ecc
[0] > 251)

1835 i‡(251 =
ˇchªad_ªq
->
ecc
[0])

1836 
íd_this_lun
;

1838 i‡(
ˇchªad_ªq
->
mëad©a
[0] !
MBR_WATERMARK
)

1841 
badblk
 = 
	`À16_to_˝u
(((
__u16
 *)
ˇchªad_ªq
->
d©a
)[0]);

1842 i‡(
badblk
 > 
dev
->
Êash
->
nblk
) {

1843 
	`¥ötf
("FATAL %s():Üun-%03d block-%dÖage-%03d dynamic badblk %dÜargerÅhanÖhyicaláddress!!!\n",

1844 
__func__
, 
lun
, 
blk
, 
∑ge
, 
badblk
);

1847 i‡(
¥öt_⁄ly
)

1848 
	`¥ötf
(" %d", 
badblk
);

1850 
	`£t_bô
(
lun
, 
u£d_bbt
->
sb_bbt
[
badblk
]);

1855 
íd_this_lun
:

1856 i‡(
¥öt_⁄ly
)

1857 
	`¥ötf
("\n");

1858 
¥ï¨e_√xt_lun
:

1859 
lun
++;

1860 i‡(!
¥öt_⁄ly
) {

1861 
now_˚¡
 = 100 * 
lun
 / 
dev
->
c⁄fig
->
luns
;

1862 i‡(
now_˚¡
 > 
¥e_˚¡
) {

1863 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

1864 
¥e_˚¡
 = 
now_˚¡
;

1867 i‡(
lun
 < 
dev
->
c⁄fig
->
luns
)

1868 
√xt_lun
;

1870 i‡(!
¥öt_⁄ly
)

1871 
	`¥ötf
("\n");

1873 
	`‰ì_ªque°
(
¥îód_ªq
);

1874 
	`‰ì_ªque°
(
ˇchªad_ªq
);

1877 
	}
}

1879 
	$sh™n⁄_m±_ju°_sˇn
(
sh™n⁄_dev
 *
dev
)

1881 
lun
, 
blk
;

1882 
sh™n⁄_bbt
 *
bbt
;

1884 
bbt
 = 
	`zmÆloc
((*bbtË+ 
dev
->
Êash
->
nblk
 * 
MAX_LUN_NBYTE
);

1885 i‡(
NULL
 =
bbt
)

1886 
	`mÆloc_Áûed_exô
();

1887 
bbt
->
nblock
 = 
dev
->
Êash
->
nblk
;

1888 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = 12;

1889 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = 1;

1890 
dev
->
c⁄fig
->
ecc_mode
 = 
ECCMODE_DISABLE
;

1891 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

1892 
dev
->
c⁄fig
->
≈œ√
 = 1;

1893 i‡(
	`ª_öô_devi˚
(
dev
)) {

1894 
	`¥ötf
("Re-öô-devi˚ (SCANËÁûed."
MPT_HELP
);

1895 
	`exô
(
EXIT_FAILURE
);

1897 
dev
->
	`˛ór_queue
(dev);

1899 i‡(
	`Êagbyã_sˇn
(
dev
, 
bbt
)) {

1900 
	`¥ötf
("%s(ËFœgbyã sˇ¿Áûed."
MPT_HELP
, 
__func__
);

1901 
	`exô
(
EXIT_FAILURE
);

1904 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1905 
	`¥ötf
("lun-%03dÖhylun-%03d bad blocks:", 
lun
, 
	`log2phy_lun
(
dev
,Üun));

1906 
	`f‹_dev_óch_block
(
dev
, 
blk
) {

1907 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

1908 
	`¥ötf
(" %d", 
blk
);

1910 
	`¥ötf
("\n");

1913 
	`‰ì
(
bbt
);

1915 
	}
}

1918 
	$sh™n⁄_m±_ußge
()

1920 
	`¥ötf
("Usage:\n");

1921 
	`¥ötf
("\tmpt [option]\n\n");

1923 
	`¥ötf
("Option:\n");

1924 
	`¥ötf
("\t-n, --new\n"

1926 
	`¥ötf
("\t-u, --used\n"

1928 
	`¥ötf
("\t-f, --force\n"

1930 
	`¥ötf
("\t-o, --scan-whole=loops\n"

1932 
	`¥ötf
("\t-t, --absent-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

1934 
	`¥ötf
("\t-T, --present-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

1936 
	`¥ötf
("\t-r, --raid-stripes=raid_group_number\n"

1938 
	`¥ötf
("\t-F, --logfile=FILE\n"

1940 
	`¥ötf
("\t-V, --mbr-version\n"

1941 "\t\tMBR vîsi⁄,ÅhêdeÁu… i†0x%X\n", 
CURRENT_MBR_VERSION
);

1942 
	`¥ötf
("\t-W, --manual-writembr=mbrfile,bbtfile\n"

1944 
	`¥ötf
("\t-i, --sorting-ecc-limit=N or Np\n"

1946 
	`¥ötf
("\t-c, --capacity=CAPACITY\n"

1950 
	`¥ötf
("\t-k, --mbr-4k\n"

1952 
	`¥ötf
("\t-s, --scan\n"

1954 
	`¥ötf
("\t-M, --mbr\n"

1956 
	`¥ötf
("\t-B[all], --bbt\n"

1958 
	`¥ötf
("\t-z, --user-sector=n\n"

1960 
	`¥ötf
("\t-D, --debug=[R/E/M/B]\n"

1966 
	`¥ötf
("\t-A, --atomic-write\n"

1968 
	`¥ötf
("\t-P, --prioritize-write\n"

1970 
	`¥ötf
("\t-e, --performace-adjust=interrupt_delay,dma_max_read_limit,max_outstanding_bios\n"

1972 
	`¥ötf
("\t-R, --record\n"

1974 
	`¥ötf
("\t-E, --disable-ecc-histogram\n"

1976 
	`¥ötf
("\t-X, --check-bad-luns=N\n"

1978 
	`¥ötf
("\t-y, --temperature-threshold=controller,flash,board\n"

1980 
	`¥ötf
("\t-h, --help\n"

1983 
	`¥ötf
("Examples for option '-t'ánd '-T':\n");

1984 
	`¥ötf
("\t-tÜoglun:3-6,7,9\n"

1986 
	`¥ötf
("\t-tÖhylun:3,5-7,12\n"

1988 
	`¥ötf
("\t-TÜoglun:2,7,10-12\n"

1990 
	`¥ötf
("\tNote:Öut -t behind -T if you useÅhem simultaneously\n");

1991 
	}
}

1993 
	#logout
(
x
...Ëdÿ{ 
	`¥ötf
(x); i‡(
NULL
 !
logÂ
Ë
	`Ârötf
÷ogÂ, x); } 0)

	)

1995 
	$sh™n⁄_m±
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

1997 
›ti⁄
 
l⁄g›ts
 [] = {

1998 {"√w", 
no_¨gumít
, 
NULL
, 'n'},

1999 {"u£d", 
no_¨gumít
, 
NULL
, 'u'},

2000 {"f‹˚", 
no_¨gumít
, 
NULL
, 'f'},

2001 {"ab£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 't'},

2002 {"¥e£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 'T'},

2003 #i‚de‡
__RELEASE__


2004 {"sˇn", 
no_¨gumít
, 
NULL
, 's'},

2005 {"mbr", 
no_¨gumít
, 
NULL
, 'M'},

2006 {"bbt", 
›ti⁄Æ_¨gumít
, 
NULL
, 'B'},

2007 {"u£r-£˘‹", 
ªquúed_¨gumít
, 
NULL
, 'z'},

2008 {"debug", 
ªquúed_¨gumít
, 
NULL
, 'D'},

2010 {"øid-°rùes", 
ªquúed_¨gumít
, 
NULL
, 'r'},

2011 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

2012 {"sˇn-whﬁe", 
ªquúed_¨gumít
, 
NULL
, 'o'},

2013 {"logfûe", 
ªquúed_¨gumít
, 
NULL
, 'F'},

2014 {"mbr-vîsi⁄", 
ªquúed_¨gumít
, 
NULL
, 'V'},

2015 {"m™uÆ-wrôembr", 
ªquúed_¨gumít
, 
NULL
, 'W'},

2016 {"s‹tög-ecc-limô", 
ªquúed_¨gumít
, 
NULL
, 'i'},

2017 {"ˇ∑côy", 
ªquúed_¨gumít
, 
NULL
, 'c'},

2018 {"bôm≠-bbt", 
no_¨gumít
, 
NULL
, 'b'},

2019 {"mbr-4k", 
no_¨gumít
, 
NULL
, 'k'},

2020 {"©omic-wrôe", 
no_¨gumít
, 
NULL
, 'A'},

2021 {"¥i‹ôize-wrôe", 
no_¨gumít
, 
NULL
, 'P'},

2022 {"≥rf‹ma˚-adju°", 
ªquúed_¨gumít
, 
NULL
, 'e'},

2023 {"ªc‹d", 
ªquúed_¨gumít
, 
NULL
, 'R'},

2024 {"nŸhög", 
no_¨gumít
, 
NULL
, 'G'},

2025 {"dißbÀ-ecc-hi°ogøm", 
no_¨gumít
, 
NULL
, 'E'},

2026 {"check-bad-luns", 
ªquúed_¨gumít
, 
NULL
, 'X'},

2027 {"ãm≥øtuª-thªshﬁd", 
ªquúed_¨gumít
, 
NULL
, 'y'},

2028 {"s‹tög-¥efix-°rög", 
ªquúed_¨gumít
, 
NULL
, 'S'},

2031 
i
, 
j
, 
›t
, 
blk
, 
lun
, 
bbt_size
;

2032 
√w
, 
u£d
, 
f‹˚
;

2033 
sh™n⁄_bbt
 *
bbt
, *
mbr_bbt
;

2034 
live_c⁄ãxt
 *
mbr_c⁄ãxt
, *
bbt_c⁄ãxt
;

2035 
debug_mbrblk_bbt
, 
debug_ítúeblk_bbt
, 
debug_mbr_öfo
, 
debug_bbt_öfo
;

2036 
lun_nbadblk
[512];

2037 
sˇn_whﬁe
 = 0;

2039 
FILE
 *
logÂ
 = 
NULL
;

2041 
wm_Êag
 = 0;

2042 
FILE
 *
wm_mÂ
 = 
NULL
, *
wm_bÂ
 = NULL;

2043 *
p
, *
íd±r
;

2045 
öhîít_lun_bôm≠
[32];

2046 
u32
 
£ns‹12
, 
£ns‹13
, 
£ns‹14
;

2049 i‡(
ECCMODE_DISABLE
 =
dev
->
c⁄fig
->
ecc_mode
) {

2050 
	`¥ötf
("BUG: ECC should beÉnable with value %d(with scambler) or %d(bypass scambler). PleaseÑe-config!\n",

2051 
ECCMODE_ENABLE
, 
ECCMODE_BYPASS_SCRAMBLER_ONLY
);

2052  
ERR
;

2055 i‡((*
dev
->
mbr
Ë> 
MPT_MBR_SIZE
) {

2056 
	`¥ötf
("BUG: MBR sizê%ldByã i†œrgîÅh™ %dByã,Åhi†i†övÆid!\n", (*
dev
->
mbr
), 
MPT_MBR_SIZE
);

2057  
ERR
;

2060 i‡(12 !
dev
->
c⁄fig
->
£˘‹_size_shi·
) {

2061 
	`¥ötf
("ERR: mpt should use sector_size 4096\n");

2062  
ERR
;

2066 
√w
 = 0;

2067 
u£d
 = 0;

2068 
f‹˚
 = 0;

2069 
dev
->
group_øid_num
 = 1;

2071 
debug_mbrblk_bbt
 = 0;

2072 
debug_ítúeblk_bbt
 = 0;

2073 
debug_mbr_öfo
 = 0;

2074 
debug_bbt_öfo
 = 0;

2076 
dev
->
mbr_vîsi⁄
 = 
CURRENT_MBR_VERSION
;

2077 
dev
->
s‹tög_ecc_limô
 = (dev->
tmode
/2 < 6) ? 6 : dev->tmode/2;

2078 
dev
->
m±_£t_ˇ∑côy
 = 0;

2079 
dev
->
bm_bbt
 = 0;

2080 
dev
->
mbr_by_4k
 = 0;

2081 
dev
->
¥i‹ôize_wrôe
 = 0;

2082 
dev
->
©omic_wrôe
 = 0;

2084 
dev
->
ªc‹dÂ
 = 
NULL
;

2085 
dev
->
bad_blocks
 = 0;

2086 
dev
->
bb_cou¡
 = 
NULL
;

2087 
dev
->
sˇn_lo›s
 = 1;

2088 
dev
->
¥öt_bu∫ö_ecc_hi°ogøm
 = 1;

2090 
dev
->
max_c⁄åﬁÀr_ãmp
 = 0.0;

2091 
dev
->
max_Êash_ãmp
 = 0.0;

2092 
dev
->
max_bﬂrd_ãmp
 = 0.0;

2094 
dev
->
˘æ_ãmp_thªshﬁd
 = 0;

2095 
dev
->
Êash_ãmp_thªshﬁd
 = 0;

2096 
dev
->
bﬂrd_ãmp_thªshﬁd
 = 0;

2098 
dev
->
check_bad_luns
 = 65536;

2099 
	`mem£t
(
dev
->
s‹tög_¥öt_°rög
, 0x00, (dev->sorting_print_string));

2102 
i
 = 0; i < 
¨gc
; i++) {

2103 i‡(!
	`°∫cmp
(
¨gv
[
i
], "-t", 2) || !strncmp(argv[i], "--absent-luns", 13))

2104 
	`¥e£¡_ab£¡_luns
(
dev
, *(
¨gv
[
i
]+2) ?árgv[i]+2 :árgv[i+1], 1);

2106 i‡(!
	`°∫cmp
(
¨gv
[
i
], "-T", 2) || !strncmp(argv[i], "--present-luns", 14))

2107 
	`¥e£¡_ab£¡_luns
(
dev
, *(
¨gv
[
i
]+2) ?árgv[i]+2 :árgv[i+1], 0);

2110 
	`mem˝y
(
dev
->
ab£¡_lun_bôm≠
, dev->
lun_bôm≠
, (dev->absent_lun_bitmap));

2111 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

2112 
dev
->
vÆid_luns
++;

2113 
dev
->
¥e£¡_luns
 = dev->
vÆid_luns
;

2114 
dev
->
ab£¡_luns
 = dev->
c⁄fig
->
luns
 - dev->
vÆid_luns
;

2116 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "nufsMB::z:D:F:ht:T:r:o:V:W:i:c:bkAPe:R:EX:y:GS:", 
l⁄g›ts
, 
NULL
)) != -1) {

2117 
›t
) {

2119 
√w
 = 1;

2123 
u£d
 = 1;

2127 
f‹˚
 = 1;

2130  
	`sh™n⁄_m±_ju°_sˇn
(
dev
);

2133  
	`sh™n⁄_m±_ªadmbr
(
dev
, 0, 1);

2136  
	`sh™n⁄_m±_ªad_u£d_bbt
(
dev
, 1, 
›èrg
 ? 0 : 1);

2139 
dev
->
c⁄fig
->
u£r_£˘‹_size_shi·
 = dev->
c⁄fig_bakup
->u£r_£˘‹_size_shi· = 
	`°πoul
(
›èrg
, 
NULL
, 10);

2140 i‡(
dev
->
c⁄fig
->
u£r_£˘‹_size_shi·
 > dev->c⁄fig->
£˘‹_size_shi·
) {

2141 
	`¥ötf
("ERR: user_sector_size > sector_size\n");

2142  
ERR
;

2147 
i
 = 0; i < 
	`°æí
(
›èrg
); i++) {

2148 
›èrg
[
i
]) {

2150 
debug_mbrblk_bbt
 = 1;

2153 
debug_ítúeblk_bbt
 = 1;

2156 
debug_mbr_öfo
 = 1;

2159 
debug_bbt_öfo
 = 1;

2162 
	`sh™n⁄_m±_ußge
();

2168 
sˇn_whﬁe
 = 1;

2169 
dev
->
sˇn_lo›s
 = 
	`©oi
(
›èrg
);

2172 
dev
->
m±_£t_ˇ∑côy
 = 
	`°πoul
(
›èrg
, &
íd±r
, 10);

2173 i‡('m' =*
íd±r
 || 'M' == *endptr) {

2174 
dev
->
m±_£t_ˇ∑côy
 *= 1000000ul;

2175 } i‡('g' =*
íd±r
 || 'G' == *endptr) {

2176 
dev
->
m±_£t_ˇ∑côy
 *= 1000000000ul;

2178 
	`¥ötf
("capacity should specify unit,É.g. mb MB gbánd GB\n");

2179 
	`exô
(
EXIT_FAILURE
);

2181 i‡(!
dev
->
m±_£t_ˇ∑côy
) {

2182 
	`¥ötf
("ERROR input capacity = 0\n");

2183 
	`exô
(
EXIT_FAILURE
);

2187 
	`sh™n⁄_m±_ußge
();

2197 
dev
->
group_øid_num
 = 
	`©oi
(
›èrg
);

2198 i‡(
dev
->
group_øid_num
 <= 0 ||

2199 
dev
->
group_øid_num
 > dev->
c⁄fig_bakup
->
luns
 / 2 ||

2200 
dev
->
c⁄fig_bakup
->
luns
 % dev->
group_øid_num
) {

2201 
	`¥ötf
("Invalid conjunction of: group_raid_num %dánd config-luns %d\n",

2202 
dev
->
group_øid_num
, dev->
c⁄fig_bakup
->
luns
);

2203 
	`exô
(
EXIT_FAILURE
);

2207 
logÂ
 = 
	`°∫cmp
(
›èrg
, "+", 1Ë? 
	`f›í
(optarg, "w") : fopen(optarg + 1, "a");

2208 i‡(
NULL
 =
logÂ
) {

2209 
	`≥º‹
("mpt openÜogfileÉrror:");

2210 
	`exô
(
EXIT_FAILURE
);

2212 
time_t
 
â
;

2213 
â
 = 
	`time
(
NULL
);

2214 
	`Ârötf
(
logÂ
, "[MPT LOG BEG %s] --> %s", 
dev
->
«me
, 
	`˘ime
(&
â
));

2218 
dev
->
mbr_vîsi⁄
 = 
	`°πoul
(
›èrg
, 
NULL
, 0x10);

2221 
íd±r
 = 
	`°rchr
(
›èrg
, ',');

2222 i‡(
NULL
 =
íd±r
) {

2223 
	`¥ötf
("Input valid manual-writembrÖara: mbrfile,bbtfile\n");

2224 
	`exô
(
EXIT_FAILURE
);

2226 *
íd±r
 = '\0';

2228 i‡((
wm_mÂ
 = 
	`f›í
(
›èrg
, "r")Ë=
NULL
) {

2229 
	`¥ötf
("O≥¿mb∏ûêÁû: %s\n", 
›èrg
);

2230 
	`exô
(
EXIT_FAILURE
);

2233 i‡((
wm_bÂ
 = 
	`f›í
(
íd±r
+1, "r")Ë=
NULL
) {

2234 
	`¥ötf
("O≥¿bbàfûêÁû: %s\n", 
íd±r
+1);

2235 
	`exô
(
EXIT_FAILURE
);

2238 
f‹˚
 = 1;

2239 
wm_Êag
 = 1;

2242 
dev
->
s‹tög_ecc_limô
 = 
	`°πﬁ
(
›èrg
, &
íd±r
, 10);

2243 i‡(*
íd±r
 == 'p')

2244 
dev
->
s‹tög_ecc_limô
 = dev->
tmode
 * dev->sorting_ecc_limit / 100;

2245 i‡(
dev
->
s‹tög_ecc_limô
 =0 || dev->s‹tög_ecc_limô >dev->
tmode
) {

2246 
	`¥ötf
("Option -i, --sorting-ecc-limit should between (0, %d), but input is %d\n",

2247 
dev
->
tmode
, dev->
s‹tög_ecc_limô
);

2248 
	`exô
(
EXIT_FAILURE
);

2252 
dev
->
bm_bbt
 = 0;

2255 
dev
->
mbr_by_4k
 = 1;

2258 
dev
->
©omic_wrôe
 = 1;

2261 
dev
->
¥i‹ôize_wrôe
 = 1;

2264 
p
 = 
›èrg
;

2265 
dev
->
öãºu±_dñay
 = 
	`°πﬁ
(
p
, &
íd±r
, 10);

2266 i‡(*
íd±r
 != ',') {

2267 
	`¥ötf
("1: --≥rf‹ma˚-adju°=öãºu±_dñay,dma_max_ªad_limô,max_out°™dög_bios. Buàyou∏öpuài†%s\n", 
›èrg
);

2268 
	`exô
(
EXIT_FAILURE
);

2271 
p
 = 
íd±r
 + 1;

2272 
dev
->
dma_max_ªad_limô
 = 
	`°πﬁ
(
p
, &
íd±r
, 10);

2273 i‡(*
íd±r
 != ',') {

2274 
	`¥ötf
("2: --≥rf‹ma˚-adju°=öãºu±_dñay,dma_max_ªad_limô,max_out°™dög_bios. Buàyou∏öpuài†%s\n", 
›èrg
);

2275 
	`exô
(
EXIT_FAILURE
);

2278 
p
 = 
íd±r
 + 1;

2279 i‡(!*
p
) {

2280 
	`¥ötf
("3: --≥rf‹ma˚-adju°=öãºu±_dñay,dma_max_ªad_limô,max_out°™dög_bios. Buàyou∏öpuài†%s\n", 
›èrg
);

2281 
	`exô
(
EXIT_FAILURE
);

2283 
dev
->
max_out°™dög_bios
 = 
	`°πﬁ
(
p
, &
íd±r
, 10);

2284 i‡(*
íd±r
) {

2285 
	`¥ötf
("4: --≥rf‹ma˚-adju°=öãºu±_dñay,dma_max_ªad_limô,max_out°™dög_bios. Buàyou∏öpuài†%s\n", 
›èrg
);

2286 
	`exô
(
EXIT_FAILURE
);

2292 
dev
->
ªc‹dÂ
 = 
	`f›í
(
›èrg
, "w");

2293 i‡(
NULL
 =
dev
->
ªc‹dÂ
) {

2294 
	`¥ötf
("CreateÑecord file fail\n");

2295 
	`exô
(
EXIT_FAILURE
);

2298 
dev
->
¥öt_bu∫ö_ecc_hi°ogøm
 = 0;

2301 
dev
->
check_bad_luns
 = 
	`©oi
(
›èrg
);

2304 
p
 = 
›èrg
;

2305 
dev
->
˘æ_ãmp_thªshﬁd
 = 
	`°πﬁ
(
p
, &
íd±r
, 10);

2306 i‡(*
íd±r
 != ',') {

2307 
	`¥ötf
("1,Åemperature_limit format: controller_temp,flash_temp,board_temp\n");

2308 
	`exô
(
EXIT_FAILURE
);

2310 i‡(
dev
->
˘æ_ãmp_thªshﬁd
 && (dev->ctrl_temp_threshold < 70 || dev->ctrl_temp_threshold > 100)) {

2311 
	`¥ötf
("controllerÅemperatureÅhreshold should between 70ánd 100\n");

2312 
	`exô
(
EXIT_FAILURE
);

2315 
p
 = 
íd±r
 + 1;

2316 
dev
->
Êash_ãmp_thªshﬁd
 = 
	`°πﬁ
(
p
, &
íd±r
, 10);

2317 i‡(*
íd±r
 != ',') {

2318 
	`¥ötf
("2,Åemperature_limit format: controller_temp,flash_temp,board_temp\n");

2319 
	`exô
(
EXIT_FAILURE
);

2321 i‡(
dev
->
Êash_ãmp_thªshﬁd
 && (dev->flash_temp_threshold < 60 || dev->flash_temp_threshold > 100)) {

2322 
	`¥ötf
("flashÅemperatureÅhreshold should between 60ánd 100\n");

2323 
	`exô
(
EXIT_FAILURE
);

2326 
p
 = 
íd±r
 + 1;

2327 i‡(!*
p
) {

2328 
	`¥ötf
("3,Åemperature_limit format: controller_temp,flash_temp,board_temp\n");

2329 
	`exô
(
EXIT_FAILURE
);

2331 
dev
->
bﬂrd_ãmp_thªshﬁd
 = 
	`°πﬁ
(
p
, &
íd±r
, 10);

2332 i‡(
dev
->
bﬂrd_ãmp_thªshﬁd
 && (dev->board_temp_threshold < 60 || dev->board_temp_threshold > 100)) {

2333 
	`¥ötf
("boardÅemperatureÅhreshold should between 60ánd 100\n");

2334 
	`exô
(
EXIT_FAILURE
);

2339 
dev
->
s‹tög_¥öt_°rög
[0] = ' ';

2340 
	`°r˝y
(
dev
->
s‹tög_¥öt_°rög
+1, 
›èrg
);

2345 
	`sh™n⁄_m±_ußge
();

2346  
ERR
;

2350 
£ns‹12
 = 
dev
->
	`i‹ód32
(dev, 0x12);

2351 
£ns‹13
 = 
dev
->
	`i‹ód32
(dev, 0x13);

2352 
£ns‹14
 = 
dev
->
	`i‹ód32
(dev, 0x14);

2353 i‡(
dev
->
Êash_ãmp_thªshﬁd
) {

2354 
£ns‹12
 = (£ns‹12 & ~0xFFFFË| 
dev
->
Êash_ãmp_thªshﬁd
 | (dev->flash_temp_threshold << 8);

2355 
£ns‹13
 = (£ns‹13 & ~0xFFFFË| (
dev
->
Êash_ãmp_thªshﬁd
 + 10) | ((dev->flash_temp_threshold + 10) << 8);

2357 i‡(
dev
->
bﬂrd_ãmp_thªshﬁd
) {

2358 
£ns‹12
 = (£ns‹12 & ~0xFF0000Ë| (
dev
->
bﬂrd_ãmp_thªshﬁd
 << 16);

2359 
£ns‹13
 = (£ns‹13 & ~0xFF0000Ë| ((
dev
->
bﬂrd_ãmp_thªshﬁd
 + 10)<< 16);

2361 i‡(
dev
->
˘æ_ãmp_thªshﬁd
) {

2362 
£ns‹14
 = (((
dev
->
˘æ_ãmp_thªshﬁd
 + 273) * 1024 * 1000 / 503975) & 0x3FF) | \

2363 ((((
dev
->
˘æ_ãmp_thªshﬁd
 + 7 + 273) * 1024 * 1000 / 503975) & 0x3FF) << 16);

2365 
dev
->
	`iowrôe32
(dev, 
£ns‹12
, 0x12);

2366 
dev
->
	`iowrôe32
(dev, 
£ns‹13
, 0x13);

2367 
dev
->
	`iowrôe32
(dev, 
£ns‹14
, 0x14);

2369 
dev
->
group_øid_luns
 = dev->
c⁄fig_bakup
->
luns
 / dev->
group_øid_num
;

2371 
	`check_ecc_powî
(
dev
, dev->
hw_c⁄fig
->
hw_ecc_powî
 & 0x0F);

2373 i‡(0 =(
√w
 + 
u£d
 + 
f‹˚
)) {

2374 
	`¥ötf
("ERR: option of [-n, --new], [-u, --used] or [-f, --force] must be selected!\n\n");

2375 
	`sh™n⁄_m±_ußge
();

2376  
ERR
;

2377 } i‡(1 !(
√w
 + 
u£d
 + 
f‹˚
)) {

2378 
	`¥ötf
("ERR: option of [-n, --new], [-u, --used]ánd [-f ,--force]áre mutuallyÉxclusive!\n\n");

2379 
	`sh™n⁄_m±_ußge
();

2380  
ERR
;

2383 
dev
->
m±_begötime
 = 
	`time
(
NULL
);

2386 
mbr_bbt
 = 
	`zmÆloc
((*mbr_bbtË+ 
MPT_MBR_NBLK
 * 
MAX_LUN_NBYTE
);

2387 i‡(
NULL
 =
mbr_bbt
)

2388 
	`mÆloc_Áûed_exô
();

2389 
mbr_bbt
->
nblock
 = 
MPT_MBR_NBLK
;

2391 i‡(
u£d
) {

2392 
	`sh™n⁄_m±_ªad_u£d_bbt
(
dev
, 0, 0);

2394 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

2395 
blk
 = 0; blk < 
MPT_MBR_NBLK
; blk++) {

2396 i‡(
	`ã°_bô
(
lun
, 
u£d_bbt
->
sb_bbt
[
blk
]))

2397 
	`£t_bô
(
lun
, 
mbr_bbt
->
sb_bbt
[
blk
]);

2400 
	`check_mbr_bbt
(
dev
, 
mbr_bbt
, "MBR blocksÑead-used-info badÜuns");

2403 
dev
->
¥iv©e_d©a
 = 
mbr_bbt
;

2404 
	`m±_sˇn_mbr_bbt
(
dev
, 
mbr_bbt
, 
√w
);

2405 i‡(
debug_mbrblk_bbt
) {

2406 
blk
 = 0; blk < 
MPT_MBR_NBLK
; blk++) {

2407 
	`¥ötf
("MBR su≥rblock-%d badblock bôm≠:", 
blk
);

2408 
i
 = 0; i < (
dev
->
c⁄fig_bakup
->
luns
 + 8 * () - 1) / (8 * ()); i++)

2409 
	`¥ötf
(" 0x%lX", 
mbr_bbt
->
sb_bbt
[
blk
][
i
]);

2410 
	`¥ötf
("\n");

2416 
mbr_c⁄ãxt
 = 
	`Æloc_live_c⁄ãxt
(
dev
);

2417 i‡(
NULL
 =
mbr_c⁄ãxt
)

2418 
	`mÆloc_Áûed_exô
();

2419 
	`•rötf
(
mbr_c⁄ãxt
->
id
, "MBR-LIVE-CONTEXT");

2421 
bbt_c⁄ãxt
 = 
	`Æloc_live_c⁄ãxt
(
dev
);

2422 i‡(
NULL
 =
bbt_c⁄ãxt
)

2423 
	`mÆloc_Áûed_exô
();

2424 
	`•rötf
(
bbt_c⁄ãxt
->
id
, "BBT-LIVE-CONTEXT");

2427 
bbt_size
 = (*
bbt
Ë+ 
dev
->
Êash
->
nblk
 * (
MAX_LUN_NBYTE
);

2428 
bbt
 = 
	`zmÆloc
(
bbt_size
);

2429 i‡(
NULL
 =
bbt
)

2430 
	`mÆloc_Áûed_exô
();

2431 
bbt
->
nblock
 = 
dev
->
Êash
->
nblk
;

2432 
dev
->
c⁄fig
->
ecc_mode
 = 
ECCMODE_DISABLE
;

2433 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

2434 
dev
->
c⁄fig
->
≈œ√
 = 1;

2435 
	`as£π
(
dev
->
c⁄fig
->
£˘‹_size_shi·
 == 12);

2436 i‡(
	`ª_öô_devi˚
(
dev
)) {

2437 
	`¥ötf
("Re-öô-devi˚ (SCANËÁûed."
MPT_HELP
);

2438 
	`exô
(
EXIT_FAILURE
);

2440 
dev
->
	`˛ór_queue
(dev);

2442 i‡(
wm_Êag
)

2443 
m™uÆ_wrôembr
;

2445 i‡(
u£d
 || 
f‹˚
) {

2446 i‡(
	`îa£_sˇn
(
dev
, 
bbt
))

2447 
	`exôlog
("Erase scan failed\n");

2449 
	`check_Æl_bbt
(
dev
, 
bbt
, "All blocksÉrase check badÜuns");

2452 i‡(
	`Êagbyã_sˇn
(
dev
, 
bbt
))

2453 
	`exôlog
("Flagbyte scan failed\n");

2454 
	`check_Æl_bbt
(
dev
, 
bbt
, "All blocks flagbyte check badÜuns");

2456 i‡(
u£d
) {

2457 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

2458 
blk
 = 
MPT_MBR_NBLK
; blk < 
dev
->
Êash
->
nblk
; blk++) {

2459 i‡(
	`ã°_bô
(
lun
, 
u£d_bbt
->
sb_bbt
[
blk
]))

2460 
	`£t_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]);

2464 
	`check_Æl_bbt
(
dev
, 
bbt
, "All blocksÑead-used-info check badÜuns");

2467 i‡(
dev
->
bb_cou¡
 =
NULL
) {

2468 
dev
->
bb_cou¡
 = 
	`zmÆloc
(dev->
c⁄fig
->
luns
 * ());

2470 i‡(
dev
->
bb_cou¡
 =
NULL
) {

2471 
	`¥ötf
("AŒoˇti⁄ i¿%s(ËÁûed.", 
__func__
);

2472 
	`exô
(
EXIT_FAILURE
);

2475 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

2476 
blk
 = 0; blk < 
bbt
->
nblock
; blk++) {

2477 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

2478 
dev
->
bb_cou¡
[
lun
]++;

2482 
ecc_hi°ogøm
 = 
	`zmÆloc
((
u64
Ë* (
dev
->
tmode
 + 1));

2483 i‡(
NULL
 =
ecc_hi°ogøm
)

2484 
	`mÆloc_Áûed_exô
();

2486 i‡(
sˇn_whﬁe
) {

2487 
time_t
 
now
 = 
	`time
(
NULL
);

2488 
dev
->
lo›s
 = 1; dev->lo›†<dev->
sˇn_lo›s
; dev->loops++) {

2489 
	`¥öt
("ALL block†s‹tögÜo› %d/%d...", 
dev
->
lo›s
, dev->
sˇn_lo›s
);

2490 
	`m±_sˇn_bbt_adv™˚
(
dev
, 
bbt
);

2492 i‡(
dev
->
¥öt_bu∫ö_ecc_hi°ogøm
) {

2493 
j
 = 0; j <
dev
->
tmode
; j++)

2494 
	`¥ötf
("%d\t%lu\n", 
j
, 
ecc_hi°ogøm
[j]);

2498 i‡(
dev
->
max_c⁄åﬁÀr_ãmp
 - 1.0*dev->
˘æ_ãmp_thªshﬁd
 >= 1.0 ||

2499 
dev
->
max_Êash_ãmp
 - 1.0*dev->
Êash_ãmp_thªshﬁd
 >= 1.0 ||

2500 
dev
->
max_bﬂrd_ãmp
 - 1.0*dev->
bﬂrd_ãmp_thªshﬁd
 >= 1.0) {

2501 
dev
->
exôcode
 = 
TEMPERATURE_LIMIT
;

2502 
	`¥ötf
("temperatureÜargerÅhanÅhreshold,Éxit initÜoop\n");

2507 
	`¥ötf
("S‹tögÅook %ld sec⁄ds\n", 
	`time
(
NULL
Ë- 
now
);

2509 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

2510 
blk
 = 0; blk < 
MPT_MBR_NBLK
; blk++) {

2511 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

2512 
	`£t_bô
(
lun
, 
mbr_bbt
->
sb_bbt
[
blk
]);

2516 
time_t
 
now
 = 
	`time
(
NULL
);

2517 
dev
->
lo›s
 = 1; dev->lo›†<dev->
sˇn_lo›s
; dev->loops++) {

2518 
	`¥öt
("MBR block†s‹tögÜo› %d...", 
dev
->
lo›s
);

2519 
	`m±_sˇn_bbt_adv™˚
(
dev
, 
mbr_bbt
);

2521 
	`¥ötf
("S‹tögÅook %ld sec⁄ds\n", 
	`time
(
NULL
Ë- 
now
);

2524 i‡(
NULL
 !
dev
->
ªc‹dÂ
) {

2525 
	`Ârötf
(
dev
->
ªc‹dÂ
, "dy«mic_bad_block†%d\n", dev->
bad_blocks
);

2526 
	`Ârötf
(
dev
->
ªc‹dÂ
, "max_c⁄åﬁÀr_ãm∞%.0f\n", dev->
max_c⁄åﬁÀr_ãmp
);

2527 
	`Ârötf
(
dev
->
ªc‹dÂ
, "max_Êash_ãm∞%.0f\n", dev->
max_Êash_ãmp
);

2528 
	`Ârötf
(
dev
->
ªc‹dÂ
, "max_bﬂrd_ãm∞%.0f\n", dev->
max_bﬂrd_ãmp
);

2530 
	`‰ì
(
ecc_hi°ogøm
);

2532 i‡(
dev
->
c⁄fig
->
≈œ√
 !dev->
c⁄fig_bakup
->nplane) {

2534 
bbt_size
 = (*
bbt
Ë+ (
dev
->
Êash
->
nblk
 / dev->
c⁄fig_bakup
->
≈œ√
Ë* (
MAX_LUN_NBYTE
);

2535 
√w_bbt
 = 
	`zmÆloc
(
bbt_size
);

2536 i‡(
NULL
 =
√w_bbt
)

2537 
	`mÆloc_Áûed_exô
();

2538 
√w_bbt
->
nblock
 = 
dev
->
Êash
->
nblk
;

2539 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

2540 
blk
 = 
MPT_MBR_NBLK
; blk < 
dev
->
Êash
->
nblk
; blk++) {

2541 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

2542 
	`£t_bô
(
lun
, 
√w_bbt
->
sb_bbt
[
blk
 / 
dev
->
c⁄fig_bakup
->
≈œ√
]);

2545 
	`‰ì
(
bbt
);

2546 
bbt
 = 
√w_bbt
;

2548 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = dev->
c⁄fig_bakup
->sector_size_shift;

2549 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = dev->
c⁄fig_bakup
->sector_ncodeword;

2550 
dev
->
c⁄fig
->
ecc_mode
 = dev->
c⁄fig_bakup
->ecc_mode;

2551 
dev
->
c⁄fig
->
øid_mode
 = dev->
c⁄fig_bakup
->raid_mode;

2552 
dev
->
c⁄fig
->
≈œ√
 = dev->
c⁄fig_bakup
->nplane;

2553 i‡(
	`ª_öô_devi˚
(
dev
)) {

2554 
	`¥ötf
("Re-öô-devi˚ %s(ËÁûed."
MPT_HELP
, 
__func__
);

2555 
	`exô
(
EXIT_FAILURE
);

2557 
dev
->
	`˛ór_queue
(dev);

2561 
lun
 = 0;Üu¿< 
dev
->
c⁄fig
->
luns
;Üun++)

2562 
lun_nbadblk
[
lun
] = 
dev
->
Êash
->
nblk
;

2564 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

2565 
lun_nbadblk
[
lun
] = 0;

2567 
	`f‹_dev_óch_block
(
dev
, 
blk
) {

2568 i‡(
	`ã°_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]))

2569 
lun_nbadblk
[
lun
]++;

2571 
lun_nbadblk
[
lun
] *
dev
->
c⁄fig_bakup
->
≈œ√
;

2573 i‡(
lun_nbadblk
[
lun
] > 
MAX_BADBLK_COUNT


2574 || (
lun_nbadblk
[
lun
] - 
dev
->
èrgëlun
[lun].
blk_hﬁe_cou¡
Ë> 
MAX_BAD_BLOCK_IN_A_LUN
) {

2575 
dev
->
vÆid_luns
--;

2576 
	`£t_bô
(
lun
, 
dev
->
lun_bôm≠
);

2580 
	`mem£t
(
öhîít_lun_bôm≠
, 0x00, (inherent_lun_bitmap));

2581 i‡(0 !
dev
->
öhîít_mbr
->
lun_amou¡
) {

2582 i‡(
dev
->
c⁄fig
->
nch™√l
 !dev->
öhîít_mbr
->
cfg_nch™√l
 ||

2583 
dev
->
c⁄fig
->
¡hªad
 !dev->
öhîít_mbr
->
cfg_¡hªad
 ||

2584 
dev
->
c⁄fig
->
∆un
 !dev->
öhîít_mbr
->
cfg_∆un
) {

2585 
	`¥ötf
("\033[0;1;31m[WARNNIG] Inherent MBR mismatch current config!!! \033[0m");

2586 
	`¥ötf
("Inherent:Çchannel=%dÇthread=%dÇlun=%d; ",

2587 
dev
->
öhîít_mbr
->
cfg_nch™√l
, dev->öhîít_mbr->
cfg_¡hªad
, dev->öhîít_mbr->
cfg_∆un
);

2588 
	`¥ötf
("Curconfig:Çchannel=%dÇthread=%dÇlun=%d\n",

2589 
dev
->
c⁄fig
->
nch™√l
, dev->c⁄fig->
¡hªad
, dev->c⁄fig->
∆un
);

2591 
lun
 = 0;Üu¿< 
dev
->
c⁄fig
->
luns
;Üun++) {

2592 i‡(
	`ã°_bô
(
	`log2phy_lun
(
dev
, 
lun
), (*)dev->
öhîít_mbr
->
bad_phy_lun_m≠
)) {

2593 i‡(!
	`ã°_bô
(
lun
, 
dev
->
lun_bôm≠
)) {

2594 
	`£t_bô
(
lun
, 
öhîít_lun_bôm≠
);

2595 
dev
->
vÆid_luns
--;

2597 
	`£t_bô
(
lun
, 
dev
->
lun_bôm≠
);

2603 i‡(
dev
->
vÆid_luns
 < (dev->
c⁄fig
->
luns
 - dev->
ab£¡_luns
)) {

2604 *
p_öput
, 
buf_öput
[32];

2605 
	`logout
("InvÆidÜun†(%dËhavêbì¿dëe˘ed: ", (
dev
->
c⁄fig
->
luns
 - dev->
ab£¡_luns
Ë- dev->
vÆid_luns
);

2607 
lun
 = 0;Üu¿< 
dev
->
c⁄fig
->
luns
;Üun++) {

2608 i‡(
	`ã°_bô
(
lun
, 
dev
->
lun_bôm≠
Ë&& !ã°_bô÷un, dev->
ab£¡_lun_bôm≠
)) {

2609 
	`¥ötf
(" \033[0;1;31m%d\033[0m[%d %.2f%%%s]",

2610 
lun
, 
lun_nbadblk
[lun],Üun_nbadblk[lun] * 100.0 / 
dev
->
Êash
->
nblk
,

2611 
	`ã°_bô
(
lun
, 
öhîít_lun_bôm≠
) ? "*" : "");

2612 i‡(
NULL
 !
logÂ
)

2613 
	`Ârötf
(
logÂ
, " %d[%d %.2f%%%s]",

2614 
lun
, 
lun_nbadblk
[lun],Üun_nbadblk[lun] * 100.0 / 
dev
->
Êash
->
nblk
,

2615 
	`ã°_bô
(
lun
, 
öhîít_lun_bôm≠
) ? "*" : "");

2618 
	`logout
("Çblk=%d\n", 
dev
->
Êash
->
nblk
);

2619 
	`¥öt
("Do you want continue formatÅhis deviceányway? [y/n]");

2621 
	`fgës
(
buf_öput
, (buf_öput), 
°dö
);

2622 
p_öput
 = 
buf_öput
;

2623 
	`isbœnk
(*
p_öput
))Ö_input++;

2624 i‡('y' !
	`tﬁowî
(
p_öput
[0]))

2625 
	`exôlog
("InputÇot yÅoÉxit\n");

2628 
lun
 = 0;Üu¿< 
dev
->
c⁄fig
->
luns
;Üun++) {

2629 i‡(
	`ã°_bô
(
lun
, 
dev
->
lun_bôm≠
)) {

2630 
	`f‹_dev_óch_block
(
dev
, 
blk
)

2631 
	`£t_bô
(
lun
, 
bbt
->
sb_bbt
[
blk
]);

2635 i‡(
debug_ítúeblk_bbt
) {

2636 
	`f‹_dev_óch_block
(
dev
, 
blk
) {

2637 
	`¥ötf
("Su≥rblock-%-4d badblock bôm≠:", 
blk
);

2638 
i
 = 0; i < (
dev
->
c⁄fig_bakup
->
luns
 + 8 * () - 1) / (8 * ()); i++)

2639 
	`¥ötf
(" 0x%lX", 
bbt
->
sb_bbt
[
blk
][
i
]);

2640 
	`¥ötf
("\n");

2644 
	`m±_buûd_sb_lunöfo
(
dev
, 
bbt
);

2647 
m™uÆ_wrôembr
:

2648 i‡(!
wm_Êag
) {

2649 
	`m±_£tvÆue_mbr
(
dev
, dev->
mbr
);

2651 
	`m±_£tvÆue_mbr_‰om_fûe
(
dev
, dev->
mbr
, 
wm_mÂ
);

2652 
	`m±_£tbbt_‰om_fûe
(
dev
, 
bbt
, 
wm_bÂ
);

2654 i‡(
debug_mbr_öfo
)

2655 
	`m±_¥öt_mbr
(
dev
, dev->
mbr
);

2657 i‡(
dev
->
mbr_by_4k
) {

2658 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = dev->
c⁄fig_bakup
->sector_size_shift;

2659 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = dev->
c⁄fig_bakup
->sector_ncodeword;

2661 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = 9;

2662 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = 1;

2664 
dev
->
c⁄fig
->
ecc_mode
 = 
ECCMODE_ENABLE
;

2665 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

2666 
dev
->
c⁄fig
->
≈œ√
 = 1;

2667 i‡(
	`ª_öô_devi˚
(
dev
)) {

2668 
	`¥ötf
("Re-öô-devi˚ (WRITE-MBRËÁûed."
MPT_HELP
);

2669 
	`exô
(
EXIT_FAILURE
);

2671 
dev
->
	`˛ór_queue
(dev);

2672 
	`m±_wrôe_mbr
(
dev
, dev->
mbr
);

2673 
	`ªc‹d_live_c⁄ãxt
(
mbr_c⁄ãxt
);

2676 
	`mem˝y
(
dev
->
c⁄fig
, dev->
c⁄fig_bakup
, (*dev->config));

2677 
dev
->
c⁄fig
->
≈œ√
 = 1;

2678 
dev
->
c⁄fig
->
øid_mode
 = 
RAIDMODE_DISABLE
;

2679 
	`as£π
(
dev
->
c⁄fig
->
£˘‹_size_shi·
 == 12);

2680 i‡(
	`ª_öô_devi˚
(
dev
)) {

2681 
	`¥ötf
("Re-öô-devi˚ (WRITE-BBTËÁûed."
MPT_HELP
);

2682 
	`exô
(
EXIT_FAILURE
);

2684 
dev
->
	`˛ór_queue
(dev);

2685 
dev
->
¥iv©e_öt
 = 
debug_bbt_öfo
;

2686 
	`m±_wrôe_bbt
(
dev
, 
bbt
);

2687 
	`ªc‹d_live_c⁄ãxt
(
bbt_c⁄ãxt
);

2690 
lun
 = 0;Üu¿< 
dev
->
c⁄fig
->
luns
;Üun++) {

2691 i‡(
	`ã°_bô
(
lun
, 
dev
->
lun_bôm≠
Ë&& !ã°_bô÷un, dev->
ab£¡_lun_bôm≠
))

2692 
dev
->
övÆid_blocks
 +dev->
Êash
->
nblk
;

2696 
dev
->
¥iv©e_öt
 = 0;

2697 
dev
->
¥iv©e_d©a
 = 
mbr_bbt
;

2698 i‡(
	`sh™n⁄_m±_ªadmbr
(
dev
, 0, 0)) {

2699 
	`¥ötf
("BUG: Ród MBR faûedá·î m±."
MPT_HELP
);

2700  
ERR
;

2702 i‡(
	`sh™n⁄_m±_ªadbbt
(
dev
, 1)) {

2703 
	`¥ötf
("BUG: Ród BBT faûedá·î m±."
MPT_HELP
);

2704  
ERR
;

2707 i‡(
dev
->
¥iv©e_öt
)

2708 
	`exôlog
("BUG: Read MBRánd BBT is mismatch with writed MBRánd BBT.\n");

2711 
	`logout
("mbr-vîsi⁄: 0x%04lX\n", 
dev
->
mbr
->
mbr_vîsi⁄
);

2712 #i‚de‡
__RELEASE__


2713 
	`logout
("luns: %d = %d(channel) x %d(thread) x %d(lun)\n",

2714 
dev
->
mbr
->
lun_amou¡
, dev->mbr->
cfg_nch™√l
, dev->mbr->
cfg_¡hªad
, dev->mbr->
cfg_∆un
);

2716 
	`logout
("£˘‹: %dB\n", 1 << 
dev
->
mbr
->
logicb_shi·
);

2717 #i‚de‡
__RELEASE__


2718 
	`logout
("codew‹d/£˘‹: %d\n", 
dev
->
mbr
->
ecc_codew‹ds_ö_logicb
);

2720 
	`logout
("ˇ∑côy: %ld MB, %ld GiB\n", 
dev
->
mbr
->
ˇ∑côy
 >> 11, (dev->mbr->capacity * 512)/1000000000ul);

2721 #i‚de‡
__RELEASE__


2722 
	`logout
("°©ic-övÆid-blocks: %d/%d (%%%.3f)\n", 
dev
->
övÆid_blocks
, (dev->
c⁄fig
->
luns
 - dev->
ab£¡_luns
Ë* dev->
Êash
->
nblk
,

2723 (100.0 * 
dev
->
övÆid_blocks
Ë/ (dev->
c⁄fig
->
luns
 * dev->
Êash
->
nblk
));

2726 
	`‰ì
(
bbt
);

2727 
	`‰ì_live_c⁄ãxt
(
mbr_c⁄ãxt
);

2728 
	`‰ì_live_c⁄ãxt
(
bbt_c⁄ãxt
);

2729 
	`‰ì
(
mbr_bbt
);

2730 i‡(
NULL
 !
u£d_bbt
Ë
	`‰ì
(used_bbt);

2731 i‡(
NULL
 !
logÂ
) {

2732 
time_t
 
â
;

2733 
â
 = 
	`time
(
NULL
);

2734 
	`Ârötf
(
logÂ
, "[MPT LOG END %s] <-- %s", 
dev
->
«me
, 
	`˘ime
(&
â
));

2735 
	`f˛o£
(
logÂ
);

2737 i‡(
NULL
 !
dev
->
ªc‹dÂ
)

2738 
	`f˛o£
(
dev
->
ªc‹dÂ
);

2741 i‡(
dev
->
exôcode
 =
TEMPERATURE_LIMIT
)

2742 
	`exôlog
("temperatureÜargerÅhreshold: %3.2f,%3.2f,%3.2f > %d,%d,%d. done-initloops:%d\n",

2743 
dev
->
max_c⁄åﬁÀr_ãmp
, dev->
max_Êash_ãmp
, dev->
max_bﬂrd_ãmp
,

2744 
dev
->
˘æ_ãmp_thªshﬁd
, dev->
Êash_ãmp_thªshﬁd
, dev->
bﬂrd_ãmp_thªshﬁd
,

2745 
dev
->
lo›s
);

2749 
	}
}

	@nor.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/mm™.h
>

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

11 
	~<sig«l.h
>

12 
	~<time.h
>

14 
	~"toﬁ.h
"

16 
	#NOR_ERASE_ADDR
 0x34

	)

17 
	#NOR_ERASE_CTRL
 0x35

	)

19 
	#NOR_WRITE_ADDR
 0x36

	)

20 
	#NOR_WRITE_CTRL
 0x37

	)

22 
	#NOR_READ_ADDR
 0x38

	)

23 
	#NOR_READ_LENGTH
 0x39

	)

24 
	#NOR_READ_CTRL
 0x3A

	)

26 
	#NOR_TIMEOUT
 100000

27 

	)

28 
	sn‹Êash
 {

29 
	m«me
[32];

30 
	mtŸÆ_block
;

31 
	mtŸÆ_size
;

32 
	mblock_ty≥
;

33 
	mdbuf_size
;

35 
	sn‹block
 {

36 
	mcou¡
;

37 
	msize
;

38 } 
	mblock
[0];

42 
	mn‹_îa£_ty≥
 = 0,

43 
	mn‹_wrôe_ty≥
,

44 
	mn‹_ªad_ty≥
,

47 
	gn‹_buf_addr
 = 0;

52 
	$__u8_À2be
(*
buf
, 
cou¡
)

54 
i
, 
k
;

55 
__u8
 
d©a
, 
t
;

57 
i
 = 0; i < 
cou¡
; i++) {

58 
t
 = 0;

59 
d©a
 = ((
__u8
 *)
buf
)[
i
];

61 
k
 = 0; k < 8; k++) {

62 i‡(
d©a
 & (1 << 
k
))

63 
t
 |(1 << (7 - 
k
));

66 ((
__u8
 *)
buf
)[
i
] = 
t
;

68 
	}
}

71 
n‹Êash
 *
	$öô_n‹Êash
(*
«me
)

73 
n‹Êash
 *
n‹
 = 
NULL
;

75 i‡(!
	`°rcmp
(
«me
, "spi")) {

76 
n‹
 = 
	`zmÆloc
((*n‹Ë+ (
n‹block
) * (1 + 1 + 1 ));

77 i‡(
NULL
 =
n‹
)

78  
NULL
;

80 
	`•rötf
(
n‹
->
«me
, "%s",Çame);

82 
n‹
->
tŸÆ_block
 = 542;

83 
n‹
->
tŸÆ_size
 = 510 * 64 * 1024 + 32 * 4 * 1024;

84 
n‹
->
block_ty≥
 = 2;

86 
n‹
->
block
[0].
cou¡
 = 510;

87 
n‹
->
block
[0].
size
 = 64 * 1024;

89 
n‹
->
block
[1].
cou¡
 = 32;

90 
n‹
->
block
[1].
size
 = 4 * 1024;

92 
n‹
->
block
[2].
cou¡
 = 0;

93 
n‹
->
block
[2].
size
 = 0;

95 
n‹
->
dbuf_size
 = 256;

97 } i‡(!
	`°rcmp
(
«me
, "bpi")) {

98 
n‹
 = 
	`zmÆloc
((*n‹Ë+ (
n‹block
) * (1 + 1 ));

99 i‡(
NULL
 =
n‹
)

100  
NULL
;

102 
	`•rötf
(
n‹
->
«me
, "%s",Çame);

104 
n‹
->
tŸÆ_block
 = 256;

105 
n‹
->
tŸÆ_size
 = 256 * 128 * 1024;

106 
n‹
->
block_ty≥
 = 1;

108 
n‹
->
block
[0].
cou¡
 = 256;

109 
n‹
->
block
[0].
size
 = 128 * 1024;

111 
n‹
->
block
[1].
cou¡
 = 0;

112 
n‹
->
block
[1].
size
 = 0;

114 
n‹
->
dbuf_size
 = 64;

117  
n‹
;

118 
	}
}

120 
	$exô_n‹Êash
(
n‹Êash
 *
n‹
)

122 i‡(
NULL
 !
n‹
)

123 
	`‰ì
(
n‹
);

124 
	}
}

132 
	$n‹_îa£
(
sh™n⁄_dev
 *
dev
, 
n‹Êash
 *
n‹
, 
°¨t
, 
Àngth
)

134 
timeout
;

135 
size
, 
ssize
, 
ty≥
, 
°y≥
;

136 
begö
, 
ªmaö
;

137 
ncou¡
, 
cou¡
, 
now
, 
¥e
;

139 i‡((
°¨t
 + 
Àngth
Ë> 
n‹
->
tŸÆ_size
) {

140 
	`¥ötf
("Overflow NORáddress\n");

141  
ERR
;

144 
size
 = 0, 
ty≥
 = 0;Åy≥ < 
n‹
->
block_ty≥
;Åype++) {

145 
size
 +
n‹
->
block
[
ty≥
].sizê*Ç‹->block[ty≥].
cou¡
;

146 i‡(
°¨t
 < 
size
)

149 
	`as£π
(
ty≥
 < 
n‹
->
block_ty≥
);

150 
°y≥
 = 
ty≥
;

151 
ssize
 = 
size
;

153 i‡(
°¨t
 % 
n‹
->
block
[
ty≥
].
size
) {

154 
	`¥ötf
("Sèπáddªs†shouldálig¿0x%X\n", 
n‹
->
block
[
ty≥
].
size
);

155  
ERR
;

159 
ncou¡
 = 0;

160 
begö
 = 
°¨t
;

161 
ªmaö
 = 
Àngth
;

163 
ªmaö
 > 0) {

164 
begö
 +
n‹
->
block
[
ty≥
].
size
;

165 
ªmaö
 -
n‹
->
block
[
ty≥
].
size
;

167 i‡(
begö
 >
size
) {

168 
ty≥
++;

169 
size
 +
n‹
->
block
[
ty≥
].sizê*Ç‹->block[ty≥].
cou¡
;

172 
ncou¡
++;

176 
ty≥
 = 
°y≥
;

177 
size
 = 
ssize
;

178 
cou¡
 = 
now
 = 
¥e
 = 0;

179 
begö
 = 
°¨t
;

180 
ªmaö
 = 
Àngth
;

181 
	`¥öt
("Eø£: %%%02d", 
now
);

183 
ªmaö
 > 0) {

185 
dev
->
	`iowrôe32
(dev, 
begö
, 
NOR_ERASE_ADDR
);

186 
dev
->
	`iowrôe32
(dev, 0, 
NOR_ERASE_CTRL
);

187 
dev
->
	`iowrôe32
(dev, 1, 
NOR_ERASE_CTRL
);

189 
timeout
 = 0;

190 !(
dev
->
	`i‹ód32
(dev, 
NOR_ERASE_CTRL
) & 0x02)) {

191 
	`u¶ìp
(10);

192 i‡(
timeout
++ > 
NOR_TIMEOUT
) {

193 
	`¥ötf
("%s(Ëtimeout\n", 
__func__
);

194  
ERR
;

198 
now
 = ++
cou¡
 * 100 / 
ncou¡
;

199 i‡(
now
 > 
¥e
) {

200 
	`¥öt
("\b\b%02d", 
now
);

201 
¥e
 = 
now
;

204 
begö
 +
n‹
->
block
[
ty≥
].
size
;

205 
ªmaö
 -
n‹
->
block
[
ty≥
].
size
;

207 i‡(
begö
 >
size
) {

208 
ty≥
++;

209 
size
 +
n‹
->
block
[
ty≥
].sizê*Ç‹->block[ty≥].
cou¡
;

213 
	`¥ötf
("\n");

215 
	}
}

222 
	$n‹_wrôe
(
sh™n⁄_dev
 *
dev
, 
n‹Êash
 *
n‹
, *
d©a
, 
°¨t
, 
Àngth
)

224 
timeout
;

225 
n
, 
begö
, 
ªmaö
;

226 
__u32
 
buf
[
n‹
->
dbuf_size
 / 4];

227 
ncou¡
, 
cou¡
, 
now
, 
¥e
;

229 i‡((
°¨t
 + 
Àngth
Ë> 
n‹
->
tŸÆ_size
) {

230 
	`¥ötf
("Overflow NORáddress\n");

231  
ERR
;

234 
begö
 = 
°¨t
;

235 
ªmaö
 = 
Àngth
;

236 
	`mem£t
(
buf
, 0xFF, (buf));

238 
ncou¡
 = (
Àngth
 + 
n‹
->
dbuf_size
 - 1) /Çor->dbuf_size;

239 
cou¡
 = 
now
 = 
¥e
 = 0;

240 
	`¥öt
("Wrôe: %%%02d", 
now
);

242 
ªmaö
 > 0) {

243 
n
 = (
ªmaö
 >
n‹
->
dbuf_size
) ?Çor->dbuf_size :Ñemain;

246 
	`mem˝y
(
buf
, 
d©a
 + (
begö
 - 
°¨t
), 
n
);

247 i‡(
dev
->
¥iv©e_öt
)

248 
	`__u8_À2be
(
buf
, 
n
);

249 
dev
->
	`mu…i_øw_wrôñ
(dev, 
buf
, 
n‹_buf_addr
, (
n
 + 3) / 4);

251 
dev
->
	`iowrôe32
(dev, 
begö
, 
NOR_WRITE_ADDR
);

252 
dev
->
	`iowrôe32
(dev, 0, 
NOR_WRITE_CTRL
);

253 
dev
->
	`iowrôe32
(dev, 1, 
NOR_WRITE_CTRL
);

255 
timeout
 = 0;

256 !(
dev
->
	`i‹ód32
(dev, 
NOR_WRITE_CTRL
) & 0x02)) {

257 
	`u¶ìp
(10);

258 i‡(
timeout
++ > 
NOR_TIMEOUT
) {

259 
	`¥ötf
("%s(Ëtimeout\n", 
__func__
);

260  
ERR
;

264 
now
 = ++
cou¡
 * 100 / 
ncou¡
;

265 i‡(
now
 > 
¥e
) {

266 
	`¥öt
("\b\b%02d", 
now
);

267 
¥e
 = 
now
;

270 
begö
 +
n
;

271 
ªmaö
 -
n
;

274 
	`¥ötf
("\n");

276 
	}
}

283 
	$n‹_ªad
(
sh™n⁄_dev
 *
dev
, 
n‹Êash
 *
n‹
, *
d©a
, 
°¨t
, 
Àngth
, 
quõt
)

285 
timeout
;

286 
n
, 
begö
, 
ªmaö
;

287 
__u32
 
buf
[
n‹
->
dbuf_size
 / 4];

288 
ncou¡
, 
cou¡
, 
now
, 
¥e
;

290 i‡((
°¨t
 + 
Àngth
Ë> 
n‹
->
tŸÆ_size
) {

291 
	`¥ötf
("Overflow NORáddress\n");

292  
ERR
;

295 
begö
 = 
°¨t
;

296 
ªmaö
 = 
Àngth
;

297 
	`mem£t
(
buf
, 0xFF, (buf));

299 
ncou¡
 = (
Àngth
 + 
n‹
->
dbuf_size
 - 1) /Çor->dbuf_size;

300 
cou¡
 = 
now
 = 
¥e
 = 0;

301 i‡(!
quõt
)

302 
	`¥öt
("Ród: %%%02d", 
now
);

304 
ªmaö
 > 0) {

305 
n
 = (
ªmaö
 >
n‹
->
dbuf_size
) ?Çor->dbuf_size :Ñemain;

308 
dev
->
	`iowrôe32
(dev, 
begö
, 
NOR_READ_ADDR
);

309 
dev
->
	`iowrôe32
(dev, 4 * ((
n
 + 3Ë/ 4), 
NOR_READ_LENGTH
);

310 
dev
->
	`iowrôe32
(dev, 0, 
NOR_READ_CTRL
);

311 
dev
->
	`iowrôe32
(dev, 1, 
NOR_READ_CTRL
);

313 
timeout
 = 0;

314 !(
dev
->
	`i‹ód32
(dev, 
NOR_READ_CTRL
) & 0x02)) {

315 
	`u¶ìp
(10);

316 i‡(
timeout
++ > 
NOR_TIMEOUT
) {

317 
	`¥ötf
("%s(Ëtimeout\n", 
__func__
);

318  
ERR
;

322 
dev
->
	`mu…i_øw_ªadl
(dev, 
buf
, 
n‹_buf_addr
, (
n
 + 3) / 4);

323 i‡(
dev
->
¥iv©e_öt
)

324 
	`__u8_À2be
(
buf
, 
n
);

325 
	`mem˝y
(
d©a
 + (
begö
 - 
°¨t
), 
buf
, 
n
);

327 
now
 = ++
cou¡
 * 100 / 
ncou¡
;

328 i‡(!
quõt
 && 
now
 > 
¥e
) {

329 
	`¥öt
("\b\b%02d", 
now
);

330 
¥e
 = 
now
;

333 
begö
 +
n
;

334 
ªmaö
 -
n
;

337 i‡(!
quõt
)

338 
	`¥ötf
("\n");

340 
	}
}

342 
	$sh™n⁄_n‹_ußge
()

344 
	`¥ötf
("Usage:\n");

345 
	`¥ötf
("\tÇor [option]Érase start(Hex-byte-address)Üength(Dec-byte-number)\n");

346 
	`¥ötf
("\tÇor [option] write start(Hex-byte-address) file\n");

347 
	`¥ötf
("\tÇor [option]Ñead start(Hex-byte-address)Üength(Dec-byte-number) file\n");

350 
	`¥ötf
("Option:\n");

351 
	`¥ötf
("\t-b, --big-endian\n"

353 
	`¥ötf
("\t-h, --help\n"

355 
	}
}

357 
n‹Êash
 *
	$sh™n⁄_n‹_öô
(
sh™n⁄_dev
 *
dev
)

359 
__u32
 
ty≥id
;

360 
n‹ty≥
[16];

361 
n‹Êash
 *
n‹
 = 
NULL
;

363 
ty≥id
 = 
dev
->
	`i‹ód32
(dev, 0x32);

365 i‡(0x01800119 =
ty≥id
) {

366 
	`•rötf
(
n‹ty≥
, "spi");

368 
n‹_buf_addr
 = 0x800;

369 } i‡(0x017E2201 =
ty≥id
) {

370 
	`•rötf
(
n‹ty≥
, "bpi");

372 
n‹_buf_addr
 = 0x800;

374 
	`•rötf
(
n‹ty≥
, "bpi");

376 if(0 =
dev
->
b¨_dwÀn
[1]) {

377 
	`¥ötf
("Hardware don`t supportÅhis feature\n");

378 
	`exô
(
EXIT_FAILURE
);

380 
n‹_buf_addr
 = 
dev
->
b¨_dwÀn
[0];

383 
n‹
 = 
	`öô_n‹Êash
(
n‹ty≥
);

384 i‡(
NULL
 =
n‹
) {

385 
	`¥ötf
("init_norflash failed\n");

386 
	`exô
(
EXIT_FAILURE
);

389  
n‹
;

390 
	}
}

392 
	$sh™n⁄_n‹
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

394 
›ti⁄
 
l⁄g›ts
 [] = {

395 {"big-ídün", 
no_¨gumít
, 
NULL
, 'b'},

396 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

399 
›t
;

400 
n‹Êash
 *
n‹
 = 
NULL
;

401 
fd
, 
°¨t
, 
Àngth
;

402 
°©
 
°a
;

403 
rc
 = 0;

404 *
buf
;

406 
dev
->
¥iv©e_öt
 = 0;

408 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":bh", 
l⁄g›ts
, 
NULL
)) != -1) {

409 
›t
) {

411 
dev
->
¥iv©e_öt
 = 1;

414 
	`sh™n⁄_n‹_ußge
();

417 
	`sh™n⁄_n‹_ußge
();

418  
ERR
;

422 i‡(1 !(
¨gc
 - 
›töd
) && 3 != (argc - optind) && 4 != (argc - optind)) {

423 
	`sh™n⁄_n‹_ußge
();

424  
ERR
;

427 i‡(!
	`°rcmp
("îa£", 
¨gv
[
›töd
])) {

428 
n‹
 = 
	`sh™n⁄_n‹_öô
(
dev
);

430 i‡((
¨gc
 - 
›töd
) != 3) {

431 
	`sh™n⁄_n‹_ußge
();

432  
ERR
;

435 
°¨t
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 0x10);

436 
Àngth
 = 
	`°πoul
(
¨gv
[
›töd
 + 2], 
NULL
, 10);

438 
rc
 = 
	`n‹_îa£
(
dev
, 
n‹
, 
°¨t
, 
Àngth
);

439 } i‡(!
	`°rcmp
("wrôe", 
¨gv
[
›töd
])) {

440 
n‹
 = 
	`sh™n⁄_n‹_öô
(
dev
);

442 i‡((
¨gc
 - 
›töd
) != 3) {

443 
	`sh™n⁄_n‹_ußge
();

444  
ERR
;

447 
°¨t
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 0x10);

448 
fd
 = 
	`›í
(
¨gv
[
›töd
 + 2], 
O_RDONLY
, 0666);

449 i‡(
fd
 < 0) {

450 
	`≥º‹
("Open file failed: ");

451  
ERR
;

453 i‡(
	`f°©
(
fd
, &
°a
)) {

454 
	`≥º‹
("Fstat file failed: ");

455  
ERR
;

458 
buf
 = 
	`mÆloc
(
°a
.
°_size
);

459 i‡(
NULL
 =
buf
) {

460 
	`¥ötf
("Malloc failed\n");

461  
ERR
;

463 i‡(
	`ªad
(
fd
, 
buf
, 
°a
.
°_size
) != sta.st_size) {

464 
	`≥º‹
("Read file failed: ");

465  
ERR
;

468 
rc
 = 
	`n‹_wrôe
(
dev
, 
n‹
, 
buf
, 
°¨t
, 
°a
.
°_size
);

469 
	`‰ì
(
buf
);

470 } i‡(!
	`°rcmp
("ªad", 
¨gv
[
›töd
])) {

471 
n‹
 = 
	`sh™n⁄_n‹_öô
(
dev
);

473 i‡((
¨gc
 - 
›töd
) != 4) {

474 
	`sh™n⁄_n‹_ußge
();

475  
ERR
;

478 
°¨t
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 0x10);

479 
Àngth
 = 
	`°πoul
(
¨gv
[
›töd
 + 2], 
NULL
, 10);

480 
fd
 = 
	`›í
(
¨gv
[
›töd
 + 3], 
O_RDWR
|
O_TRUNC
|
O_CREAT
, 0666);

481 i‡(
fd
 < 0) {

482 
	`≥º‹
("Open file failed: ");

483  
ERR
;

486 
buf
 = 
	`mÆloc
(
Àngth
);

487 i‡(
NULL
 =
buf
) {

488 
	`¥ötf
("Malloc failed\n");

489  
ERR
;

491 
rc
 = 
	`n‹_ªad
(
dev
, 
n‹
, 
buf
, 
°¨t
, 
Àngth
, 0);

493 i‡(!
rc
) {

494 i‡(
	`wrôe
(
fd
, 
buf
, 
Àngth
) !=Üength) {

495 
	`≥º‹
("Write file failed: ");

496  
ERR
;

499 
	`‰ì
(
buf
);

500 } i‡(!
	`°rcmp
("ªlﬂd", 
¨gv
[
›töd
])) {

501 i‡((
¨gc
 - 
›töd
) != 1)

502  
ERR
;

503 
dev
->
	`iowrôe32
(dev, 0x80000000, 0x33);

504 } i‡(!
	`°rcmp
("cklﬂd", 
¨gv
[
›töd
])) {

505 i‡((
¨gc
 - 
›töd
) != 1)

506  
ERR
;

507 
	`¥ötf
("%08X\n", 
dev
->
	`i‹ód32
(dev, 0x33));

508 } i‡(!
	`°rcmp
("check-ídün", 
¨gv
[
›töd
])) {

509 
n‹
 = 
	`sh™n⁄_n‹_öô
(
dev
);

511 
	`¥öt
("%d\n", !
	`°rcmp
(
n‹
->
«me
, "spi") ? 0 : 1);

513 
	`sh™n⁄_n‹_ußge
();

514  
ERR
;

517 
	`exô_n‹Êash
(
n‹
);

518  
rc
;

519 
	}
}

521 
	$sh™n⁄_ªad_n‹
(
sh™n⁄_dev
 *
dev
, *
buf
, 
°¨t
, 
Àn
)

523 
rc
 = 
ERR
;

524 
n‹Êash
 *
n‹
;

526 
n‹
 = 
	`sh™n⁄_n‹_öô
(
dev
);

527 
rc
 = 
	`n‹_ªad
(
dev
, 
n‹
, 
buf
, 
°¨t
, 
Àn
, 1);

529 
	`exô_n‹Êash
(
n‹
);

530  
rc
;

531 
	}
}

	@parse.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

10 
	~<˘y≥.h
>

12 
	~"toﬁ.h
"

14 
	#PARSE_MEMBER
(
ty≥
, 
membî
, 
membî_°r
, 
«me
, 
pv
) \

16 
vÆue
; \

18 i‡(
pv
[0] == '0' && (pv[1] == 'x' ||Öv[1] == 'X')) \

19 
vÆue
 = 
	`°πoul
(
pv
, 
NULL
, 16); \

21 
vÆue
 = 
	`°πoul
(
pv
, 
NULL
, 10); \

23 i‡(!
	`°rcmp
(
«me
, 
membî_°r
)) { \

24 
ty≥
->
membî
 = 
vÆue
; \

27 } 0)

	)

33 
	$gë_Êashlib_£˘i⁄
(
Êash_id
 
fid
, *
£˘i⁄
)

35 
FILE
 *
Â
;

36 *
p
, *
íd±r
, 
löe
[256];

37 
Êash_id
 
lib_fid
;

38 
i
;

40 i‡((
Â
 = 
	`f›í
("Êash", "r")Ë=
NULL
) {

41 
	`¥ötf
("%s(): o≥¿ÊashÜib fûêÁûed\n", 
__func__
);

42 
	`exô
(1);

45 
	`fgës
(
löe
, ÷öe), 
Â
Ë!
NULL
) {

46 i‡('#' =
löe
[0] || '\r' ==Üine[0] || '\n' ==Üine[0])

49 
p
 = 
löe
;

50 *
p
 != '\r' && *p != '\n')Ö++;

51 *
p
 = '\0';

53 i‡('[' !
löe
[0])

56 
	`°r˝y
(
£˘i⁄
, 
löe
);

58 
	`fgës
(
löe
, ÷öe), 
Â
);

59 i‡(
	`°∫cmp
(
löe
, "id=", 3)) {

60 
	`¥ötf
("InvÆid fœshÜib f‹m©: %s\n", 
£˘i⁄
);

61 
	`exô
(
EXIT_FAILURE
);

64 
p
 = 
löe
;

65 *
p
 != '=')Ö++;

66 
p
++;

68 
i
 = 0; i < 8; i++) {

69 
lib_fid
.
byãid
[
i
] = 
	`°πoul
(
p
, &
íd±r
, 0x10);

70 
p
 = 
íd±r
 + 1;

72 i‡(
lib_fid
.
l⁄gid
 =
fid
.longid)

76 
	`°r˝y
(
£˘i⁄
, "unknown");

77 
	`f˛o£
(
Â
);

78  
ERR
;

79 
	}
}

81 
	$Êashfûe_membî
(
sh™n⁄_dev
 *
dev
, 
u§_Êash
 *
Êash
, *
«me
, *
pv
)

83 
	`PARSE_MEMBER
(
Êash
, 
nblk
, "blk_num", 
«me
, 
pv
);

84 
	`PARSE_MEMBER
(
Êash
, 
≈age
, "∑ge_num", 
«me
, 
pv
);

85 
	`PARSE_MEMBER
(
Êash
, 
∑ge_size_shi·
, "∑ge_size_shi·", 
«me
, 
pv
);

86 
	`PARSE_MEMBER
(
Êash
, 
oob_size
, "oob_size", 
«me
, 
pv
);

87 
	`PARSE_MEMBER
(
Êash
, 
lun_mask
, "lun_mask", 
«me
, 
pv
);

88 
	`PARSE_MEMBER
(
Êash
, 
≈œ√
, "∂™e_num", 
«me
, 
pv
);

89 
	`PARSE_MEMBER
(
Êash
, 
∂™e_mask
, "∂™e_mask", 
«me
, 
pv
);

91 i‡(!
	`°rcmp
(
«me
, "ifmode")) {

92 i‡(!
	`°∫cmp
(
pv
, "async", 5))

93 
Êash
->
ifmode
 = 
FLASH_IFMODE_ASYNC
;

94 i‡(!
	`°∫cmp
(
pv
, "sync", 4))

95 
Êash
->
ifmode
 = 
FLASH_IFMODE_SYNC
;

96 i‡(!
	`°∫cmp
(
pv
, "toggle", 6))

97 
Êash
->
ifmode
 = 
FLASH_IFMODE_TOGGLE
;

99 
out
;

103 i‡(!
	`°rcmp
(
«me
, "factory_ivb")) {

104 
i
;

105 *
ph
, *
≥
 = 
pv
;

107 
i
 = 0; i < 8; i++)

108 
Êash
->
Á˘‹y_ivb
[
i
].
row
 = -1;

110 
i
 = 0;

111 *
≥
 != '\r' && *pe != '\n') {

112 i‡(*
≥
 != '[')

113 
out
;

114 
≥
++;

117 
ph
 = 
≥
;

118 
≥
 = 
	`°rchr
(
ph
, ',');

119 i‡(
NULL
 =
≥
)

120 
out
;

121 *
≥
++ = '\0';

122 
Êash
->
Á˘‹y_ivb
[
i
].
row
 = 
	`°πoul
(
ph
, 
NULL
, 10);

125 
ph
 = 
≥
;

126 
≥
 = 
	`°rchr
(
ph
, ',');

127 i‡(
NULL
 =
≥
)

128 
out
;

129 *
≥
++ = '\0';

130 
Êash
->
Á˘‹y_ivb
[
i
].
lo_cﬁ
 = 
	`°πoul
(
ph
, 
NULL
, 10Ë* (
dev
->
iowidth
 - dev->
vÆid_8bô
);

133 
ph
 = 
≥
;

134 
≥
 = 
	`°rchr
(
ph
, ']');

135 i‡(
NULL
 =
≥
)

136 
out
;

137 *
≥
++ = '\0';

138 
Êash
->
Á˘‹y_ivb
[
i
].
hi_cﬁ
 = (
	`°πoul
(
ph
, 
NULL
, 10Ë+ 1Ë* (
dev
->
iowidth
 - dev->
vÆid_8bô
) - 1;

140 
	`as£π
(
Êash
->
Á˘‹y_ivb
[
i
].
hi_cﬁ
 >Êash->Á˘‹y_ivb[i].
lo_cﬁ
);

143 
	`isbœnk
(*
≥
))Öe++;

144 
i
++;

155 i‡(!
	`°rcmp
(
«me
, "drvmode")) {

156 
i
;

157 *
íd±r
, *
p
 = 
pv
;

159 
	`bzîo
(
Êash
->
drv£âög
.
d©a
, (flash->drvsetting.data));

161 i‡(!
	`°∫cmp
(
p
, "None", 4))

164 i‡(*
p
 != '[')

165 
out
;

166 
p
++;

168 
i
 = 0; i < (
Êash
->
drv£âög
.
d©a
); i++){

169 
Êash
->
drv£âög
.
d©a
[
i
] = 
	`°πoul
(
p
, &
íd±r
, 16);

170 
Êash
->
drv£âög
.
d©™um
++;

172 i‡(*
íd±r
 == ',') {

173 
p
 = 
íd±r
 + 1;

175 } i‡(*
íd±r
 == ']') {

178 
out
;

181 
	`as£π
(
Êash
->
drv£âög
.
d©™um
 > 2);

192 i‡(!
	`°rcmp
(
«me
, "id")) {

193 
i
;

194 *
p
, *
íd±r
;

196 
p
 = 
pv
;

197 
i
 = 0; i < 8; i++) {

198 
Êash
->
id
.
byãid
[
i
] = 
	`°πoul
(
p
, &
íd±r
, 0x10);

199 
p
 = 
íd±r
 + 1;

202 
Êash
->
víd‹_id
 = fœsh->
id
.
byãid
[0];

203 
Êash
->
devi˚_id
 = fœsh->
id
.
byãid
[1];

204 
Êash
->
„©uª_id
 = fœsh->
id
.
byãid
[2];

209 
out
:

210 
	`¥ötf
("ˇn`à∑r£ fœsh c⁄fig: %s\n", 
«me
);

211  
ERR
;

212 
	}
}

217 
	$dëaûs_Êash
(
sh™n⁄_dev
 *
dev
, 
u§_Êash
 *
Êash
)

219 
rc
 = 
ERR
;

220 
FILE
 *
Â
;

221 
löe
[256], *
p
, *
pm
, *
pv
;

223 i‡((
Â
 = 
	`f›í
("Êash", "r")Ë=
NULL
) {

224 
	`¥ötf
("%s(): o≥¿ÊashÜib fûêÁûed\n", 
__func__
);

225 
	`exô
(
rc
);

228 
	`fgës
(
löe
, ÷öe), 
Â
Ë!
NULL
) {

229 i‡('#' =
löe
[0] || '\r' ==Üine[0] || '\n' ==Üine[0])

232 
p
 = 
löe
;

233 *
p
 != '\r' && *p != '\n')Ö++;

234 *
p
 = '\0';

236 i‡(
	`°rcmp
(
Êash
->
«me
, 
löe
))

240 
	`fgës
(
löe
, ÷öe), 
Â
Ë!
NULL
) {

241 i‡('#' =
löe
[0] || '\r' ==Üine[0] || '\n' ==Üine[0])

244 i‡('[' =
löe
[0]) {

245 
rc
 = 0;

246 
íd
;

249 
pm
 = 
pv
 = 
löe
;

250 *
pv
 != '=')Öv++;

251 *
pv
='\0';

252 
pv
++;

254 i‡(
	`Êashfûe_membî
(
dev
, 
Êash
, 
pm
, 
pv
)) {

255 
rc
 = 
ERR
;

256 
íd
;

259 
rc
 = 0;

262 
íd
:

263 
Êash
->
∑ge_size_shi·
 +(
dev
->
iowidth
 - 1 - dev->
vÆid_8bô
);

264 
Êash
->
oob_size
 *(
dev
->
iowidth
 - dev->
vÆid_8bô
);

266 
Êash
->
∑ge_size
 = 1 << fœsh->
∑ge_size_shi·
;

267 
Êash
->
ítúe_∑ge_size
 = fœsh->
∑ge_size
 + fœsh->
oob_size
;

270 i‡(
dev
->
fblocks
) {

271 i‡(
dev
->
fblocks
 > 
Êash
->
nblk
) {

272 
	`¥ötf
("User input flash blockÇumberÜargerÅhanÖhysical blocks\n");

273 
	`f˛o£
(
Â
);

274  
ERR
;

276 
Êash
->
nblk
 = 
dev
->
fblocks
;

279 
	`f˛o£
(
Â
);

280  
rc
;

281 
	}
}

283 
	$∑r£_Êash
(
sh™n⁄_dev
 *
dev
)

285 
lun
, 
phythªad
, 
off
, 
timeout
;

286 
__u64
 
°©us
;

287 
Êash_id
 
fid
[256];

288 
sh_ª£t
 sh_reset;

289 
sh_ªadid
 sh_readid;

290 
found_id
 = 0;

292 
	`as£π
(0 !
dev
->
fd
);

293 
	`as£π
(
NULL
 !
dev
->
phythªad_mem
);

295 
	`mem£t
(
fid
, 0x5A, (fid));

297 
lun
 = 0;Üu¿< 
dev
->
c⁄fig
->
luns
;Üun++) {

298 
phythªad
 = 
	`gë_phych™√l
(
dev
, 
lun
Ë* dev->
hw_¡hªad
 + 
	`gë_phythªad
(dev,Üun);

299 
off
 = 16 * 
	`gë_phylun
(
dev
, 
lun
);

301 
dev
->
	`iowrôe32
(dev, 
	`U64_LOW_32
(dev->
phythªad_mem
[
phythªad
].
dma_addr
),

302 
dev
->
luƒeg_dwoff
 + 
phythªad
 * dev->
luƒeg_dwsize
 + 
HW_cmdq_±e_lo
);

303 
dev
->
	`iowrôe32
(dev, 
	`U64_HIGH_32
(dev->
phythªad_mem
[
phythªad
].
dma_addr
),

304 
dev
->
luƒeg_dwoff
 + 
phythªad
 * dev->
luƒeg_dwsize
 + 
HW_cmdq_±e_hi
);

306 
dev
->
	`iowrôe32
(dev, 
	`U64_LOW_32
(dev->
phythªad_mem
[
phythªad
].
dma_addr
 + 
PAGE_SIZE
),

307 
dev
->
luƒeg_dwoff
 + 
phythªad
 * dev->
luƒeg_dwsize
 + 
HW_cmpq_±e_lo
);

308 
dev
->
	`iowrôe32
(dev, 
	`U64_HIGH_32
(dev->
phythªad_mem
[
phythªad
].
dma_addr
 + 
PAGE_SIZE
),

309 
dev
->
luƒeg_dwoff
 + 
phythªad
 * dev->
luƒeg_dwsize
 + 
HW_cmpq_±e_hi
);

311 
	`mem£t
(&
sh_ª£t
, 0x00, (sh_reset));

312 
sh_ª£t
.
›code
 = 
sh_wrôîeg_cmd
;

313 
sh_ª£t
.
rsv
[5] = 0xFF;

314 
sh_ª£t
.
lun
 = 
	`log2phy_lun
(
dev
,Üun);

316 
dev
->
	`wrôe_mem
(dev, dev->
phythªad_mem
[
phythªad
].
kî√l_addr
 + 
off
, &
sh_ª£t
, 8);

317 
dev
->
	`iowrôe32
(dev, 
off
 + 8, dev->
luƒeg_dwoff
 + 
phythªad
 * dev->
luƒeg_dwsize
 + 
HW_cmdq_hód
);

319 
timeout
 = 0;

320 
dev
->
	`i‹ód32
(dev, dev->
luƒeg_dwoff
 + 
phythªad
 * dev->
luƒeg_dwsize
 + 
HW_cmpq_hód
Ë!
off
 + 8) {

321 
	`u¶ìp
(100);

322 i‡(
timeout
++ > 
RUNCMDQ_US_TIMEOUT
) {

323 
	`mem£t
(&
fid
[
lun
], 0xAA, 8);

327 i‡(
timeout
 > 
RUNCMDQ_US_TIMEOUT
)

330 
dev
->
	`ªad_mem
(dev, &
°©us
, dev->
phythªad_mem
[
phythªad
].
kî√l_addr
 + 
PAGE_SIZE
 + 
off
, (status));

331 
	`À64_to_˝us
(&
°©us
);

332 i‡(!
	`check_°©us
(
dev
, 
sh_ª£t_cmd
, 
°©us
)) {

333 
	`mem£t
(&
fid
[
lun
], 0xBB, 7);

334 
fid
[
lun
].
byãid
[7] = (
__u8
)
°©us
;

337 i‡(
found_id
)

341 
	`mem£t
(&
sh_ªadid
, 0x00, (sh_readid));

342 
sh_ªadid
.
›code
 = 
sh_ªadid_cmd
;

343 
sh_ªadid
.
addr
 = 0x00;

344 
sh_ªadid
.
cmd
 = 0x90;

345 
sh_ªadid
.
nbyã
 = 8;

346 
sh_ªadid
.
lun
 = 
	`log2phy_lun
(
dev
,Üun);

348 
dev
->
	`wrôe_mem
(dev, dev->
phythªad_mem
[
phythªad
].
kî√l_addr
 + 
off
 + 8, &
sh_ªadid
, 8);

349 
dev
->
	`iowrôe32
(dev, 
off
 + 16, dev->
luƒeg_dwoff
 + 
phythªad
 * dev->
luƒeg_dwsize
 + 
HW_cmdq_hód
);

351 
timeout
 = 0;

352 
dev
->
	`i‹ód32
(dev, dev->
luƒeg_dwoff
 + 
phythªad
 * dev->
luƒeg_dwsize
 + 
HW_cmpq_hód
Ë!
off
 + 16) {

353 
	`u¶ìp
(1);

354 i‡(
timeout
++ > 
RUNCMDQ_US_TIMEOUT
) {

355 
	`mem£t
(&
fid
[
lun
], 0xCC, 8);

359 i‡(
timeout
 > 
RUNCMDQ_US_TIMEOUT
)

363 
dev
->
	`ªad_mem
(dev, &
fid
[
lun
], dev->
phythªad_mem
[
phythªad
].
kî√l_addr
 + 
PAGE_SIZE
 + 
off
 + 8, 8);

366 i‡(!
	`gë_Êashlib_£˘i⁄
(
fid
[
lun
], 
dev
->
Êash
->
«me
))

367 
found_id
 = 1;

370 i‡(!
found_id
) {

371 
	`¥ötf
("ERR:állÜun invalid! (AA,ÑesetÅimeout; BB,Ñeset status failedÑecorded inÜast ID; CC,ÑeadidÅimeout; 5A, software bug)\n");

372 
lun
 = 0;Üu¿< 
dev
->
c⁄fig
->
luns
;Üun++) {

373 
	`¥ötf
("phylun=%03d hwchannel-%02d hwthread-%02d hwlun-%02d: ",

374 
	`log2phy_lun
(
dev
, 
lun
),

375 
	`gë_phych™√l
(
dev
, 
lun
),

376 
	`gë_phythªad
(
dev
, 
lun
),

377 
	`gë_phylun
(
dev
, 
lun
));

378 
	`¥_u8_¨øy_n›ªfix
(&
fid
[
lun
], 8, 8);

380  
ERR
;

384 i‡(
	`dëaûs_Êash
(
dev
, dev->
Êash
))

385  
ERR
;

388 
	}
}

390 
	$Êash_öfo
(
sh™n⁄_dev
 *
dev
, 
Êash_id
 
fid
, 
u§_Êash
 *
Êash
)

392 
	`gë_Êashlib_£˘i⁄
(
fid
, 
Êash
->
«me
);

394 i‡(!
	`°rcmp
(
Êash
->
«me
, "unknown"))

397 i‡(
	`dëaûs_Êash
(
dev
, 
Êash
))

401 
	}
}

404 
	gncw_m13_8b
[][2] = {

412 
	gncw_m13_16b
[][2] = {

418 
	gncw_m14_16b
[][2] = {

424 
	$gë_codew‹d_size_‰omhw
(
sh™n⁄_dev
 *
dev
, 
£˘‹_size
, 
£˘‹_ncodew‹d
)

426 
dev
->
	`iowrôe32
(dev, (dev->
hw_c⁄fig
->
hw_fuŒ_£˘‹_nbyã
 << 16Ë| (
£˘‹_ncodew‹d
 << 8Ë| (
£˘‹_size
 / 512), 0xC1);

427  
dev
->
	`i‹ód32
(dev, 0xC4) >> 16;

428 
	}
}

430 
	$›timÆ_ncodew‹d
(
sh™n⁄_dev
 *
dev
, 
£˘‹_size
)

432 
i
, 
codew‹d_size
, 
∑ge_n£˘‹
;

433 (*
ncw
)[2], 
ncw_˙t
;

435 i‡(
dev
->
iowidth
 =1 && dev->
mmode
 == 13) {

436 
ncw
 = 
ncw_m13_8b
;

437 
ncw_˙t
 = (
ncw_m13_8b
) / (2 * ());

438 } i‡(
dev
->
iowidth
 =2 && dev->
mmode
 == 13) {

439 
ncw
 = 
ncw_m13_16b
;

440 
ncw_˙t
 = (
ncw_m13_16b
) / (2 * ());

441 } i‡(
dev
->
iowidth
 =2 && dev->
mmode
 == 14) {

442 
ncw
 = 
ncw_m14_16b
;

443 
ncw_˙t
 = (
ncw_m14_16b
) / (2 * ());

445 
	`¥ötf
("%s(): InvÆid iowidth %dánd mmodê%d\n", 
__func__
, 
dev
->
iowidth
, dev->
mmode
);

446 
	`exô
(
EXIT_FAILURE
);

450 
dev
->
c⁄fig
->
›timÆ_∑ge_n£˘‹
 = 0;

452 
i
 = 0; i < 
ncw_˙t
; i++) {

453 i‡(
£˘‹_size
 !
ncw
[
i
][0])

456 
codew‹d_size
 = 
	`gë_codew‹d_size_‰omhw
(
dev
, 
£˘‹_size
, 
ncw
[
i
][1]);

457 
∑ge_n£˘‹
 = 
dev
->
Êash
->
ítúe_∑ge_size
 / (
codew‹d_size
 * 
ncw
[
i
][1]);

459 i‡(
∑ge_n£˘‹
 >
dev
->
Êash
->
∑ge_size
 / 
£˘‹_size
) {

460 
dev
->
c⁄fig
->
›timÆ_∑ge_n£˘‹
 = dev->
Êash
->
∑ge_size
 / 
£˘‹_size
;

464 i‡(
∑ge_n£˘‹
 > 
dev
->
c⁄fig
->
›timÆ_∑ge_n£˘‹
)

465 
dev
->
c⁄fig
->
›timÆ_∑ge_n£˘‹
 = 
∑ge_n£˘‹
;

469 
dev
->
c⁄fig
->
›timÆ_ncodew‹d
 = 0;

471 
i
 = 0; i < 
ncw_˙t
; i++) {

472 i‡(
£˘‹_size
 !
ncw
[
i
][0])

475 
codew‹d_size
 = 
	`gë_codew‹d_size_‰omhw
(
dev
, 
£˘‹_size
, 
ncw
[
i
][1]);

476 i‡(
dev
->
c⁄fig
->
›timÆ_∑ge_n£˘‹
 * 
codew‹d_size
 * 
ncw
[
i
][1] > dev->
Êash
->
ítúe_∑ge_size
)

479 i‡(
ncw
[
i
][1] > 
dev
->
c⁄fig
->
›timÆ_ncodew‹d
) {

480 
dev
->
c⁄fig
->
›timÆ_ncodew‹d
 = 
ncw
[
i
][1];

481 
dev
->
c⁄fig
->
›timÆ_codew‹d_size
 = 
codew‹d_size
;

485 i‡(0 =
dev
->
c⁄fig
->
›timÆ_∑ge_n£˘‹
 || 0 =dev->c⁄fig->
›timÆ_ncodew‹d
 || 0 =dev->c⁄fig->
›timÆ_codew‹d_size
) {

486 
	`¥ötf
("FATAL: %s() optimal_page_nsector=%d optimal_ncodeword=%d\n",

487 
__func__
, 
dev
->
c⁄fig
->
›timÆ_∑ge_n£˘‹
, dev->c⁄fig->
›timÆ_ncodew‹d
);

488 
	`exô
(
EXIT_FAILURE
);

495  
dev
->
c⁄fig
->
›timÆ_ncodew‹d
;

496 
	}
}

498 
	#GET_MEMBER
(
ty≥
, 
membî
) \

499 
	`¥ötf
(""#membî" = %d\n", 
ty≥
->
membî
); \

500 

	)

501 
	#SET_MEMBER
(
ty≥
, 
membî
, 
def
, 
≠≥nd
, 
Â
) \

503 *
p
, 
buf
[256]; \

504 
	`¥ötf
("I≈uà"#membî"%†[deÁu… %d]: ", 
≠≥nd
, 
def
);\

505 
	`fÊush
(
°dout
); \

506 
	`fgës
(
buf
, (buf), 
°dö
); \

507 
p
 = 
buf
; \

508 
	`isbœnk
(*
p
))Ö++; \

509 i‡(*
p
 == '\n' || *p == '\r') \

510 
ty≥
->
membî
 = 
def
; \

512 
ty≥
->
membî
 = 
	`°πoul
(
p
, 
NULL
, 10); \

514 i‡(
NULL
 !
Â
) \

515 
	`Ârötf
(
Â
, ""#membî"=%d\n", 
ty≥
->
membî
); \

516 } 0)

	)

518 
	#NONE
 ""

	)

523 
	$ˇlcuœã_ödúe˘_c⁄fig
(
sh™n⁄_dev
 *
dev
)

525 
i
;

526 (*
ncw
)[2], 
ncw_˙t
;

528 i‡(
dev
->
c⁄fig
->
nch™√l
 > dev->
hw_nch™√l
 ||

529 
dev
->
c⁄fig
->
¡hªad
 > dev->
hw_¡hªad
 ||

530 
dev
->
c⁄fig
->
∆un
 > dev->
hw_∆un
) {

531 
	`¥ötf
("ERR: your config channel/thread/lunÜargeÅhan hardware supported!\n");

532  
ERR
;

535 
dev
->
c⁄fig
->
thªads
 = dev->c⁄fig->
nch™√l
 * dev->c⁄fig->
¡hªad
;

536 
dev
->
c⁄fig
->
luns
 = dev->c⁄fig->
thªads
 * dev->c⁄fig->
∆un
;

537 
dev
->
c⁄fig
->
£˘‹_size
 = 1 << dev->c⁄fig->
£˘‹_size_shi·
;

539 
dev
->
c⁄fig
->
drvmode
 = dev->
Êash
->
drv£âög
.
d©a
[2];

542 i‡(
dev
->
iowidth
 =1 && dev->
mmode
 == 13) {

543 
ncw
 = 
ncw_m13_8b
;

544 
ncw_˙t
 = (
ncw_m13_8b
) / (2 * ());

545 } i‡(
dev
->
iowidth
 =2 && dev->
mmode
 == 13) {

546 
ncw
 = 
ncw_m13_16b
;

547 
ncw_˙t
 = (
ncw_m13_16b
) / (2 * ());

548 } i‡(
dev
->
iowidth
 =2 && dev->
mmode
 == 14) {

549 
ncw
 = 
ncw_m14_16b
;

550 
ncw_˙t
 = (
ncw_m14_16b
) / (2 * ());

552 
	`¥ötf
("%s(): InvÆid iowidth %dánd mmodê%d\n", 
__func__
, 
dev
->
iowidth
, dev->
mmode
);

553 
	`exô
(
EXIT_FAILURE
);

556 
i
 = 0; i < 
ncw_˙t
; i++) {

557 i‡(
dev
->
c⁄fig
->
£˘‹_size
 =
ncw
[
i
][0] && dev->c⁄fig->
£˘‹_ncodew‹d
 ==Çcw[i][1])

560 i‡(
i
 >
ncw_˙t
) {

561 
	`¥ötf
("### Invalid sector_sizeánd sector_ncodeword ###\n");

565 i‡(
dev
->
c⁄fig
->
£˘‹_size
 =4096 && dev->c⁄fig->
£˘‹_ncodew‹d
 == 1)

566 
	`as£π
(
dev
->
c⁄fig
->
ecc_mode
 =
ECCMODE_DISABLE
);

568 
dev
->
	`iowrôe32
(dev, (dev->
hw_c⁄fig
->
hw_fuŒ_£˘‹_nbyã
 << 16) |

569 (
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 << 8) |

570 (
dev
->
c⁄fig
->
£˘‹_size
 / 512), 0xC1);

571 
dev
->
c⁄fig
->
codew‹d_size
 = dev->
	`i‹ód32
(dev, 0xC4) >> 16;

574 i‡(
ECCMODE_DISABLE
 =
dev
->
c⁄fig
->
ecc_mode
) {

575 
dev
->
c⁄fig
->
codew‹d_size
 = dev->c⁄fig->
£˘‹_size
 + 8;

576 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = 1;

580 
dev
->
c⁄fig
->
fuŒ_£˘‹_size
 = dev->c⁄fig->
£˘‹_ncodew‹d
 * dev->c⁄fig->
codew‹d_size
;

582 
dev
->
c⁄fig
->
∑ge_n£˘‹
 = dev->
Êash
->
ítúe_∑ge_size
 / (dev->c⁄fig->
£˘‹_ncodew‹d
 * dev->c⁄fig->
codew‹d_size
);

583 
dev
->
c⁄fig
->
chunk_n£˘‹
 = dev->c⁄fig->
∑ge_n£˘‹
 * dev->c⁄fig->
≈œ√
;

585 
dev
->
c⁄fig
->
nd©a
 = dev->c⁄fig->
∑ge_n£˘‹
 * dev->c⁄fig->
£˘‹_size
;

586 
dev
->
c⁄fig
->
nmëa
 = dev->c⁄fig->
∑ge_n£˘‹
 * 
METADATA_SIZE
;

587 
dev
->
c⁄fig
->
chunk_nd©a
 = dev->c⁄fig->
≈œ√
 * dev->c⁄fig->
nd©a
;

588 
dev
->
c⁄fig
->
chunk_nmëa
 = dev->c⁄fig->
≈œ√
 * dev->c⁄fig->
nmëa
;

591 
	}
}

593 #i‚de‡
__RELEASE__


594 
	$öãø˘ive_c⁄fig
(
sh™n⁄_dev
 *
dev
, 
FILE
 *
Â
)

596 
def_ifmode
;

598 
dev
->
Êash
->
ifmode
) {

599 
FLASH_IFMODE_ASYNC
:

600 
def_ifmode
 = 
IFMODE_ASYNC
;

602 
FLASH_IFMODE_SYNC
:

603 
def_ifmode
 = 
IFMODE_SYNC
;

605 
FLASH_IFMODE_TOGGLE
:

606 
def_ifmode
 = 
IFMODE_TOGGLE
;

609 
	`¥ötf
("BUG %s(): %d\n", 
__func__
, 
__LINE__
);

610 
	`exô
(
EXIT_FAILURE
);

613 i‡(
dev
->
unß„_cfgabÀ
) {

614 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
nch™√l
, dev->
hw_nch™√l
, 
NONE
, 
Â
);

615 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
¡hªad
, dev->
hw_¡hªad
, 
NONE
, 
Â
);

616 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
∆un
, dev->
hw_∆un
, 
NONE
, 
Â
);

618 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
£˘‹_size_shi·
, 12, " (9 512B, 12 4096B)", 
Â
);

619 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
£˘‹_ncodew‹d
, 
	`›timÆ_ncodew‹d
(dev, 1 << dev->c⁄fig->
£˘‹_size_shi·
), 
NONE
, 
Â
);

620 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
u£r_£˘‹_size_shi·
, 9, 
NONE
, 
Â
);

621 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
≈œ√
, (dev->
Êash
->≈œ√ <dev->
max∂™es
Ë? dev->Êash->≈œ√ : dev->max∂™es, 
NONE
, 
Â
);

622 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
ifmode
, 
def_ifmode
, " (IO i¡îÁ˚. 0ásync, 1ÅoggÀ, 3 sync)", 
Â
);

623 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
async_cy˛es
, 2, " (asyn¯modêtimög. 2 3 o∏4)", 
Â
);

624 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
ecc_mode
, 0, " (0É«bÀ, 1 dißbÀ, 2 o∆y by∑s†s¸ambÀr)", 
Â
);

625 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
øid_mode
, 1, " (0 dißbÀ, 1É«bÀ)", 
Â
);

626 
	`SET_MEMBER
(
dev
->
c⁄fig
, 
ovî¥ovisi⁄_øã
, 20, 
NONE
, 
Â
);

627 
	}
}

629 
	$sûít_c⁄fig
(
sh™n⁄_dev
 *
dev
)

631 
def_ifmode
;

633 
dev
->
Êash
->
ifmode
) {

634 
FLASH_IFMODE_ASYNC
:

635 
def_ifmode
 = 
IFMODE_ASYNC
;

637 
FLASH_IFMODE_SYNC
:

638 
def_ifmode
 = 
IFMODE_SYNC
;

640 
FLASH_IFMODE_TOGGLE
:

641 
def_ifmode
 = 
IFMODE_TOGGLE
;

644 
	`¥ötf
("BUG %s(): %d\n", 
__func__
, 
__LINE__
);

645 
	`exô
(
EXIT_FAILURE
);

648 
dev
->
c⁄fig
->
nch™√l
 = dev->
hw_nch™√l
;

649 
dev
->
c⁄fig
->
¡hªad
 = dev->
hw_¡hªad
;

650 
dev
->
c⁄fig
->
∆un
 = dev->
hw_∆un
;

651 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = 12;

652 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = 
	`›timÆ_ncodew‹d
(dev, 1 << dev->c⁄fig->
£˘‹_size_shi·
);

653 
dev
->
c⁄fig
->
u£r_£˘‹_size_shi·
 = 9;

654 
dev
->
c⁄fig
->
≈œ√
 = (dev->
Êash
->≈œ√ <dev->
max∂™es
) ? dev->flash->nplane : dev->maxplanes;

655 i‡(
dev
->
m™uÆ_≈œ√
 && dev->m™uÆ_≈œ√ <dev->
c⁄fig
->
≈œ√
)

656 
dev
->
c⁄fig
->
≈œ√
 = dev->
m™uÆ_≈œ√
;

657 
dev
->
c⁄fig
->
ifmode
 = 
def_ifmode
;

658 
dev
->
c⁄fig
->
async_cy˛es
 = 2;

659 
dev
->
c⁄fig
->
ecc_mode
 = 0;

660 i‡(
dev
->
dißbÀ_ecc
)

661 
dev
->
c⁄fig
->
ecc_mode
 = 1;

662 
dev
->
c⁄fig
->
øid_mode
 = 1;

663 
dev
->
c⁄fig
->
ovî¥ovisi⁄_øã
 = 20;

665 
	`ˇlcuœã_ödúe˘_c⁄fig
(
dev
);

666 
	}
}

668 
	$¥öt_c⁄fig
(
sh™n⁄_dev
 *
dev
)

670 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
nch™√l
);

671 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
¡hªad
);

672 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
∆un
);

673 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
£˘‹_size_shi·
);

674 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
£˘‹_ncodew‹d
);

675 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
u£r_£˘‹_size_shi·
);

676 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
≈œ√
);

677 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
ifmode
);

678 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
async_cy˛es
);

679 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
ecc_mode
);

680 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
øid_mode
);

681 
	`GET_MEMBER
(
dev
->
c⁄fig
, 
ovî¥ovisi⁄_øã
);

682 
	}
}

684 
	$c⁄figfûe_membî
(
sh™n⁄_dev
 *
dev
, *
«me
, *
pv
)

686 i‡(
dev
->
unß„_cfgabÀ
) {

687 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
nch™√l
, "nch™√l", 
«me
, 
pv
);

688 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
¡hªad
, "¡hªad", 
«me
, 
pv
);

689 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
∆un
, "∆un", 
«me
, 
pv
);

691 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
£˘‹_size_shi·
, "£˘‹_size_shi·", 
«me
, 
pv
);

692 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
£˘‹_ncodew‹d
, "£˘‹_ncodew‹d", 
«me
, 
pv
);

693 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
u£r_£˘‹_size_shi·
, "u£r_£˘‹_size_shi·", 
«me
, 
pv
);

694 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
≈œ√
, "≈œ√", 
«me
, 
pv
);

695 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
ifmode
, "ifmode", 
«me
, 
pv
);

696 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
async_cy˛es
, "async_cy˛es", 
«me
, 
pv
);

697 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
ecc_mode
, "ecc_mode", 
«me
, 
pv
);

698 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
øid_mode
, "øid_mode", 
«me
, 
pv
);

699 
	`PARSE_MEMBER
(
dev
->
c⁄fig
, 
ovî¥ovisi⁄_øã
, "ovî¥ovisi⁄_øã", 
«me
, 
pv
);

701 
	`¥ötf
("ˇn`à∑r£ dev->c⁄fig c⁄fig: %s\n", 
«me
);

702  
ERR
;

703 
	}
}

708 
	$∑r£_c⁄fig_‰om_fûe
(
sh™n⁄_dev
 *
dev
)

710 
FILE
 *
Â
;

711 
löe
[256], *
pm
, *
pv
;

713 i‡(
NULL
 =(
Â
 = 
	`f›í
("config", "r")))

716 
NULL
 !
	`fgës
(
löe
, ÷öe), 
Â
)) {

717 i‡('#' =
löe
[0] || '\r' ==Üine[0] || '\n' ==Üine[0])

720 
pm
 = 
pv
 = 
löe
;

721 *
pv
 != '=')Öv++;

722 *
pv
='\0';

723 
pv
++;

725 i‡(
	`c⁄figfûe_membî
(
dev
, 
pm
, 
pv
)) {

726 
	`f˛o£
(
Â
);

731 
	`f˛o£
(
Â
);

732 i‡(
dev
->
c⁄fig
->
u£r_£˘‹_size_shi·
 > dev->c⁄fig->
£˘‹_size_shi·
) {

733 
	`¥ötf
("ERR: user_sector_size > sector_size\n");

734  
ERR
;

736  
	`ˇlcuœã_ödúe˘_c⁄fig
(
dev
);

737 
	}
}

739 
	$∑r£_c⁄fig
(
sh™n⁄_dev
 *
dev
)

741 
FILE
 *
Â
 = 
NULL
;

742 
löe
[256];

744 
dev
->
c⁄fig
->
h¨dw¨e_vîsi⁄
 = dev->
hw_sysöfo
->
fúmw¨e_èg
;

745 
dev
->
c⁄fig
->
so·w¨e_vîsi⁄
 = 2;

747 i‡(
dev
->
sûít_c⁄fig
) {

748 
	`sûít_c⁄fig
(
dev
);

749 
íd
;

752 i‡(!
dev
->
unß„_cfgabÀ
) {

753 
dev
->
c⁄fig
->
nch™√l
 = dev->
hw_nch™√l
;

754 
dev
->
c⁄fig
->
¡hªad
 = dev->
hw_¡hªad
;

755 
dev
->
c⁄fig
->
∆un
 = dev->
hw_∆un
;

759 i‡(!
	`∑r£_c⁄fig_‰om_fûe
(
dev
))

760 
íd
;

764 
Â
 = 
	`f›í
("config", "w");

765 i‡(
NULL
 =
Â
) {

766 
	`¥ötf
("Create file 'config' failed\n");

767  
ERR
;

770 
	`Ârötf
(
Â
, "#\n");

771 
	`Ârötf
(
Â
, "# Automatically generated file; DO NOT EDIT.\n");

772 
	`Ârötf
(
Â
, "# If you wantÅoÑedo config, it isÉasy: deleteÅhis file.\n");

773 
	`Ârötf
(
Â
, "#\n");

775 
	`öãø˘ive_c⁄fig
(
dev
, 
Â
);

777 
	`¥ötf
("\nYour input config is:\n");

778 
	`¥ötf
("=================================\n");

779 
	`¥öt_c⁄fig
(
dev
);

781 
	`¥ötf
("=================================\n");

782 
	`¥ötf
("Is correct? [y/n/quit]: ");

783 
	`fgës
(
löe
, ÷öe), 
°dö
);

785 i‡(
löe
[0] ='\n' ||Üöe[0]='\r' || 
	`tﬁowî
(line[0]) == 'y') {

786 i‡(
dev
->
c⁄fig
->
u£r_£˘‹_size_shi·
 > dev->c⁄fig->
£˘‹_size_shi·
) {

787 
	`¥ötf
("ERR: user_sector_size > sector_size\n");

791 i‡(
	`ˇlcuœã_ödúe˘_c⁄fig
(
dev
)) {

792 
	`¥ötf
("\nYou input invalid config,Ölease checkánd configágain...\n");

793 
	`f˛o£
(
Â
);

794 
Â
 = 
NULL
;

799 } i‡(
	`tﬁowî
(
löe
[0]) == 'q') {

800 
	`f˛o£
(
Â
);

801 
	`ªmove
("config");

804 
	`f˛o£
(
Â
);

805 
Â
 = 
NULL
;

810 
	`f˛o£
(
Â
);

811 
íd
:

812 
	`›timÆ_ncodew‹d
(
dev
, 1 << dev->
c⁄fig
->
£˘‹_size_shi·
);

813 i‡(
dev
->
c⁄fig
->
ecc_mode
 !
ECCMODE_DISABLE
 && dev->c⁄fig->
£˘‹_ncodew‹d
 !dev->c⁄fig->
›timÆ_ncodew‹d
) {

814 
	`¥öt
("Flash:Öage_size=%d oob_size=%dÉntire_page_size=%d.\n"

818 
dev
->
Êash
->
∑ge_size
, dev->Êash->
oob_size
, dev->Êash->
ítúe_∑ge_size
,

819 
dev
->
c⁄fig
->
›timÆ_ncodew‹d
, dev->c⁄fig->
›timÆ_codew‹d_size
, dev->c⁄fig->
›timÆ_∑ge_n£˘‹
,

820 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
, dev->c⁄fig->
codew‹d_size
, dev->c⁄fig->
∑ge_n£˘‹
);

822 
	`fgës
(
löe
, ÷öe), 
°dö
);

823 i‡(
	`°∫cmp
(
löe
, "force", 5))

824 
	`exô
(
EXIT_FAILURE
);

827 i‡(
dev
->
c⁄fig
->
ecc_mode
 !
ECCMODE_DISABLE
 && dev->c⁄fig->
∑ge_n£˘‹
 !dev->
Êash
->
∑ge_size
 / dev->c⁄fig->
£˘‹_size
) {

828 
	`¥öt
("You willÜoseÜots of capacity.Öage_size=%d oob_size=%d sector_size=%d sector_ncodeword=%d codeword_size=%dÖage_nsector=%d. "

829 "Aª you suª c⁄töuê[yes|no]: ", 
dev
->
Êash
->
∑ge_size
, dev->Êash->
oob_size
,

830 
dev
->
c⁄fig
->
£˘‹_size
, dev->c⁄fig->
£˘‹_ncodew‹d
, dev->c⁄fig->
codew‹d_size
, dev->c⁄fig->
∑ge_n£˘‹
);

832 
	`fgës
(
löe
, ÷öe), 
°dö
);

833 i‡(
	`°∫cmp
(
löe
, "yes", 3))

834 
	`exô
(
EXIT_FAILURE
);

837 i‡(0 =
dev
->
c⁄fig
->
nch™√l
 * dev->c⁄fig->
¡hªad
 * dev->c⁄fig->
∆un
) {

838 
	`¥ötf
("Invalid HWÖaras:Çchannel=%dÇthread=%dÇlun=%d. Remove config fileÅhenÅryágain.\n",

839 
dev
->
c⁄fig
->
nch™√l
, dev->c⁄fig->
¡hªad
, dev->c⁄fig->
∆un
);

840 
	`exô
(
EXIT_FAILURE
);

843 i‡(0xFF =
dev
->
c⁄fig
->
nch™√l
) {

844 
	`¥ötf
("nchannel=0xFF, maybe hwÉncounterÉrror\n");

845 
	`exô
(
EXIT_FAILURE
);

849 i‡(
dev
->
c⁄fig
->
≈œ√
 > dev->
Êash
->nplane) {

850 
	`¥ötf
("ERR: c⁄figÖœ√Çumbî %d i†œrgîÅh™ fœshÖœ√Çumbî %d\n", 
dev
->
c⁄fig
->
≈œ√
, dev->
Êash
->nplane);

851 
	`exô
(
EXIT_FAILURE
);

854 i‡(
dev
->
c⁄fig
->
≈œ√
 > dev->
max∂™es
) {

855 
	`¥ötf
("ERR: c⁄figÖœ√Çumbî %d i†œrgîÅh™ FPGA suµ‹ãdÖœ√Çumbî %d\n", 
dev
->
c⁄fig
->
≈œ√
, dev->
max∂™es
);

856 
	`exô
(
EXIT_FAILURE
);

859 i‡(!
dev
->
sûít_c⁄fig
 && dev->
c⁄fig
->
≈œ√
 < dev->
Êash
->nplane) {

860 
löe
[256];

862 
	`¥öt
("ConfigÇplane=%d will get optimalÖerformance. ButÇowÇplane=%d. Use itányway [yes|no]: ",

863 
dev
->
Êash
->
≈œ√
, dev->
c⁄fig
->nplane);

864 
	`fgës
(
löe
, ÷öe), 
°dö
);

865 i‡(
	`°∫cmp
(
löe
, "yes", 3))

866 
	`exô
(
EXIT_FAILURE
);

870 
	}
}

872 
	$∑r£_c⁄fig
(
sh™n⁄_dev
 *
dev
)

874 
dev
->
c⁄fig
->
nch™√l
 = dev->
hw_nch™√l
;

875 
dev
->
c⁄fig
->
¡hªad
 = dev->
hw_¡hªad
;

876 
dev
->
c⁄fig
->
∆un
 = dev->
hw_∆un
;

877 
dev
->
c⁄fig
->
£˘‹_size_shi·
 = 12;

878 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
 = 
	`›timÆ_ncodew‹d
(dev, 1 << dev->c⁄fig->
£˘‹_size_shi·
);

879 
dev
->
c⁄fig
->
u£r_£˘‹_size_shi·
 = 9;

880 
dev
->
c⁄fig
->
≈œ√
 = (dev->
Êash
->≈œ√ <dev->
max∂™es
) ? dev->flash->nplane : dev->maxplanes;

881 
dev
->
c⁄fig
->
ifmode
 = (
FLASH_IFMODE_TOGGLE
 =dev->
Êash
->ifmodeË? 
IFMODE_TOGGLE
 : 
IFMODE_SYNC
;

882 
dev
->
c⁄fig
->
async_cy˛es
 = 2;

883 
dev
->
c⁄fig
->
ecc_mode
 = 0;

884 
dev
->
c⁄fig
->
øid_mode
 = 1;

885 
dev
->
c⁄fig
->
ovî¥ovisi⁄_øã
 = 20;

886 
dev
->
c⁄fig
->
drvmode
 = dev->
Êash
->
drv£âög
.
d©a
[2];

887 
dev
->
c⁄fig
->
h¨dw¨e_vîsi⁄
 = dev->
hw_sysöfo
->
fúmw¨e_èg
;

888 
dev
->
c⁄fig
->
so·w¨e_vîsi⁄
 = 2;

890 i‡(
	`ˇlcuœã_ödúe˘_c⁄fig
(
dev
)) {

891 
	`¥ötf
("config failed!\n");

892  
ERR
;

896 
	}
}

	@req.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

11 
	~"toﬁ.h
"

14 
sh™n⁄_ªque°
 *
	$Æloc_ªque°_no_dma
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_cmd
 
›code
,

15 
lun
, 
µa
, 
hód
, 
b£˘‹
, 
n£˘‹
, 
no_dma
)

17 
sh™n⁄_ªque°
 *
ªq
;

19 
ªq
 = 
	`zmÆloc
((*req));

20 i‡(
NULL
 =
ªq
)

21 
out
;

22 
ªq
->
›code
 = opcode;

23 
ªq
->
lun
 =Üun;

24 
ªq
->
µa
 =Öpa;

25 
ªq
->
hód
 = head;

26 
ªq
->
b£˘‹
 = bsector;

27 
ªq
->
n£˘‹
 =Çsector;

28 
ªq
->
dev
 = dev;

29 
ªq
->
b‰ì
 = 1;

30 
ªq
->
rw_ítúe_buf„r
 = 0;

31 
ªq
->
no_dma
 =Ço_dma;

32 
ªq
->
d©a
 = 
NULL
;

33 
ªq
->
mëad©a
 = 
NULL
;

34 
	`INIT_LIST_HEAD
(&
ªq
->
li°
);

35 
	`INIT_LIST_HEAD
(&
ªq
->
run_li°
);

36 
	`INIT_LIST_HEAD
(&
ªq
->
chunk_li°
);

37 
	`INIT_LIST_HEAD
(&
ªq
->
lun_li°
);

38 
	`INIT_LIST_HEAD
(&
ªq
->
mem_li°hód
);

40 
ªq
->
block
 =Ñeq->
µa
 / 
dev
->
Êash
->
≈age
;

41 
ªq
->
∑ge
 =Ñeq->
µa
 % 
dev
->
Êash
->
≈age
;

42 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1) {

43 
ªq
->
chunk_block
 =Ñeq->
block
 / 
dev
->
c⁄fig
->
≈œ√
;

44 
ªq
->
chunk_∂™e
 =Ñeq->
block
 % 
dev
->
c⁄fig
->
≈œ√
;

46 
ªq
->
chunk_block
 =Ñeq->
block
;

47 
ªq
->
chunk_∂™e
 = 0;

50 i‡(
sh_wrôe_cmd
 =
›code
 || 
sh_ˇchîód_cmd
 == opcode

51 || 
sh_bufwrôe_cmd
 =
›code
 || 
sh_bu‰ód_cmd
 == opcode) {

53 i‡(
n£˘‹
 && !
no_dma
) {

54 
ªq
->
d©a
 = 
	`mÆloc
‘eq->
n£˘‹
 * 
dev
->
c⁄fig
->
£˘‹_size
);

55 i‡(
NULL
 =
ªq
->
d©a
)

56 
‰ì_ªq_out
;

58 
ªq
->
mëad©a
 = 
	`mÆloc
‘eq->
n£˘‹
 * 
METADATA_SIZE
);

59 i‡(
NULL
 =
ªq
->
mëad©a
)

60 
‰ì_d©a_out
;

64 i‡(
sh_bufwrôe_cmd
 =
›code
 || 
sh_bu‰ód_cmd
 == opcode)

65 
ªq
->
bufcmd
 = 1;

67 i‡(
sh_¥îód_cmd
 =
›code
 || 
sh_ˇchîód_cmd
 =›codê|| 
sh_îa£_cmd
 == opcode)

68 
ªq
->
hód
 &~
HEAD_MASK
;

70 i‡(
sh_øidöô_cmd
 =
›code
 || 
sh_bufwrôe_cmd
 == opcode)

71 
ªq
->
hód
 &
HEAD_MASK
;

73  
ªq
;

75 
‰ì_d©a_out
:

76 
	`‰ì
(
ªq
->
d©a
);

77 
‰ì_ªq_out
:

78 
	`‰ì
(
ªq
);

79 
out
:

80  
NULL
;

81 
	}
}

83 
sh™n⁄_ªque°
 *
	$Æloc_ªque°
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_cmd
 
›code
,

84 
lun
, 
µa
, 
hód
, 
b£˘‹
, 
n£˘‹
)

86  
	`Æloc_ªque°_no_dma
(
dev
, 
›code
, 
lun
, 
µa
, 
hód
, 
b£˘‹
, 
n£˘‹
, 0);

87 
	}
}

89 
	$øw_‰ì_ªque°
(
sh™n⁄_ªque°
 *
ªq
)

91 
mem‹y
 *
mem
, *
tmp
;

93 
	`li°_f‹_óch_íåy_ß„
(
mem
, 
tmp
, &
ªq
->
mem_li°hód
, 
li°
) {

94 
	`li°_dñ
(&
mem
->
li°
);

95 
ªq
->
dev
->
	`‰ì_mem
‘eq->dev, 
mem
);

96 
	`‰ì
(
mem
);

99 i‡(
ªq
->
mëad©a
 &&Ñeq->
b‰ì
Ë
	`‰ì
(req->metadata);

100 i‡(
ªq
->
d©a
 &&Ñeq->
b‰ì
Ë
	`‰ì
(req->data);

101 
	`‰ì
(
ªq
);

102 
	}
}

104 
	$‰ì_ªque°
(
sh™n⁄_ªque°
 *
ªq
)

106 
sh™n⁄_ªque°
 *
sub
, *
tmp
;

108 
	`li°_f‹_óch_íåy_ß„
(
sub
, 
tmp
, &
ªq
->
chunk_li°
, chunk_list) {

109 
	`li°_dñ
(&
sub
->
chunk_li°
);

110 
	`øw_‰ì_ªque°
(
sub
);

112 
	`øw_‰ì_ªque°
(
ªq
);

113 
	}
}

118 
	$∑d_cmdqueue
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_ªque°
 *
ªq
, *
cmdd©a
, 
ncmdd©a
)

120 
i
;

122 i‡(
ªq
->
bufcmd
) {

123 
i
 = 0; i < 
ncmdd©a
; i +
QW_SIZE
) {

124 
dev
->
	`wrôe_mem
(dev, dev->
bufhód
[
ªq
->
hód
].
cmdmem
.
kî√l_addr
 + dev->bufhód[ªq->hód].
cmdhód
, 
cmdd©a
 + 
i
, 
QW_SIZE
);

125 
dev
->
bufhód
[
ªq
->
hód
].
cmdhód
 = (dev->bufhód[ªq->hód].cmdhód + 
QW_SIZE
Ë% 
PAGE_SIZE
;

126 
dev
->
bufhód
[
ªq
->
hód
].
cmdem±y
 -
QW_SIZE
;

129 
i
 = 0; i < 
ncmdd©a
; i +
QW_SIZE
) {

130 
dev
->
	`wrôe_mem
(dev, dev->
lun
[
ªq
->lun].
thªad
->
cmdmem
.
kî√l_addr
 + dev->lun[ªq->lun].thªad->
cmdhód
, 
cmdd©a
 + 
i
, 
QW_SIZE
);

131 
dev
->
lun
[
ªq
->lun].
thªad
->
cmdhód
 = (dev->lun[ªq->lun].thªad->cmdhód + 
QW_SIZE
Ë% 
PAGE_SIZE
;

132 
dev
->
lun
[
ªq
->lun].
thªad
->
cmdem±y
 -
QW_SIZE
;

134 i‡(-1 =
dev
->
lun
[
ªq
->lun].
hód
)

135 
dev
->
lun
[
ªq
->lun].
hód
 =Ñeq->
cmdhód
;

136 
dev
->
lun
[
ªq
->lun].
èû
 = (ªq->
cmdhód
 + 
ncmdd©a
Ë% 
PAGE_SIZE
;

137 
dev
->
lun
[
ªq
->lun].
thªad
->
ªq_cou¡
 +(
ncmdd©a
 /Ñeq->
cmdÀn
);

139 
	}
}

142 
	$back_∑d_cmdqueue
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_ªque°
 *
ªq
)

144 
i
;

145 
__u64
 
d©a
 = 0x00;

147 i‡(
ªq
->
bufcmd
) {

148 
i
 = 0; i < 
ªq
->
cmdÀn
; i +
QW_SIZE
)

149 
dev
->
	`wrôe_mem
(dev, dev->
bufhód
[
ªq
->
hód
].
cmdmem
.
kî√l_addr
 + (ªq->
cmdhód
 + 
i
)%
PAGE_SIZE
, &
d©a
, 
QW_SIZE
);

151 
i
 = 0; i < 
ªq
->
cmdÀn
; i +
QW_SIZE
)

152 
dev
->
	`wrôe_mem
(dev, dev->
lun
[
ªq
->lun].
cmdmem
.
kî√l_addr
 + (ªq->
cmdhód
 + 
i
)%
PAGE_SIZE
, &
d©a
, 
QW_SIZE
);

154 
	}
}

156 
	$back_∑d_cmdqueue
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_ªque°
 *
ªq
Ë{
	}
}

159 
	$submô_ªque°
(
sh™n⁄_ªque°
 *
ªq
)

161 
i
, 
cmdÀn
, 
∂™e
, 
≈œ√
, 
rc
;

162 *
cmdd©a
;

163 
ncmdd©a
;

164 
li°_hód
 
tmp_chunk_hód
;

165 
sh™n⁄_ªque°
 *
tmp
;

166 
mem‹y
 *
mem
;

167 
sh™n⁄_dev
 *
dev
 = 
ªq
->dev;

169 
sh_ª£t
 *sh_reset;

170 
sh_ªadid
 *sh_readid;

171 
sh_wrôîeg
 *sh_writereg;

172 
sh_îa£
 *sh_erase;

173 
sh_¥îód
 *sh_preread;

174 
sh_ˇchîód
 *sh_cacheread;

175 
sh_wrôe
 *sh_write;

176 
sh_øidöô
 *sh_raidinit;

177 
sh_øidwrôe
 *sh_raidwrite;

178 
sh_bufwrôe
 *sh_bufwrite;

180 
rc
 = 0;

181 
∂™e
 = 0;

182 
≈œ√
 = 
	`li°_em±y
(&
ªq
->
chunk_li°
Ë? 1 : 
dev
->
c⁄fig
->nplane;

183 
	`as£π
(
≈œ√
 == 1 ||Çplane == 2 ||Çplane == 4 ||Çplane == 8);

185 
	`INIT_LIST_HEAD
(&
tmp_chunk_hód
);

187 
ªq
->
›code
) {

188 
sh_ª£t_cmd
:

189 
cmdÀn
 = (*
sh_ª£t
);

190 i‡(
cmdÀn
 > 
dev
->
lun
[
ªq
->lun].
thªad
->
cmdem±y
) {

191 
rc
 = 
NO_CMDQUEUE_ROOM
;

192 
out
;

195 
sh_ª£t
 = 
	`zmÆloc
(
cmdÀn
);

196 i‡(
NULL
 =
sh_ª£t
) {

197 
rc
 = 
ALLOCMEM_FAILED
;

198 
out
;

200 
cmdd©a
 = 
sh_ª£t
;

201 
ncmdd©a
 = 
cmdÀn
;

203 
sh_ª£t
->
›code
 = 
sh_ª£t_cmd
;

204 
sh_ª£t
->
lun
 = 
dev
->lun[
ªq
->lun].
phylun
;

206 
ªq
->
cmdÀn
 = cmdlen;

207 
ªq
->
cmdhód
 = 
dev
->
lun
[ªq->lun].
thªad
->cmdhead;

210 
sh_ªadid_cmd
:

211 
cmdÀn
 = (*
sh_ªadid
);

212 i‡(
cmdÀn
 > 
dev
->
lun
[
ªq
->lun].
thªad
->
cmdem±y
) {

213 
rc
 = 
NO_CMDQUEUE_ROOM
;

214 
out
;

217 
sh_ªadid
 = 
	`zmÆloc
(
cmdÀn
);

218 i‡(
NULL
 =
sh_ªadid
) {

219 
rc
 = 
ALLOCMEM_FAILED
;

220 
out
;

222 
cmdd©a
 = 
sh_ªadid
;

223 
ncmdd©a
 = 
cmdÀn
;

225 
sh_ªadid
->
›code
 = 
sh_ªadid_cmd
;

226 
sh_ªadid
->
lun
 = 
dev
->lun[
ªq
->lun].
phylun
;

228 
sh_ªadid
->
addr
 = 0x00;

229 
sh_ªadid
->
cmd
 = 0x90;

230 
sh_ªadid
->
nbyã
 = 8;

232 
sh_ªadid
->
addr
 = 0x10;

233 
sh_ªadid
->
cmd
 = 0xEE;

234 
sh_ªadid
->
nbyã
 = 4;

237 
ªq
->
cmdÀn
 = cmdlen;

238 
ªq
->
cmdhód
 = 
dev
->
lun
[ªq->lun].
thªad
->cmdhead;

241 
sh_wrôîeg_cmd
:

242 
cmdÀn
 = (*
sh_wrôîeg
Ë+ ((
ªq
->
wr_Êash_ªg_nbyã
 > 1) ? 8 : 0);

243 i‡(
cmdÀn
 > 
dev
->
lun
[
ªq
->lun].
thªad
->
cmdem±y
) {

244 
rc
 = 
NO_CMDQUEUE_ROOM
;

245 
out
;

248 
sh_wrôîeg
 = 
	`zmÆloc
(
cmdÀn
);

249 i‡(
NULL
 =
sh_wrôîeg
) {

250 
rc
 = 
ALLOCMEM_FAILED
;

251 
out
;

253 
cmdd©a
 = 
sh_wrôîeg
;

254 
ncmdd©a
 = 
cmdÀn
;

256 
	`mem˝y
(
sh_wrôîeg
, 
ªq
->
dúe˘_cmdqueue
, 
cmdÀn
);

258 
ªq
->
cmdÀn
 = cmdlen;

259 
ªq
->
cmdhód
 = 
dev
->
lun
[ªq->lun].
thªad
->cmdhead;

262 
sh_îa£_cmd
:

263 
cmdÀn
 = (*
sh_îa£
);

264 i‡(
cmdÀn
 * 
≈œ√
 > 
dev
->
lun
[
ªq
->lun].
thªad
->
cmdem±y
) {

265 
rc
 = 
NO_CMDQUEUE_ROOM
;

266 
out
;

269 
sh_îa£
 = 
	`zmÆloc
(
cmdÀn
 * 
≈œ√
);

270 i‡(
NULL
 =
sh_îa£
) {

271 
rc
 = 
ALLOCMEM_FAILED
;

272 
out
;

274 
cmdd©a
 = 
sh_îa£
;

275 
ncmdd©a
 = 
≈œ√
 * 
cmdÀn
;

277 
	`li°_add_èû
(&
tmp_chunk_hód
, &
ªq
->
chunk_li°
);

278 
	`li°_f‹_óch_íåy
(
tmp
, &
tmp_chunk_hód
, 
chunk_li°
) {

279 
sh_îa£
->
›code
 = 
sh_îa£_cmd
;

280 
sh_îa£
->
hód
 = 
tmp
->head;

281 
sh_îa£
->
µa
 = 
	`˝u_to_À32
(
tmp
->µ®| (
dev
->
lun
[
ªq
->lun].
phylun
 << 24));

283 
tmp
->
cmdÀn
 = cmdlen;

284 
tmp
->
cmdhód
 = (
dev
->
lun
[tmp->lun].
thªad
->cmdhód + 
∂™e
 * 
cmdÀn
Ë% 
PAGE_SIZE
;

286 
∂™e
++;

287 
sh_îa£
++;

289 
	`li°_dñ
(&
tmp_chunk_hód
);

292 
sh_¥îód_cmd
:

293 
cmdÀn
 = (*
sh_¥îód
);

294 i‡(
cmdÀn
 * 
≈œ√
 > 
dev
->
lun
[
ªq
->lun].
thªad
->
cmdem±y
) {

295 
rc
 = 
NO_CMDQUEUE_ROOM
;

296 
out
;

299 
sh_¥îód
 = 
	`zmÆloc
(
cmdÀn
 * 
≈œ√
);

300 i‡(
NULL
 =
sh_¥îód
) {

301 
rc
 = 
ALLOCMEM_FAILED
;

302 
out
;

304 
cmdd©a
 = 
sh_¥îód
;

305 
ncmdd©a
 = 
cmdÀn
 * 
≈œ√
;

307 
	`li°_add_èû
(&
tmp_chunk_hód
, &
ªq
->
chunk_li°
);

308 
	`li°_f‹_óch_íåy
(
tmp
, &
tmp_chunk_hód
, 
chunk_li°
) {

309 
sh_¥îód
->
›code
 = 
sh_¥îód_cmd
;

310 
sh_¥îód
->
hód
 = 
tmp
->head;

311 
sh_¥îód
->
µa
 = 
	`˝u_to_À32
(
tmp
->µ®| (
dev
->
lun
[
ªq
->lun].
phylun
 << 24));

313 
tmp
->
cmdÀn
 = cmdlen;

314 
tmp
->
cmdhód
 = (
dev
->
lun
[tmp->lun].
thªad
->cmdhód + 
∂™e
 * 
cmdÀn
Ë% 
PAGE_SIZE
;

316 
∂™e
++;

317 
sh_¥îód
++;

319 
	`li°_dñ
(&
tmp_chunk_hód
);

322 
sh_ˇchîód_cmd
:

323 
cmdÀn
 = (*
sh_ˇchîód
Ë+ 
ªq
->
n£˘‹
 * 
METADATA_SIZE
;

324 i‡(
cmdÀn
 > 
dev
->
lun
[
ªq
->lun].
thªad
->
cmdem±y
) {

325 
rc
 = 
NO_CMDQUEUE_ROOM
;

326 
out
;

329 
sh_ˇchîód
 = 
	`zmÆloc
(
cmdÀn
);

330 i‡(
NULL
 =
sh_ˇchîód
) {

331 
rc
 = 
ALLOCMEM_FAILED
;

332 
out
;

334 
cmdd©a
 = 
sh_ˇchîód
;

335 
ncmdd©a
 = 
cmdÀn
;

337 
sh_ˇchîód
->
›code
 = 
ªq
->
œ°_ˇchîód
 ? 
sh_œ°_ˇchîód_cmd
 : 
sh_ˇchîód_cmd
;

338 
sh_ˇchîód
->
b£˘‹
 = 
ªq
->bsector;

339 
sh_ˇchîód
->
n£˘‹
 = 
ªq
->nsector - 1;

340 
sh_ˇchîód
->
hód
 = 
ªq
->
no_dma
 ? (0x20 |Ñeq->head) :Ñeq->head;

341 
sh_ˇchîód
->
µa
 = 
	`˝u_to_À32
(
ªq
->µ®| (
dev
->
lun
[ªq->lun].
phylun
 << 24));

342 i‡(
dev
->
has_adv™˚_ªad
 && (dev->
adv™˚_ªad
 || 
ªq
->advance_read)){

343 
sh_ˇchîód
->
›code
 = 
sh_ˇchîód_adv_cmd
;

344 
sh_ˇchîód
->
hód
 = 0;

347 i‡(!
ªq
->
no_dma
) {

348 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

349 
mem
 = 
	`zmÆloc
((*mem));

350 
	`as£π
(
NULL
 !
mem
);

351 
mem
->
size
 = 
dev
->
c⁄fig
->
£˘‹_size
;

352 
dev
->
	`gë_mem
(dev, 
mem
);

353 
sh_ˇchîód
->
±e
[
i
] = 
mem
->
dma_addr
;

354 
	`˝u_to_À64s
(&
sh_ˇchîód
->
±e
[
i
]);

355 
	`li°_add_èû
(&
mem
->
li°
, &
ªq
->
mem_li°hód
);

359 
ªq
->
cmdÀn
 = cmdlen;

360 
ªq
->
cmdhód
 = 
dev
->
lun
[ªq->lun].
thªad
->cmdhead;

363 
sh_wrôe_cmd
:

364 
cmdÀn
 = (
sh_wrôe
Ë+ 
dev
->
c⁄fig
->
∑ge_n£˘‹
 * (
sh_wrôe_£˘‹
);

365 i‡(
cmdÀn
 * 
≈œ√
 > 
dev
->
lun
[
ªq
->lun].
thªad
->
cmdem±y
) {

366 
rc
 = 
NO_CMDQUEUE_ROOM
;

367 
out
;

370 
sh_wrôe
 = 
	`zmÆloc
(
cmdÀn
 * 
≈œ√
);

371 i‡(
NULL
 =
sh_wrôe
) {

372 
rc
 =
ALLOCMEM_FAILED
;

373 
out
;

375 
cmdd©a
 = 
sh_wrôe
;

376 
ncmdd©a
 = 
cmdÀn
 * 
≈œ√
;

378 
	`li°_add_èû
(&
tmp_chunk_hód
, &
ªq
->
chunk_li°
);

379 
	`li°_f‹_óch_íåy
(
tmp
, &
tmp_chunk_hód
, 
chunk_li°
) {

380 
sh_wrôe
->
›code
 = 
sh_wrôe_cmd
;

381 
sh_wrôe
->
hód
 = 
tmp
->head;

382 
sh_wrôe
->
µa
 = 
	`˝u_to_À32
(
tmp
->µ®| (
dev
->
lun
[
ªq
->lun].
phylun
 << 24));

383 
tmp
->
cmdÀn
 = cmdlen;

384 
tmp
->
cmdhód
 = (
dev
->
lun
[tmp->lun].
thªad
->cmdhód + 
∂™e
 * 
cmdÀn
Ë% 
PAGE_SIZE
;

386 i‡(!
ªq
->
no_dma
) {

387 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++) {

388 
mem
 = 
	`zmÆloc
((*mem));

389 
	`as£π
(
NULL
 !
mem
);

391 
mem
->
size
 = 
dev
->
c⁄fig
->
£˘‹_size
;

392 
dev
->
	`gë_mem
(dev, 
mem
);

393 i‡(
i
 < 
tmp
->
n£˘‹
) {

394 i‡(
ªq
->
rw_ítúe_buf„r
) {

395 
dev
->
	`wrôe_mem
(dev, 
mem
->
kî√l_addr
, 
tmp
->
d©a
 + 
i
 * (dev->
c⁄fig
->
£˘‹_size
 + 
METADATA_SIZE
), dev->config->sector_size);

396 
sh_wrôe
->
£˘‹
[
i
].
mëad©a
 = *((
__u64
 *)(
tmp
->
d©a
 + i * (
dev
->
c⁄fig
->
£˘‹_size
 + 
METADATA_SIZE
) + dev->config->sector_size));

398 
dev
->
	`wrôe_mem
(dev, 
mem
->
kî√l_addr
, 
tmp
->
d©a
 + 
i
 * dev->
c⁄fig
->
£˘‹_size
, dev->config->sector_size);

399 
sh_wrôe
->
£˘‹
[
i
].
mëad©a
 = 
tmp
->metadata[i];

401 
sh_wrôe
->
£˘‹
[
i
].
±e
 = 
mem
->
dma_addr
;

403 
dev
->
	`wrôe_mem
(dev, 
mem
->
kî√l_addr
, dev->
∑ddög_buf„r
 + 
i
 * dev->
c⁄fig
->
£˘‹_size
, dev->config->sector_size);

404 
sh_wrôe
->
£˘‹
[
i
].
±e
 = 
mem
->
dma_addr
;

405 
sh_wrôe
->
£˘‹
[
i
].
mëad©a
 = 0xA5A5A5A5;

407 
	`˝u_to_À64s
(&
sh_wrôe
->
£˘‹
[
i
].
±e
);

408 
	`˝u_to_À64s
(&
sh_wrôe
->
£˘‹
[
i
].
mëad©a
);

409 
	`li°_add_èû
(&
mem
->
li°
, &
tmp
->
mem_li°hód
);

413 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++) {

414 
sh_wrôe
->
£˘‹
[
i
].
±e
 = 
	`˝u_to_À64
(0x1);

416 
sh_wrôe
->
£˘‹
[
i
].
mëad©a
 = 
	`˝u_to_À64
(0xA5A5A5A5);

420 
∂™e
++;

421 
sh_wrôe
 = (sh_wrôê*)((
__u64
)sh_wrôê+ 
cmdÀn
);

423 
	`li°_dñ
(&
tmp_chunk_hód
);

426 
sh_øidöô_cmd
:

427 
cmdÀn
 = (*
sh_øidöô
);

428 i‡(
cmdÀn
 > 
dev
->
lun
[
ªq
->lun].
thªad
->
cmdem±y
) {

429 
rc
 = 
NO_CMDQUEUE_ROOM
;

430 
out
;

433 
sh_øidöô
 = 
	`zmÆloc
(
cmdÀn
);

434 i‡(
NULL
 =
sh_øidöô
) {

435 
rc
 = 
ALLOCMEM_FAILED
;

436 
out
;

438 
cmdd©a
 = 
sh_øidöô
;

439 
ncmdd©a
 = 
cmdÀn
;

441 
sh_øidöô
->
›code
 = 
sh_øidöô_cmd
;

442 
sh_øidöô
->
nd©Æun
 = 
ªq
->
n£˘‹
;

443 
sh_øidöô
->
hód
 = 
ªq
->head;

444 
sh_øidöô
->
µa
 = 
	`˝u_to_À32
(
ªq
->µ®| (
dev
->
lun
[ªq->lun].
phylun
 << 24));

446 
ªq
->
cmdÀn
 = cmdlen;

447 
ªq
->
cmdhód
 = 
dev
->
lun
[ªq->lun].
thªad
->cmdhead;

450 
sh_øidwrôe_cmd
:

451 
cmdÀn
 = (*
sh_øidwrôe
);

452 i‡(
cmdÀn
 * 
≈œ√
 > 
dev
->
lun
[
ªq
->lun].
thªad
->
cmdem±y
) {

453 
rc
 = 
NO_CMDQUEUE_ROOM
;

454 
out
;

457 
sh_øidwrôe
 = 
	`zmÆloc
(
cmdÀn
 * 
≈œ√
);

458 i‡(
NULL
 =
sh_øidwrôe
) {

459 
rc
 = 
ALLOCMEM_FAILED
;

460 
out
;

462 
cmdd©a
 = 
sh_øidwrôe
;

463 
ncmdd©a
 = 
cmdÀn
 * 
≈œ√
;

465 
	`li°_add_èû
(&
tmp_chunk_hód
, &
ªq
->
chunk_li°
);

466 
	`li°_f‹_óch_íåy
(
tmp
, &
tmp_chunk_hód
, 
chunk_li°
) {

467 
sh_øidwrôe
->
›code
 = 
sh_øidwrôe_cmd
;

468 
sh_øidwrôe
->
hód
 = 
tmp
->head;

469 
sh_øidwrôe
->
µa
 = 
	`˝u_to_À32
(
tmp
->µ®| (
dev
->
lun
[
ªq
->lun].
phylun
 << 24));

471 
tmp
->
cmdÀn
 = cmdlen;

472 
tmp
->
cmdhód
 = (
dev
->
lun
[tmp->lun].
thªad
->cmdhód + 
cmdÀn
 * 
∂™e
Ë% 
PAGE_SIZE
;

474 
∂™e
++;

475 
sh_øidwrôe
++;

477 
	`li°_dñ
(&
tmp_chunk_hód
);

480 
sh_bufwrôe_cmd
:

481 
cmdÀn
 = (*
sh_bufwrôe
);

482 i‡(
cmdÀn
 > 
dev
->
bufhód
[
ªq
->
hód
].
cmdem±y
) {

483 
rc
 = 
NO_CMDQUEUE_ROOM
;

484 
out
;

487 
sh_bufwrôe
 = 
	`zmÆloc
(
cmdÀn
);

488 i‡(
NULL
 =
sh_bufwrôe
) {

489 
rc
 = 
ALLOCMEM_FAILED
;

490 
out
;

492 
cmdd©a
 = 
sh_bufwrôe
;

493 
ncmdd©a
 = 
cmdÀn
;

495 
sh_bufwrôe
->
›code
 = 
sh_bufwrôe_cmd
;

496 
sh_bufwrôe
->
lun
 = 
	`log2phy_lun
(
dev
, 
ªq
->lun);

497 
sh_bufwrôe
->
b£˘‹
 = 
ªq
->bsector;

498 
sh_bufwrôe
->
hód
 = 
ªq
->head;

499 
sh_bufwrôe
->
µa
 = 
	`˝u_to_À32
(
ªq
->ppa);

500 
mem
 = 
	`zmÆloc
((*mem));

501 i‡(
NULL
 =
mem
) {

502 
	`‰ì
(
sh_bufwrôe
);

503 
rc
 = 
ALLOCMEM_FAILED
;

504 
out
;

506 
mem
->
size
 = 
dev
->
c⁄fig
->
£˘‹_size
;

507 
dev
->
	`gë_mem
(dev, 
mem
);

508 
dev
->
	`wrôe_mem
(dev, 
mem
->
kî√l_addr
, 
ªq
->
d©a
, dev->
c⁄fig
->
£˘‹_size
);

509 
sh_bufwrôe
->
±e
 = 
mem
->
dma_addr
;

510 
sh_bufwrôe
->
mëad©a
 = 
ªq
->metadata[0];

511 
	`˝u_to_À64s
(&
sh_bufwrôe
->
±e
);

512 
	`˝u_to_À64s
(&
sh_bufwrôe
->
mëad©a
);

513 
	`li°_add_èû
(&
mem
->
li°
, &
ªq
->
mem_li°hód
);

515 
ªq
->
cmdÀn
 = cmdlen;

516 
ªq
->
cmdhód
 = 
dev
->
bufhód
[ªq->
hód
].cmdhód; 
	`as£π
‘eq->hód < 
INDEP_HEAD
);

520 
	`¥ötf
("%s(): Nÿsuch comm™d\n", 
__func__
);

521 
rc
 = 
ERR
;

522 
out
;

525 
	`∑d_cmdqueue
(
dev
, 
ªq
, 
cmdd©a
, 
ncmdd©a
);

526 
	`‰ì
(
cmdd©a
);

528 i‡(
sh_bufwrôe_cmd
 =
ªq
->
›code
 || 
sh_bu‰ód_cmd
 ==Ñeq->opcode) {

529 
	`li°_add_èû
(&
ªq
->
bufhód_li°
, &
dev
->
bufhód
[ªq->
hód
].
ªq_li°hód
);

531 
	`li°_add_èû
(&
ªq
->
lun_li°
, &
dev
->
lun
[ªq->lun].
ªq_li°hód
);

532 
	`li°_f‹_óch_íåy
(
tmp
, &
ªq
->
chunk_li°
, chunk_list)

533 
	`li°_add_èû
(&
tmp
->
lun_li°
, &
dev
->
lun
[tmp->lun].
ªq_li°hód
);

536 
out
:

537  
rc
;

538 
	}
}

540 
	$__pﬁl_cmdqueue
(
sh™n⁄_dev
 *
dev
, 
lun
, 
waô
)

542 
i
, 
pos
, 
timeout
, 
thªad_cmphód
, 
thªad_cmdhód
;

543 
mem‹y
 *
mem
, *
mem_tmp
;

544 
sh™n⁄_ªque°
 *
ªq
, *
ªq_tmp
;

545 
__u8
 *
p
;

546 *
cmp_queue
;

549 i‡(
waô
) {

550 
timeout
 = 0;

553 
thªad_cmdhód
 = 
dev
->
	`i‹ód_luƒeg
(dev, 
lun
, 
HW_cmdq_hód
);

554 
thªad_cmphód
 = 
dev
->
	`i‹ód_luƒeg
(dev, 
lun
, 
HW_cmpq_hód
);

556 i‡(
dev
->
lun
[lun].
hód
 =dev->lun[lun].
èû
) {

558 } i‡(
thªad_cmdhód
 =
thªad_cmphód
) {

562 
	`u¶ìp
(10);

563 i‡(
timeout
++ > 10 * 
RUNCMDQ_US_TIMEOUT
) {

564 
	`¥ötf
("\nHW Fúmw¨êBUG:Üu¿%d comm™d com∂ëi⁄ i†nŸÅÿªtu∫!\n", 
lun
);

565 
	`exô
(
EXIT_FAILURE
);

570 
dev
->
lun
[lun].
hód
 = dev->lun[lun].
èû
 = -1;

573 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
ªq_tmp
, &
dev
->
lun
[lun].
ªq_li°hód
, 
lun_li°
) {

574 
	`back_∑d_cmdqueue
(
dev
, 
ªq
);

575 
	`li°_dñ
(&
ªq
->
lun_li°
);

576 
p
 = 
ªq
->
d©a
;

579 
	`li°_f‹_óch_íåy_ß„
(
mem
, 
mem_tmp
, &
ªq
->
mem_li°hód
, 
li°
) {

580 
	`li°_dñ
(&
mem
->
li°
);

582 i‡(
sh_ˇchîód_cmd
 =
ªq
->
›code
 && 
NULL
 !
p
) {

583 
dev
->
	`ªad_mem
(dev, 
p
, 
mem
->
kî√l_addr
, dev->
c⁄fig
->
£˘‹_size
);

584 i‡(
ªq
->
rw_ítúe_buf„r
)

585 
p
 +(
dev
->
c⁄fig
->
£˘‹_size
 + 
METADATA_SIZE
);

587 
p
 +
dev
->
c⁄fig
->
£˘‹_size
;

590 
dev
->
	`‰ì_mem
(dev, 
mem
);

591 
	`‰ì
(
mem
);

595 
p
 = 
ªq
->
d©a
 + 
dev
->
c⁄fig
->
£˘‹_size
;

596 
cmp_queue
 = 
dev
->
lun
[lun].
thªad
->
cmpmem
.
kî√l_addr
;

598 i‡(
sh_ˇchîód_cmd
 !
ªq
->
›code
) {

599 
dev
->
	`ªad_mem
(dev, &
ªq
->
°©us
, 
cmp_queue
 +Ñeq->
cmdhód
, 
QW_SIZE
);

600 i‡(
sh_ªadid_cmd
 !
ªq
->
›code
)

601 
	`À64_to_˝us
(&
ªq
->
°©us
);

603 
dev
->
	`ªad_mem
(dev, 
ªq
->
ecc
, 
cmp_queue
 +Ñeq->
cmdhód
,Ñeq->
n£˘‹
);

605 i‡(
ªq
->
mëad©a
 !
NULL
 ||Ñeq->
rw_ítúe_buf„r
) {

606 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

607 
pos
 = (
ªq
->
cmdhód
 + (1 + 
i
Ë* 
QW_SIZE
Ë% 
PAGE_SIZE
;

608 i‡(
ªq
->
rw_ítúe_buf„r
) {

609 
dev
->
	`ªad_mem
(dev, 
p
 + 
i
 * (dev->
c⁄fig
->
£˘‹_size
 + 
METADATA_SIZE
), 
cmp_queue
 + 
pos
, 
QW_SIZE
);

610 
	`À64_to_˝us
((
__u64
 *)(
p
 + 
i
 * (
dev
->
c⁄fig
->
£˘‹_size
 + 
METADATA_SIZE
)));

612 
dev
->
	`ªad_mem
(dev, 
ªq
->
mëad©a
 + 
i
, 
cmp_queue
 + 
pos
, 
QW_SIZE
);

613 
	`À64_to_˝us
(
ªq
->
mëad©a
 + 
i
);

619 i‡(--
dev
->
lun
[lun].
thªad
->
ªq_cou¡
 == 0)

620 
dev
->
lun
[lun].
thªad
->
cmdem±y
 = 
PAGE_SIZE
 - 8;

624 
	}
}

626 
	$__pﬁl_bufcmdqueue
(
sh™n⁄_dev
 *
dev
, 
hód
, 
waô
)

628 
timeout
;

629 
mem‹y
 *
mem
, *
mem_tmp
;

630 
sh™n⁄_ªque°
 *
ªq
, *
ªq_tmp
;

631 *
cmp_queue
;

634 i‡(
waô
) {

635 
timeout
 = 0;

637 
dev
->
	`i‹ód_buÊuƒeg
(dev, 
hód
, 
HW_cmpq_hód
Ë!dev->
bufhód
[hód].
cmdhód
) {

638 
	`u¶ìp
(1);

639 i‡(
timeout
++ > 10 * 
RUNCMDQ_US_TIMEOUT
) {

640 i‡(
dev
->
timeout_sûít
)

641 
	`¥ötf
("### bufwrôe/ªad hód-%d waô f‹ com∂ëi⁄Åimeouà###\n", 
hód
);

642  
ERR
;

648 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
ªq_tmp
, &
dev
->
bufhód
[
hód
].
ªq_li°hód
, 
bufhód_li°
) {

649 i‡(
ªq
->
cmdhód
 =
dev
->
	`i‹ód_buÊuƒeg
(dev, 
hód
, 
HW_cmpq_hód
))

652 
	`back_∑d_cmdqueue
(
dev
, 
ªq
);

653 
	`li°_dñ
(&
ªq
->
lun_li°
);

655 
	`li°_f‹_óch_íåy_ß„
(
mem
, 
mem_tmp
, &
ªq
->
mem_li°hód
, 
li°
) {

656 
	`li°_dñ
(&
mem
->
li°
);

657 
dev
->
	`‰ì_mem
(dev, 
mem
);

658 
	`‰ì
(
mem
);

661 
cmp_queue
 = 
dev
->
bufhód
[
hód
].
cmpmem
.
kî√l_addr
;

662 
dev
->
	`ªad_mem
(dev, &
ªq
->
°©us
, 
cmp_queue
 +Ñeq->
cmdhód
, 
QW_SIZE
);

664 
dev
->
bufhód
[
hód
].
cmdem±y
 +
ªq
->
cmdÀn
;

668 
	}
}

673 
	$submô_pﬁlög_lo›
(
sh™n⁄_dev
 *
dev
, 
li°_hód
 *
ªq_hód
)

675 
sh™n⁄_ªque°
 *
ªq
;

676 
rc
, 
lun
;

679 
	`li°_f‹_óch_íåy
(
ªq
, 
ªq_hód
, 
li°
) {

680 
agaö
:

681 
rc
 = 
dev
->
	`submô_ªque°
(
ªq
);

682 i‡(
rc
 == 0) {

685 i‡(
rc
 !
NO_CMDQUEUE_ROOM
)

686 
	`submô_Áûed_exô
(
ªq
->
lun
);

688 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

689 
	`upd©e_cmdqueue
(
dev
, 
lun
);

691 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

692 
	`pﬁl_cmdqueue
(
dev
, 
lun
);

693 
agaö
;

696 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

697 
	`upd©e_cmdqueue
(
dev
, 
lun
);

698 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

699 
	`pﬁl_cmdqueue
(
dev
, 
lun
);

701 
	}
}

	@shannon-mbr.h

10 #i‚de‡
SHANNON_MBR_H_


11 
	#SHANNON_MBR_H_


	)

13 
	#MBR_EBLOCKS
 4

	)

14 
	#MBR_WATERMARK
 0xa5a5a5a5

	)

15 
	#MBR_LOGICB_SHIFT
 9

	)

16 
	#CURRENT_MBR_VERSION
 0x5100

	)

18 
	ssh™n⁄_mbr
 {

19 
	mid
[32];

20 
u64
 
	mmbr_vîsi⁄
;

21 
u64
 
	mh¨dw¨e_vîsi⁄
;

22 
u64
 
	mso·w¨e_vîsi⁄
;

23 
u64
 
	m«nd_m™uÁ˘uª
;

24 
u64
 
	m«nd_id
;

25 
u64
 
	mˇ∑côy
;

27 
u32
 
	mlun_amou¡
;

28 
u32
 
	meblocks_ö_lun
;

29 
u32
 
	m∑ges_ö_eblock
;

30 
u32
 
	m«nd_∑ge_shi·
;

31 
u32
 
	moob_size
;

32 
u32
 
	mlogicb_shi·
;

33 
u32
 
	m∂™e_‹dî
;

34 
u32
 
	mcfg_nch™√l
;

35 
u32
 
	mcfg_¡hªad
;

36 
u32
 
	mcfg_∆un
;

38 
u32
 
	möô_hŸ_sblk
;

39 
u32
 
	möô_cﬁd_sblk
;

41 
u16
 
	möãºu±_dñay
;

42 
u8
 
	mecc_codew‹ds_ö_logicb
;

43 
u8
 
	mecc_c‹ª˘i⁄_powî
;

44 
u32
 
	mhi°‹y_îa£_cou¡
;

46 
u64
 
	mpowî_cy˛e_cou¡
;

47 
u64
 
	mpowî_⁄_£c⁄ds
;

48 
u64
 
	mho°_wrôe_£˘‹s
;

49 
u64
 
	mtŸÆ_wrôe_£˘‹s
;

50 
u64
 
	mho°_ªad_£˘‹s
;

52 
u32
 
	mÊash_drvmode
;

53 
u8
 
	mluns_≥r_˚_mask
;

54 
u8
 
	mlun_m≠_mode
;

55 
u16
 
	møid_°rùes
;

57 
u64
 
	mbad_phy_lun_m≠
[8];

58 
u32
 
	mmax_∑ges_ö_eblock
;

59 
u32
 
	mu£r_logicb_shi·
;

61 
	#PRIORITIZE_WRITE
 0x0001

	)

62 
	#ATOMIC_WRITE
 0x0002

	)

63 
u64
 
	m„©uª_Êags
;

64 
u8
 
	mpowî_budgë
;

66 
u8
 
	mdma_max_ªad_limô
;

67 
u16
 
	m˛k
;

68 
u32
 
	mmax_out°™dög_bios
;

	@super.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/mm™.h
>

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

11 
	~<time.h
>

13 
	~"toﬁ.h
"

18 
	$c⁄°ru˘_sb_lunöfo
(
sh™n⁄_dev
 *
dev
, *
lunöfo_fûe
)

20 
fd
;

21 
°©
 stat;

22 
sh™n⁄_lunöfo
 *
lunöfo
;

23 
blk
;

25 i‡((
fd
 = 
	`›í
(
lunöfo_fûe
, 
O_RDONLY
)) < 0) {

26 
	`≥º‹
("OpenÜuninfo file failed\n");

27  
ERR
;

30 i‡(
	`f°©
(
fd
, &
°©
)) {

31 
	`≥º‹
("FstatÜuninfo file failed\n");

32 
	`˛o£
(
fd
);

33  
ERR
;

35 
	`as£π
(
°©
.
°_size
 != 0);

37 i‡((
lunöfo
 = 
	`mm≠
(0, 
°©
.
°_size
, 
PROT_READ
, 
MAP_SHARED
, 
fd
, 0)Ë=
NULL
) {

38 
	`≥º‹
("MmapÜuninfo file failed\n");

39 
	`˛o£
(
fd
);

40  
ERR
;

42 
	`as£π
(
lunöfo
->
size
 =
°©
.
°_size
);

44 i‡(
	`check_lunöfo
(
dev
, 
lunöfo
)) {

45 
	`¥ötf
("The config ofÜuninfo doesn`t matchÖresent hardware config,Ölease use command 'luninfo'Åo generateÖresentÜuninfo file\n");

46 
	`munm≠
(
lunöfo
, 
°©
.
°_size
);

47 
	`˛o£
(
fd
);

48  
ERR
;

51 
	`f‹_dev_óch_block
(
dev
, 
blk
)

52 
	`mem˝y
(&
dev
->
sb
[
blk
].
sb_lunöfo
, &
lunöfo
->sb_lunöfo[blk], (
sh™n⁄_sb_lunöfo
));

54 
	`munm≠
(
lunöfo
, 
°©
.
°_size
);

55 
	`˛o£
(
fd
);

57 
	}
}

63 
	$sh™n⁄_su≥r_ª£t
(
sh™n⁄_dev
 *
dev
)

65 
rc
 = 0;

66 
lun
;

67 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

68 
li°_hód
 
ªq_hód
;

70 
	`INIT_LIST_HEAD
(&
ªq_hód
);

72 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

73 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ª£t_cmd
, 
lun
, 0, 0, 0, 0);

74 i‡(
NULL
 =
ªq
) {

75 
rc
 = 
ALLOCMEM_FAILED
;

76 
‰ì_ªq_out
;

78 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

81 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

82 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

83 
‰ì_ªq_out
;

86 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

87 
	`upd©e_cmdqueue
(
dev
, 
lun
);

89 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

90 
	`pﬁl_cmdqueue
(
dev
, 
lun
);

94 
‰ì_ªq_out
:

95 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

96 
	`li°_dñ
(&
ªq
->
li°
);

97 
	`‰ì_ªque°
(
ªq
);

99 i‡(
rc
)

100 
	`¥ötf
("%s(ËÁûed\n", 
__func__
);

101  
rc
;

102 
	}
}

107 
	$sh™n⁄_su≥r_ªadid_ußge
()

109 
	`¥ötf
("Description:\n");

110 
	`¥ötf
("\tRead stripÜun id\n\n");

112 
	`¥ötf
("Usage:\n");

113 
	`¥ötf
("\tsuper-readid [option]\n");

115 
	`¥ötf
("Option:\n");

116 
	`¥ötf
("\t-t, --absent-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

118 
	`¥ötf
("\t-T, --present-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

120 
	`¥ötf
("\t-h, --help\n"

122 
	}
}

124 
	$sh™n⁄_su≥r_ªadid
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

126 
›ti⁄
 
l⁄g›ts
 [] = {

127 {"ab£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 't'},

128 {"¥e£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 'T'},

129 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

132 
›t
, 
lun
, 
i
;

133 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

134 
li°_hód
 
ªq_hód
;

135 
èrgë_lun
 *
tgéun
;

136 
u£r_luns
 = 0;

138 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":t:T:h", 
l⁄g›ts
, 
NULL
)) != -1) {

139 
›t
) {

141 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 1);

142 
u£r_luns
 = 1;

145 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 0);

146 
u£r_luns
 = 1;

149 
	`sh™n⁄_su≥r_ªadid_ußge
();

152 
	`sh™n⁄_su≥r_ªadid_ußge
();

153  
ERR
;

157 
	`INIT_LIST_HEAD
(&
ªq_hód
);

159 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

160 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ªadid_cmd
, 
lun
, 0, 0, 0, 0);

161 i‡(
NULL
 =
ªq
)

162 
	`mÆloc_Áûed_exô
();

163 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

166 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

167 i‡(
dev
->
	`submô_ªque°
(
ªq
))

168 
	`submô_Áûed_exô
(
ªq
->
lun
);

171 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

172 
	`upd©e_cmdqueue
(
dev
, 
lun
);

174 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

175 i‡(
	`pﬁl_cmdqueue
(
dev
, 
lun
))

176 
	`pﬁl_Áûed_exô
(
lun
);

179 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

180 
	`mem˝y
(
dev
->
èrgëlun
[
ªq
->
lun
].
id
.
byãid
,Ñeq->id, (req->id));

181 
	`li°_dñ
(&
ªq
->
li°
);

182 
	`‰ì_ªque°
(
ªq
);

185 
lun
 = 0;Üu¿< 
dev
->
c⁄fig
->
luns
;Üun++) {

186 i‡(
u£r_luns
 && 
	`ã°_bô
(
lun
, 
dev
->
lun_bôm≠
))

189 
tgéun
 = &
dev
->
èrgëlun
[
lun
];

191 
	`¥ötf
("lun-%03dÖhylun-%03d *hw-ch™√l=%02d hw-thªad=%02d hw-lun=%02d:", 
tgéun
->
loglun
,Ågéun->
phylun
,

192 
tgéun
->
phylun
 / (
dev
->
hw_¡hªad
 * dev->
hw_∆un
),

193 (
tgéun
->
phylun
 % (
dev
->
hw_¡hªad
 * dev->
hw_∆un
)) / dev->hw_nlun,

194 
tgéun
->
phylun
 % 
dev
->
hw_∆un
);

196 
i
 = 0; i < 8; i++)

197 
	`¥ötf
(" %02X", 
tgéun
->
id
.
byãid
[
i
]);

198 
	`¥ötf
("\n");

202 
	}
}

208 
	$sh™n⁄_su≥r_async
(
sh™n⁄_dev
 *
dev
)

210 
rc
 = 0;

211 
lun
;

212 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

213 
li°_hód
 
ªq_hód
;

215 
	`as£π
(1 =
dev
->
öô_d⁄e
);

217 i‡(
IFMODE_TOGGLE
 =
dev
->
ifmode
 || 
IFMODE_ASYNC
 == dev->ifmode)

222 
dev
->
c⁄fig
->
ifmode
 = 
IFMODE_ASYNC
;

223 
dev
->
	`c⁄fig_h¨dw¨e
(dev);

226 
	`INIT_LIST_HEAD
(&
ªq_hód
);

228 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

229 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ª£t_cmd
, 
lun
, 0, 0, 0, 0);

230 i‡(
NULL
 =
ªq
) {

231 
rc
 = 
ALLOCMEM_FAILED
;

232 
‰ì_ªq_out
;

234 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

237 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

238 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

239 
‰ì_ªq_out
;

242 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

243 
	`upd©e_cmdqueue
(
dev
, 
lun
);

245 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

246 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

247 
‰ì_ªq_out
;

250 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
)

251 
rc
 |
	`check_ªq_°©us_sûít
(
ªq
);

253 
dev
->
ifmode
 = 
IFMODE_ASYNC
;

255 
‰ì_ªq_out
:

256 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

257 
	`li°_dñ
(&
ªq
->
li°
);

258 
	`‰ì_ªque°
(
ªq
);

260 i‡(
rc
)

261 
	`¥ötf
("%s(ËÁûed\n", 
__func__
);

262  
rc
;

263 
	}
}

268 
	$sh™n⁄_su≥r_sync
(
sh™n⁄_dev
 *
dev
)

270 
rc
;

271 
u8
 
„©uª
[4]={0x14, 0, 0, 0};

273 
	`as£π
(1 =
dev
->
öô_d⁄e
);

275 i‡(
IFMODE_TOGGLE
 =
dev
->
ifmode
 || 
IFMODE_SYNC
 == dev->ifmode)

278 
rc
 = 
	`su≥r_£t_„©uª
(
dev
, 0xEF, 0x01, 
„©uª
, (feature));

280 i‡(
rc
) {

281 
	`¥ötf
("%s(ËÁè»Áûed\n", 
__func__
);

283 
dev
->
c⁄fig
->
ifmode
 = 
IFMODE_SYNC
;

284 
dev
->
	`c⁄fig_h¨dw¨e
(dev);

286 
dev
->
ifmode
 = 
IFMODE_SYNC
;

288  
rc
;

289 
	}
}

291 
	$sh™n⁄_su≥r_toggÀ
(
sh™n⁄_dev
 *
dev
)

293 
rc
;

294 
u8
 
„©uª
[4]={0x00, 0, 0, 0};

296 
	`as£π
(1 =
dev
->
öô_d⁄e
);

298 i‡(
IFMODE_TOGGLE
 =
dev
->
ifmode
 || 
IFMODE_SYNC
 == dev->ifmode)

301 
rc
 = 
	`su≥r_£t_„©uª
(
dev
, 0xEF, 0x80, 
„©uª
, (feature));

303 i‡(
rc
) {

304 
	`¥ötf
("%s(ËÁè»Áûed\n", 
__func__
);

306 
dev
->
c⁄fig
->
ifmode
 = 
IFMODE_TOGGLE
;

307 
dev
->
	`c⁄fig_h¨dw¨e
(dev);

309 
dev
->
ifmode
 = 
IFMODE_TOGGLE
;

312  
rc
;

313 
	}
}

315 
	$su≥r_£t_„©uª
(
sh™n⁄_dev
 *
dev
, 
u8
 
cmd
, u8 
addr
, u8 *
vÆue
, 
nbyã
)

317 
i
, 
rc
 = 0;

318 
lun
;

319 
sh™n⁄_ªque°
 *
ªq
, *
tmp
;

320 
li°_hód
 
ªq_hód
;

329 
	`as£π
(
nbyã
 > 1);

330 
	`INIT_LIST_HEAD
(&
ªq_hód
);

332 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

333 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôîeg_cmd
, 
lun
, 0, 0, 0, 0);

334 i‡(
NULL
 =
ªq
) {

335 
rc
 = 
ALLOCMEM_FAILED
;

336 
‰ì_ªq_out
;

338 
ªq
->
wr_Êash_ªg_nbyã
 = 
nbyã
;

340 
	`mem£t
(
ªq
->
dúe˘_cmdqueue
, 0x00, (req->direct_cmdqueue));

341 
ªq
->
dúe˘_cmdqueue
[0] = 
sh_wrôîeg_cmd
;

342 
ªq
->
dúe˘_cmdqueue
[4] = 
addr
;

343 
ªq
->
dúe˘_cmdqueue
[5] = 
nbyã
;

344 
ªq
->
dúe˘_cmdqueue
[6] = 
cmd
;

345 
ªq
->
dúe˘_cmdqueue
[7] = 
	`log2phy_lun
(
dev
, 
lun
);

346 
i
 = 0; i < 
nbyã
; i++)

347 
ªq
->
dúe˘_cmdqueue
[8 + 
i
] = 
vÆue
[i];

349 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

352 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

353 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

354 
‰ì_ªq_out
;

357 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

358 
	`upd©e_cmdqueue
(
dev
, 
lun
);

360 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

361 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

362 
‰ì_ªq_out
;

366 
‰ì_ªq_out
:

367 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

368 
	`li°_dñ
(&
ªq
->
li°
);

369 
	`‰ì_ªque°
(
ªq
);

371  
rc
;

372 
	}
}

378 
	$¥e£¡_ab£¡_luns
(
sh™n⁄_dev
 *
dev
, *
vÆue
, 
ty≥
)

380 
°¨t
, 
íd
, 
lun
, 
b
, 
phy
;

381 *
p
, *
íd±r
;

383 i‡(!
	`°∫cmp
("phylun:", 
vÆue
, 7)) {

384 
phy
 = 1;

385 } i‡(!
	`°∫cmp
("loglun:", 
vÆue
, 7)) {

386 
phy
 = 0;

388 
	`¥ötf
("option --present-lunsánd --absent-luns should beÖrefix by 'phylun:' or 'loglun:'\n");

389 
	`exô
(
EXIT_FAILURE
);

392 i‡(!
ty≥
)

393 
	`mem£t
(
dev
->
lun_bôm≠
, 0xFF, (dev->lun_bitmap));

395 
p
 = 
vÆue
 + 7;

396 
b
 = 0;

398 
	`Ârötf
(
°dîr
, "%†%†luns: ", 
ty≥
 ? "ab£¡" : "¥e£¡", 
phy
 ? "physical" : "logical");

401 
°¨t
 = 
	`°πoul
(
p
, &
íd±r
, 10);

402 i‡('-' =*
íd±r
) {

403 
p
 = 
íd±r
 + 1;

404 
íd
 = 
	`°πoul
(
p
, &
íd±r
, 10);

406 
íd
 = 
°¨t
;

409 
lun
 = 
°¨t
;Üu¿<
íd
;Üun++) {

410 i‡(
lun
 < 
dev
->
c⁄fig
->
luns
 &&Üun >= 0) {

411 
	`Ârötf
(
°dîr
, "%d ", 
lun
);

412 i‡(
ty≥
) {

413 
	`£t_bô
(
phy
 ? 
	`phy2log_lun
(
dev
, 
lun
Ë:Üun, dev->
lun_bôm≠
);

415 i‡(
dev
->
èrgëlun
[
phy
 ? 
	`phy2log_lun
(dev, 
lun
Ë:Üun].
shadow
) {

416 
	`¥ötf
("\nShadowÜun:Üog %dÖhy %d\n", 
phy
 ? 
	`phy2log_lun
(
dev
, 
lun
Ë:Üun,Öhy ?Üu¿: 
	`log2phy_lun
(dev,Üun));

417 
	`exô
(
EXIT_FAILURE
);

419 
	`˛ór_bô
(
phy
 ? 
	`phy2log_lun
(
dev
, 
lun
Ë:Üun, dev->
lun_bôm≠
);

421 
b
++;

425 
p
 = 
íd±r
 + 1;

426 } ',' =*
íd±r
);

428 
	`Ârötf
(
°dîr
, "\n");

431 i‡(!
b
) {

432 
	`¥ötf
("ERR: You haveÇo specifyÜuns\n");

433 
	`exô
(
EXIT_FAILURE
);

435 
	}
}

441 
	$sh™n⁄_su≥r_îa£_ußge
()

443 
	`¥ötf
("Description:\n");

444 
	`¥ötf
("\tErase stripÜun blocks\n\n");

446 
	`¥ötf
("Usage:\n");

447 
	`¥ötf
("\tsuper-erase [option] begin_chunkblock count\n");

448 
	`¥ötf
("\tsuper-erase [-a, --entire-flash]\n\n");

450 
	`¥ötf
("Option:\n");

451 
	`¥ötf
("\t-f, --luninfo=luninfo-file\n"

453 
	`¥ötf
("\t-a, --entire-flash\n"

455 
	`¥ötf
("\t-N, --noprogress\n"

457 
	`¥ötf
("\t-s, --silent\n"

459 
	`¥ötf
("\t-t, --absent-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

461 
	`¥ötf
("\t-T, --present-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

463 
	`¥ötf
("\t-h, --help\n"

466 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk\n");

467 
	}
}

469 
	$sh™n⁄_su≥r_îa£
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

471 
›ti⁄
 
l⁄g›ts
 [] = {

472 {"lunöfo", 
ªquúed_¨gumít
, 
NULL
, 'f'},

473 {"ítúe-Êash", 
no_¨gumít
, 
NULL
, 'a'},

474 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

475 {"sûít", 
no_¨gumít
, 
NULL
, 's'},

476 {"ab£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 't'},

477 {"¥e£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 'T'},

478 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

481 
›t
;

482 *
lunöfo_fûe
;

483 
lun
, 
begö_chunkblock
, 
cou¡
;

484 
hód
, 
n›rogªss
, 
sûít
, 
Æl
;

485 
blk
, 
∂™e
, 
µa
;

486 
rc
 = 0;

487 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

488 
li°_hód
 
ªq_hód
;

489 
¥e_˚¡
, 
now_˚¡
;

492 
lunöfo_fûe
 = 
NULL
;

493 
hód
 = 
INDEP_HEAD
;

494 
n›rogªss
 = 0;

495 
sûít
 = 0;

496 
Æl
 = 0;

498 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":f:aN°:T:h", 
l⁄g›ts
, 
NULL
)) != -1) {

499 
›t
) {

501 
lunöfo_fûe
 = 
›èrg
;

504 
Æl
 = 1;

507 
n›rogªss
 = 1;

510 
sûít
 = 1;

513 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 1);

516 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 0);

519 
	`sh™n⁄_su≥r_îa£_ußge
();

522 
	`sh™n⁄_su≥r_îa£_ußge
();

523  
ERR
;

527 i‡(
Æl
) {

528 i‡(
¨gc
 - 
›töd
) {

529 
	`sh™n⁄_su≥r_îa£_ußge
();

530  
ERR
;

532 
begö_chunkblock
 = 0;

533 
cou¡
 = 
dev
->
Êash
->
nblk
 / dev->
c⁄fig
->
≈œ√
;

535 i‡((
¨gc
 - 
›töd
) != 2) {

536 
	`sh™n⁄_su≥r_îa£_ußge
();

537  
ERR
;

539 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

540 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

543 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
/dev->
c⁄fig
->
≈œ√
) {

544 
	`¥ötf
("Overflowáddress\n");

545  
OVERFLOW_ADDR
;

549 i‡(
NULL
 !
lunöfo_fûe
) {

550 i‡(
	`c⁄°ru˘_sb_lunöfo
(
dev
, 
lunöfo_fûe
))

551  
ERR
;

555 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

556 
hód
 |(1 << 
SH_ERASE_PLANE_SHIFT
);

558 i‡(!
n›rogªss
) {

559 
¥e_˚¡
 = 
now_˚¡
 = 0;

560 
	`¥öt
("Su≥r-îa£ i¿¥o˚ss...%%%02d", 
now_˚¡
);

563 
	`INIT_LIST_HEAD
(&
ªq_hód
);

565 
blk
 = 
begö_chunkblock
; blk < begö_chunkblock + 
cou¡
; blk++) {

566 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

569 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

570 i‡(
	`is_bad_lunblock
(
dev
, 
lun
, 
blk
))

573 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
, 
hód
, 0, 0);

574 i‡(
NULL
 =
chunk_hód_ªq
) {

575 
rc
 = 
ALLOCMEM_FAILED
;

576 
‰ì_ªq_out
;

578 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

580 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

581 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_îa£_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
, 
hód
, 0, 0);

582 i‡(
NULL
 =
ªq
) {

583 
rc
 = 
ALLOCMEM_FAILED
;

584 
‰ì_ªq_out
;

586 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

591 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

592 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

593 
‰ì_ªq_out
;

597 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

598 
	`upd©e_cmdqueue
(
dev
, 
lun
);

600 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

601 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

602 
‰ì_ªq_out
;

606 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

607 i‡(
sûít
)

608 
rc
 |
	`check_ªq_°©us_sûít
(
ªq
);

610 
rc
 |
	`check_ªq_°©us
(
ªq
);

614 i‡(!
n›rogªss
) {

615 
now_˚¡
 = 100 * (
blk
 - 
begö_chunkblock
 + 1Ë/ 
cou¡
;

617 i‡(
now_˚¡
 > 
¥e_˚¡
) {

618 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

619 
¥e_˚¡
 = 
now_˚¡
;

624 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

625 
	`li°_dñ
(&
ªq
->
li°
);

626 
	`‰ì_ªque°
(
ªq
);

630 i‡(!
n›rogªss
)

631 
	`¥ötf
("\n");

633 
‰ì_ªq_out
:

634 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

635 
	`li°_dñ
(&
ªq
->
li°
);

636 
	`‰ì_ªque°
(
ªq
);

639 i‡(
rc
 !
FAILED_FLASH_STATUS
 &&Ñc != 0)

640 
	`¥ötf
("SuperÉraseÉncounter someÉrror\n");

641  
rc
;

642 
	}
}

645 
	$sh™n⁄_su≥r_wrôe_ußge
()

647 
	`¥ötf
("Description:\n");

648 
	`¥ötf
("\tWrite stripÜun blocks\n\n");

650 
	`¥ötf
("Usage:\n");

651 
	`¥ötf
("\tSuper-write [option] begin_chunkblock count\n\n");

653 
	`¥ötf
("Option:\n");

654 
	`¥ötf
("\t-f, --luninfo=luninfo-file\n"

656 
	`¥ötf
("\t-e, --seed=SEED\n"

658 
	`¥ötf
("\t-H, --head=HEAD\n"

660 
	`¥ötf
("\t-N, --noprogress\n"

662 
	`¥ötf
("\t-t, --absent-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

664 
	`¥ötf
("\t-T, --present-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

666 
	`¥ötf
("\t-A, --from-page=m\n"

668 
	`¥ötf
("\t-B, --to-page=n\n"

670 
	`¥ötf
("\t-h, --help\n"

673 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk\n");

674 
	}
}

676 
	$sh™n⁄_su≥r_wrôe
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

678 
›ti⁄
 
l⁄g›ts
 [] = {

679 {"lunöfo", 
ªquúed_¨gumít
, 
NULL
, 'f'},

680 {"£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

681 {"hód", 
ªquúed_¨gumít
, 
NULL
, 'H'},

682 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

683 {"ab£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 't'},

684 {"¥e£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 'T'},

685 {"‰om-∑ge", 
ªquúed_¨gumít
, 
NULL
, 'A'},

686 {"to-∑ge", 
ªquúed_¨gumít
, 
NULL
, 'B'},

687 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

690 
i
, 
rc
 = 0;

691 
›t
;

692 *
lunöfo_fûe
;

693 
£ed
, 
hód
, 
£ed_way
, 
n›rogªss
;

694 
blk
, 
∂™e
, 
µa
, 
∑ge
, 
£˘‹_£ed
;

695 
lun
, 
begö_chunkblock
, 
cou¡
;

696 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
;

697 
li°_hód
 
ªq_hód
;

698 
¥e_˚¡
, 
now_˚¡
;

699 
‰om∑ge
 = 0, 
t›age
 = 
dev
->
Êash
->
≈age
 - 1;

702 
lunöfo_fûe
 = 
NULL
;

703 
£ed
 = 
	`gë£ed
(0);

704 
hód
 = 
INDEP_HEAD
;

705 
£ed_way
 = 0;

706 
n›rogªss
 = 0;

708 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":f:e:H:Nt:T:A:B:h", 
l⁄g›ts
, 
NULL
)) != -1) {

709 
›t
) {

711 
lunöfo_fûe
 = 
›èrg
;

714 
£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

715 
£ed_way
 = 1;

718 
hód
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

719 i‡(
HEAD0
 !
hód
 && 
HEAD1
 !hód && 
INDEP_HEAD
 != head) {

720 
	`¥ötf
("Head choices: 0 1 2\n");

721  
ERR
;

725 
n›rogªss
 = 1;

728 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 1);

731 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 0);

734 
‰om∑ge
 = 
	`©oi
(
›èrg
);

737 
t›age
 = 
	`©oi
(
›èrg
);

740 
	`sh™n⁄_su≥r_wrôe_ußge
();

743 
	`sh™n⁄_su≥r_wrôe_ußge
();

744  
ERR
;

748 i‡((
¨gc
 - 
›töd
) != 2) {

749 
	`sh™n⁄_su≥r_wrôe_ußge
();

750  
ERR
;

753 i‡(
‰om∑ge
 >
dev
->
Êash
->
≈age
 || 
t›age
 >= dev->flash->npage || frompage >Åopage) {

754 
	`¥ötf
("InvÆid f‹m-∑gê%dÅo-∑gê%d\n", 
‰om∑ge
, 
t›age
);

755 
	`exô
(
EXIT_FAILURE
);

758 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

759 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

761 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
/dev->
c⁄fig
->
≈œ√
) {

762 
	`¥ötf
("Overflowáddress\n");

763  
OVERFLOW_ADDR
;

767 i‡(
HEAD0
 =
hód
 || 
HEAD1
 == head) {

768 i‡(!
dev
->
c⁄fig
->
øid_mode
) {

769 
	`¥ötf
("You mustÉnableÑaid when write by head0 or head1. PleaseÑm file 'config'ÅhenÑeconfig hardware\n");

770  
ERR
;

775 i‡(
NULL
 !
lunöfo_fûe
) {

776 i‡(
	`c⁄°ru˘_sb_lunöfo
(
dev
, 
lunöfo_fûe
))

777  
ERR
;

780 i‡(!
£ed_way
)

781 
	`¥öt
("£ed=%d\n", 
£ed
);

784 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

785 
hód
 |(1 << 
SH_WRITE_PLANE_SHIFT
);

787 i‡(!
n›rogªss
) {

788 
¥e_˚¡
 = 
now_˚¡
 = 0;

789 
	`¥öt
("Su≥r-wrôêöÖro˚ss...%%%02d", 
now_˚¡
);

792 
	`INIT_LIST_HEAD
(&
ªq_hód
);

794 
blk
 = 
begö_chunkblock
; blk < begö_chunkblock + 
cou¡
; blk++) {

795 i‡(
	`is_bad_su≥rblock
(
dev
, 
blk
))

798 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

799 
∑ge
 = 
‰om∑ge
;

802 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
) {

803 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidöô_cmd
, 
	`su≥rblock_∑rôylun
(dev, 
blk
), 
µa
, 
hód
, 0, 
	`su≥rblock_nd©Æun
(dev, blk));

804 i‡(
NULL
 =
ªq
) {

805 
rc
 = 
ALLOCMEM_FAILED
;

806 
‰ì_ªq_out
;

808 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

811 
√xt_block_∑ge
:

812 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

813 i‡(
	`is_bad_lunblock
(
dev
, 
lun
, 
blk
))

816 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
 && 
	`su≥rblock_∑rôylun
(dev, 
blk
Ë=
lun
)

819 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
 + 
∑ge
, 
hód
, 0, dev->
c⁄fig
->
∑ge_n£˘‹
);

820 i‡(
NULL
 =
chunk_hód_ªq
) {

821 
rc
 = 
ALLOCMEM_FAILED
;

822 
‰ì_ªq_out
;

824 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++) {

825 
£˘‹_£ed
 = ((
µa
 + 
∑ge
Ë* 
dev
->
c⁄fig
->
∑ge_n£˘‹
 + 
i
Ë+ ((
lun
 + 
£ed
)<<24);

826 
	`§™d
(
£˘‹_£ed
);

827 
	`∑d_ønd
(
chunk_hód_ªq
->
d©a
 + 
i
 * 
dev
->
c⁄fig
->
£˘‹_size
, dev->config->sector_size);

828 
	`∑d_ønd
(
chunk_hód_ªq
->
mëad©a
 + 
i
, 
METADATA_SIZE
);

832 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

834 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

835 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_wrôe_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, dev->
c⁄fig
->
∑ge_n£˘‹
);

836 i‡(
NULL
 ==
ªq
) {

837 
rc
 = 
ALLOCMEM_FAILED
;

838 
‰ì_ªq_out
;

840 
i
 = 0; i < 
dev
->
c⁄fig
->
∑ge_n£˘‹
; i++) {

841 
£˘‹_£ed
 = ((
µa
 + 
∂™e
 * 
dev
->
Êash
->
≈age
 + 
∑ge
Ë* dev->
c⁄fig
->
∑ge_n£˘‹
 + 
i
Ë+ ((
lun
 + 
£ed
)<<24);

842 
	`§™d
(
£˘‹_£ed
);

843 
	`∑d_ønd
(
ªq
->
d©a
 + 
i
 * 
dev
->
c⁄fig
->
£˘‹_size
, dev->config->sector_size);

844 
	`∑d_ønd
(
ªq
->
mëad©a
 + 
i
, 
METADATA_SIZE
);

848 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

853 i‡(
dev
->
c⁄fig
->
øid_mode
 && (
hód
 & 
HEAD_MASK
Ë!
INDEP_HEAD
) {

854 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidwrôe_cmd
, 
	`su≥rblock_∑rôylun
(dev, 
blk
), 
µa
 + 
∑ge
, 
hód
, 0, 0);

855 i‡(
NULL
 =
chunk_hód_ªq
) {

856 
rc
 = 
ALLOCMEM_FAILED
;

857 
‰ì_ªq_out
;

859 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

861 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

862 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_øidwrôe_cmd
, 
	`su≥rblock_∑rôylun
(dev, 
blk
), 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, 0);

863 i‡(
NULL
 =
ªq
) {

864 
rc
 = 
ALLOCMEM_FAILED
;

865 
‰ì_ªq_out
;

867 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

872 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

873 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

874 
‰ì_ªq_out
;

877 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

878 
	`upd©e_cmdqueue
(
dev
, 
lun
);

880 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

881 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

882 
‰ì_ªq_out
;

886 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

887 i‡(
sh_wrôe_cmd
 =
ªq
->
›code
)

888 
	`check_ªq_°©us
(
ªq
);

892 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

893 
	`li°_dñ
(&
ªq
->
li°
);

894 
	`‰ì_ªque°
(
ªq
);

898 i‡(!
n›rogªss
) {

899 
now_˚¡
 = 100 * ((
blk
 - 
begö_chunkblock
Ë* 
dev
->
Êash
->
≈age
 + 
∑ge
 + 1Ë/ (
cou¡
 * dev->flash->npage);

901 i‡(
now_˚¡
 > 
¥e_˚¡
) {

902 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

903 
¥e_˚¡
 = 
now_˚¡
;

907 i‡(++
∑ge
 < 
t›age
 + 1)

908 
√xt_block_∑ge
;

911 i‡(!
n›rogªss
)

912 
	`¥ötf
("\n");

914 
‰ì_ªq_out
:

915 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

916 
	`li°_dñ
(&
ªq
->
li°
);

917 
	`‰ì_ªque°
(
ªq
);

920 i‡(
rc
)

921 
	`¥ötf
("Super-writeÉncounter someÉrror\n");

922  
rc
;

923 
	}
}

928 
	$sh™n⁄_su≥r_ªad_ußge
()

930 
	`¥ötf
("Description:\n");

931 
	`¥ötf
("\tDefaultÅhis command just statisticÉccÑesult. Option [--seed] willÉnable data consistence checkánd [--raid] willÉnableÑaidÖarity check if data\n"

934 
	`¥ötf
("Usage:\n");

935 
	`¥ötf
("\tSuper-read [option] begin_chunkblock count\n\n");

937 
	`¥ötf
("Option:\n");

938 
	`¥ötf
("\t-f, --luninfo=luninfo-file\n"

940 
	`¥ötf
("\t-P, --print-error-location\n"

942 
	`¥ötf
("\t-e, --seed=SEED\n"

944 
	`¥ötf
("\t-r, --raid\n"

946 
	`¥ötf
("\t-N, --noprogress\n"

948 
	`¥ötf
("\t-D, --disable-last-cacheread\n"

950 
	`¥ötf
("\t-t, --absent-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

952 
	`¥ötf
("\t-T, --present-luns=loglun|phylun:x1-x2,x3,x4-x5...\n"

954 
	`¥ötf
("\t-A, --from-page=m\n"

956 
	`¥ötf
("\t-B, --to-page=n\n"

958 
	`¥ötf
("\t-p, --print-option=[D/M/E]\n"

960 
	`¥ötf
("\t-h, --help\n"

963 
	`¥ötf
("NOTE:\n\tBlock index is count by chunk\n");

964 
	}
}

966 
	$sh™n⁄_su≥r_ªad
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

968 
›ti⁄
 
l⁄g›ts
 [] = {

969 {"lunöfo", 
ªquúed_¨gumít
, 
NULL
, 'f'},

970 {"¥öt-îr‹-loˇti⁄", 
no_¨gumít
, 
NULL
, 'P'},

971 {"£ed", 
ªquúed_¨gumít
, 
NULL
, 'e'},

972 {"øid", 
no_¨gumít
, 
NULL
, 'r'},

973 {"n›rogªss", 
no_¨gumít
, 
NULL
, 'N'},

974 {"dißbÀ-œ°-ˇchîód", 
no_¨gumít
, 
NULL
, 'D'},

975 {"ab£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 't'},

976 {"¥e£¡-luns", 
ªquúed_¨gumít
, 
NULL
, 'T'},

977 {"‰om-∑ge", 
ªquúed_¨gumít
, 
NULL
, 'A'},

978 {"to-∑ge", 
ªquúed_¨gumít
, 
NULL
, 'B'},

979 {"¥öt-›ti⁄", 
ªquúed_¨gumít
, 
NULL
, 'p'},

980 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

983 
i
, 
j
, 
rc
 = 0;

984 
›t
;

985 *
lunöfo_fûe
;

986 
øid
, 
¥_îr‹_loˇti⁄
;

987 
£˘‹_£ed
, 
£ed
, 
check_d©a
, 
hód
, 
n›rogªss
;

988 *
øid_d©a
, *
øid_mëad©a
;

989 
blk
, 
∂™e
, 
µa
, 
∑ge
;

990 
lun
, 
begö_chunkblock
, 
cou¡
;

991 
sh™n⁄_ªque°
 *
chunk_hód_ªq
, *
ªq
, *
tmp
, *
tmp1
;

992 
li°_hód
 
ªq_hód
;

993 
¥e_˚¡
, 
now_˚¡
;

994 **
lun_ecc_°©i°ics
;

995 
œ°_ˇchîód
 = 1;

996 
¥_swôch
 = 0, 
¥_ecc
 = 0, 
¥_mëa
 = 0, 
¥_d©a
 = 0, 
chunkn£˘‹
;

997 
‰om∑ge
 = 0, 
t›age
 = 
dev
->
Êash
->
≈age
 - 1;

1000 
hód
 = 0;

1001 
n›rogªss
 = 0;

1002 
øid
 = 0;

1003 
¥_îr‹_loˇti⁄
 = 0;

1004 
£ed
 = -1;

1005 
check_d©a
 = 0;

1006 
lunöfo_fûe
 = 
NULL
;

1008 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":f:Pe:NDt:T:A:B:p:h", 
l⁄g›ts
, 
NULL
)) != -1) {

1009 
›t
) {

1011 
lunöfo_fûe
 = 
›èrg
;

1014 
¥_îr‹_loˇti⁄
 = 1;

1017 
£ed
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

1018 
check_d©a
 = 1;

1021 i‡(!
dev
->
c⁄fig
->
øid_mode
) {

1022 
	`¥ötf
("Hardware doesn`tÉnableÑaid,ÖleaseÑm file 'config'ÅhenÑeconfig\n");

1023  
ERR
;

1025 
øid
 = 1;

1028 
n›rogªss
 = 1;

1031 
œ°_ˇchîód
 = 0;

1034 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 1);

1037 
	`¥e£¡_ab£¡_luns
(
dev
, 
›èrg
, 0);

1040 
‰om∑ge
 = 
	`©oi
(
›èrg
);

1043 
t›age
 = 
	`©oi
(
›èrg
);

1046 
¥_swôch
 = 1;

1047 
check_d©a
 = 1;

1048 
n›rogªss
 = 1;

1050 
i
 = 0; i < 
	`°æí
(
›èrg
); i++) {

1051 
›èrg
[
i
]) {

1053 
¥_d©a
 = 1;

1056 
¥_mëa
 = 1;

1059 
¥_ecc
 = 1;

1062 
	`sh™n⁄_su≥r_ªad_ußge
();

1063  
ERR
;

1068 
	`sh™n⁄_su≥r_ªad_ußge
();

1071 
	`sh™n⁄_su≥r_ªad_ußge
();

1072  
ERR
;

1076 i‡((
¨gc
 - 
›töd
) != 2) {

1077 
	`sh™n⁄_su≥r_ªad_ußge
();

1078  
ERR
;

1081 i‡(
‰om∑ge
 >
dev
->
Êash
->
≈age
 || 
t›age
 >= dev->flash->npage || frompage >Åopage) {

1082 
	`¥ötf
("InvÆid f‹m-∑gê%dÅo-∑gê%d\n", 
‰om∑ge
, 
t›age
);

1083 
	`exô
(
EXIT_FAILURE
);

1086 
begö_chunkblock
 = 
	`°πoul
(
¨gv
[
›töd
], 
NULL
, 10);

1087 
cou¡
 = 
	`°πoul
(
¨gv
[
›töd
 + 1], 
NULL
, 10);

1089 i‡((
begö_chunkblock
 + 
cou¡
Ë> 
dev
->
Êash
->
nblk
/dev->
c⁄fig
->
≈œ√
) {

1090 
	`¥ötf
("Overflowáddress\n");

1091  
OVERFLOW_ADDR
;

1095 
lun_ecc_°©i°ics
 = 
	`zmÆloc
(
dev
->
c⁄fig
->
luns
 * (*lun_ecc_statistics));

1096 i‡(
NULL
 =
lun_ecc_°©i°ics
) {

1097 
rc
 = 
ALLOCMEM_FAILED
;

1098 
out
;

1100 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1101 
lun_ecc_°©i°ics
[
lun
] = 
	`zmÆloc
(256 * (*lun_ecc_statistics[lun]));

1102 i‡(
NULL
 =
lun_ecc_°©i°ics
[
lun
]) {

1103 
rc
 = 
ALLOCMEM_FAILED
;

1104 
‰ì_lun_ecc_°©i°ics
;

1109 i‡(
NULL
 !
lunöfo_fûe
) {

1110 i‡(
	`c⁄°ru˘_sb_lunöfo
(
dev
, 
lunöfo_fûe
))

1111  
ERR
;

1114 i‡(
øid
) {

1115 
øid_d©a
 = 
	`mÆloc
(
dev
->
c⁄fig
->
chunk_nd©a
);

1116 i‡(
NULL
 =
øid_d©a
)

1117  
ERR
;

1119 
øid_mëad©a
 = 
	`mÆloc
(
dev
->
c⁄fig
->
chunk_nmëa
);

1120 i‡(
NULL
 =
øid_mëad©a
) {

1121 
	`‰ì
(
øid_d©a
);

1122  
ERR
;

1127 i‡(
dev
->
c⁄fig
->
≈œ√
 > 1)

1128 
hód
 |(1 << 
SH_READ_PLANE_SHIFT
);

1130 i‡(!
n›rogªss
) {

1131 
¥e_˚¡
 = 
now_˚¡
 = 0;

1132 
	`¥öt
("Su≥r-ªad i¿¥o˚ss...%%%02d", 
now_˚¡
);

1135 
	`INIT_LIST_HEAD
(&
ªq_hód
);

1137 
blk
 = 
begö_chunkblock
; blk < begö_chunkblock + 
cou¡
; blk++) {

1138 i‡(
	`is_bad_su≥rblock
(
dev
, 
blk
))

1141 
µa
 = 
blk
 * 
dev
->
c⁄fig
->
≈œ√
 * dev->
Êash
->
≈age
;

1142 
∑ge
 = 
‰om∑ge
;

1144 
√xt_block_∑ge
:

1145 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1146 i‡(
	`is_bad_lunblock
(
dev
, 
lun
, 
blk
))

1149 
chunk_hód_ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∑ge
, 
hód
, 0, 0);

1150 i‡(
NULL
 =
chunk_hód_ªq
) {

1151 
rc
 = 
ALLOCMEM_FAILED
;

1152 
‰ì_ªq_out
;

1154 
	`li°_add_èû
(&
chunk_hód_ªq
->
li°
, &
ªq_hód
);

1156 
∂™e
 = 1;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

1157 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_¥îód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 0, 0);

1158 i‡(
NULL
 =
ªq
) {

1159 
rc
 = 
ALLOCMEM_FAILED
;

1160 
‰ì_ªq_out
;

1162 
	`li°_add_èû
(&
ªq
->
chunk_li°
, &
chunk_hód_ªq
->chunk_list);

1165 
∂™e
 = 0;Öœ√ < 
dev
->
c⁄fig
->
≈œ√
;Ölane++) {

1166 
ns
, 
bs
 = 0;

1167 
ªmaö_ns
 = 
dev
->
c⁄fig
->
∑ge_n£˘‹
;

1169 
ªmaö_ns
) {

1170 
ns
 = (
ªmaö_ns
 >= 8) ? 8 :Ñemain_ns;

1172 i‡(
check_d©a
 || 
øid
)

1173 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 
bs
, 
ns
);

1175 
ªq
 = 
	`Æloc_ªque°
(
dev
, 
sh_ˇchîód_cmd
, 
lun
, 
µa
 + 
∂™e
 * dev->
Êash
->
≈age
 + 
∑ge
, 
hód
, 
bs
, 0);

1176 i‡(
NULL
 =
ªq
) {

1177 
rc
 = 
ALLOCMEM_FAILED
;

1178 
‰ì_ªq_out
;

1180 
ªq
->
n£˘‹
 = 
ns
;

1181 
	`li°_add_èû
(&
ªq
->
li°
, &
ªq_hód
);

1183 
bs
 +
ns
;

1184 
ªmaö_ns
 -
ns
;

1187 
ªq
->
œ°_ˇchîód
 =Üast_cacheread;

1191 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1192 i‡((
rc
 = 
dev
->
	`submô_ªque°
(
ªq
)))

1193 
‰ì_ªq_out
;

1196 
	`f‹_dev_óch_lun
(
dev
, 
lun
)

1197 
	`upd©e_cmdqueue
(
dev
, 
lun
);

1199 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1200 i‡((
rc
 = 
	`pﬁl_cmdqueue
(
dev
, 
lun
)))

1201 
‰ì_ªq_out
;

1204 i‡(!
¥_swôch
)

1205 
nŸ_¥öt_∑th
;

1208 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1209 i‡(
sh_¥îód_cmd
 !
ªq
->
›code
)

1211 
tmp1
 = 
ªq
;

1214 i‡(
¥_îr‹_loˇti⁄
)

1215 
	`check_ªq_°©us
(
ªq
);

1217 
	`check_ªq_°©us_sûít
(
ªq
);

1220 
tmp
 = 
	`li°_fú°_íåy
(&
ªq
->
li°
, 
sh™n⁄_ªque°
,Üist);

1221 
	`as£π
(
tmp
->
›code
 =
sh_ˇchîód_cmd
);

1223 i‡(
¥_ecc
) {

1224 
ªq
 = 
tmp
;

1225 
chunkn£˘‹
 = 
dev
->
c⁄fig
->
chunk_n£˘‹
;

1227 
	`¥ötf
("#ECC÷un=%d sb=%dÖage=%d):", 
ªq
->
lun
,Ñeq->
chunk_block
,Ñeq->
∑ge
);

1228 
chunkn£˘‹
) {

1229 
i
 = 0; i < 
ªq
->
n£˘‹
; i++)

1230 
	`¥ötf
(" %02X", 
ªq
->
ecc
[
i
]);

1231 
chunkn£˘‹
 -
ªq
->
n£˘‹
;

1232 
ªq
 = 
	`li°_fú°_íåy
(&ªq->
li°
, 
sh™n⁄_ªque°
,Üist);

1234 
	`¥ötf
("\n");

1237 i‡(
¥_mëa
) {

1238 
ªq
 = 
tmp
;

1239 
chunkn£˘‹
 = 
dev
->
c⁄fig
->
chunk_n£˘‹
;

1241 
	`¥ötf
("#mëa÷un=%d sb=%dÖage=%d):", 
ªq
->
lun
,Ñeq->
chunk_block
,Ñeq->
∑ge
);

1242 
chunkn£˘‹
) {

1243 
i
 = 0; i < 
ªq
->
n£˘‹
; i++)

1244 
	`¥ötf
(" %016lX", 
ªq
->
mëad©a
[
i
]);

1245 
chunkn£˘‹
 -
ªq
->
n£˘‹
;

1246 
ªq
 = 
	`li°_fú°_íåy
(&ªq->
li°
, 
sh™n⁄_ªque°
,Üist);

1248 
	`¥ötf
("\n");

1251 i‡(
¥_d©a
) {

1252 
ªq
 = 
tmp
;

1253 
chunkn£˘‹
 = 0;

1255 
chunkn£˘‹
 !
dev
->
c⁄fig
->
chunk_n£˘‹
) {

1256 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

1257 
	`¥ötf
("#£˘‹÷un=%d sb=%dÖage=%d): %d", 
ªq
->
lun
,Ñeq->
chunk_block
,Ñeq->
∑ge
, 
chunkn£˘‹
 + 
i
);

1258 
j
 = 0; j < 
dev
->
c⁄fig
->
£˘‹_size
; j++) {

1259 i‡(0 =
j
 % 32)

1260 
	`¥ötf
("\n");

1261 
	`¥ötf
("%02X ", 
ªq
->
d©a
[
i
 * 
dev
->
c⁄fig
->
£˘‹_size
 + 
j
]);

1263 
	`¥ötf
("\n");

1266 
chunkn£˘‹
 +
ªq
->
n£˘‹
;

1267 
ªq
 = 
	`li°_fú°_íåy
(&ªq->
li°
, 
sh™n⁄_ªque°
,Üist);

1271 
ªq
 = 
tmp1
;

1273 
skù_check_d©a
;

1276 
nŸ_¥öt_∑th
:

1277 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1278 i‡(
sh_¥îód_cmd
 =
ªq
->
›code
) {

1279 i‡(
¥_îr‹_loˇti⁄
)

1280 
	`check_ªq_°©us
(
ªq
);

1282 
	`check_ªq_°©us_sûít
(
ªq
);

1285 i‡(
sh_ˇchîód_cmd
 =
ªq
->
›code
) {

1286 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

1287 
lun_ecc_°©i°ics
[
ªq
->
lun
][ªq->
ecc
[
i
]]++;

1289 i‡(
ªq
->
ecc
[
i
] < 251 || !
¥_îr‹_loˇti⁄
)

1292 i‡(
ªq
->
ecc
[
i
] == 251)

1293 
	`¥ötf
("Su≥r-ªad bœnk %02X. ", 
ªq
->
ecc
[
i
]);

1294 i‡(
ªq
->
ecc
[
i
] > 251)

1295 
	`¥ötf
("Su≥r-ªadÉc¯Áûed: %02X. ", 
ªq
->
ecc
[
i
]);

1297 
	`¥ötf
("lun=%d block=%dÖage=%d sector=%d\n",

1298 
ªq
->
lun
,Ñeq->
chunk_block
,Ñeq->
∑ge
, 
i
 +Ñeq->
b£˘‹
 +Ñeq->
chunk_∂™e
 * 
dev
->
c⁄fig
->
∑ge_n£˘‹
);

1304 i‡(!
check_d©a
 && !
øid
)

1305 
skù_check_d©a
;

1307 if(
øid
) {

1308 
	`mem£t
(
øid_d©a
, 0x00, 
dev
->
c⁄fig
->
chunk_nd©a
);

1309 
	`mem£t
(
øid_mëad©a
, 0x00, 
dev
->
c⁄fig
->
chunk_nmëa
);

1312 
	`li°_f‹_óch_íåy
(
ªq
, &
ªq_hód
, 
li°
) {

1313 i‡(
sh_ˇchîód_cmd
 !
ªq
->
›code
)

1316 i‡(
øid
) {

1317 
	`memx‹
(
øid_d©a
 + (
ªq
->
chunk_∂™e
 * 
dev
->
c⁄fig
->
∑ge_n£˘‹
 +Ñeq->
b£˘‹
Ë* dev->c⁄fig->
£˘‹_size
,Ñeq->
d©a
,Ñeq->
n£˘‹
 * dev->config->sector_size);

1318 
	`memx‹
(
øid_mëad©a
 + (
ªq
->
chunk_∂™e
 * 
dev
->
c⁄fig
->
∑ge_n£˘‹
 +Ñeq->
b£˘‹
Ë* 
METADATA_SIZE
,Ñeq->
mëad©a
,Ñeq->
n£˘‹
 * METADATA_SIZE);

1320 i‡(
	`su≥rblock_∑rôylun
(
dev
, 
blk
Ë=
ªq
->
lun
)

1324 i‡(!
check_d©a
)

1327 
i
 = 0; i < 
ªq
->
n£˘‹
; i++) {

1328 
__u8
 
ch
;

1329 
ibx
, 
jump
 = 0;

1331 
£˘‹_£ed
 = (
ªq
->
µa
 * 
dev
->
c⁄fig
->
∑ge_n£˘‹
 +Ñeq->
b£˘‹
 + 
i
Ë+ (‘eq->
lun
 + 
£ed
)<<24);

1332 
	`§™d
(
£˘‹_£ed
);

1334 
ibx
 = 0; ibx < 
dev
->
c⁄fig
->
£˘‹_size
; ibx++) {

1335 i‡((
ch
 = 
	`ønd
()Ë!
ªq
->
d©a
[
i
 * 
dev
->
c⁄fig
->
£˘‹_size
 + 
ibx
]) {

1336 
	`¥ötf
("Data mismatch:Üun=%d block=%dÖage=%d sector=%d off=%d write=%02XÑead=%02X\n",

1337 
ªq
->
lun
,Ñeq->
chunk_block
,Ñeq->
∑ge
, 
i
 +Ñeq->
b£˘‹
 +Ñeq->
chunk_∂™e
 * 
dev
->
c⁄fig
->
∑ge_n£˘‹
,

1338 
ibx
, 
ch
, 
ªq
->
d©a
[
i
 * 
dev
->
c⁄fig
->
£˘‹_size
 + ibx]);

1339 
jump
 = 1;

1344 i‡(
jump
)

1347 
ibx
 = 0; ibx < 
METADATA_SIZE
; ibx++) {

1348 i‡((
ch
 = 
	`ønd
()Ë!((
__u8
 *)
ªq
->
mëad©a
)[
i
 * 
METADATA_SIZE
 + 
ibx
]) {

1349 
	`¥ötf
("Metadata mismatch:Üun=%d block=%dÖage=%d sector=%d\n",

1350 
ªq
->
lun
,Ñeq->
chunk_block
,Ñeq->
∑ge
, 
i
 +Ñeq->
b£˘‹
 +Ñeq->
chunk_∂™e
 * 
dev
->
c⁄fig
->
∑ge_n£˘‹
);

1358 i‡(
øid
) {

1359 
i
 = 0; i < 
dev
->
c⁄fig
->
chunk_nd©a
; i++) {

1360 i‡(((
__u8
 *)
øid_d©a
)[
i
] != 0) {

1361 
	`¥ötf
("Raid check faûed: block=%dÖage=%d\n", 
blk
, 
	`li°_fú°_íåy
(&
ªq_hód
, 
sh™n⁄_ªque°
, 
li°
)->
∑ge
);

1362 
skù_check_d©a
;

1366 
i
 = 0; i < 
dev
->
c⁄fig
->
chunk_nmëa
; i++) {

1367 i‡(((
__u8
 *)
øid_mëad©a
)[
i
] != 0) {

1368 
	`¥ötf
("Raid check faûed: block=%dÖage=%d\n", 
blk
, 
	`li°_fú°_íåy
(&
ªq_hód
, 
sh™n⁄_ªque°
, 
li°
)->
∑ge
);

1369 
skù_check_d©a
;

1374 
skù_check_d©a
:

1375 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1376 
	`li°_dñ
(&
ªq
->
li°
);

1377 
	`‰ì_ªque°
(
ªq
);

1381 i‡(!
n›rogªss
) {

1382 
now_˚¡
 = 100 * ((
blk
 - 
begö_chunkblock
Ë* 
dev
->
Êash
->
≈age
 + 
∑ge
 + 1Ë/ (
cou¡
 * dev->flash->npage);

1384 i‡(
now_˚¡
 > 
¥e_˚¡
) {

1385 
	`¥öt
("\b\b\b%%%02d", 
now_˚¡
);

1386 
¥e_˚¡
 = 
now_˚¡
;

1390 i‡(++
∑ge
 < 
t›age
 + 1)

1391 
√xt_block_∑ge
;

1394 i‡(
¥_swôch
)

1397 i‡(!
n›rogªss
)

1398 
	`¥ötf
("\n");

1401 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1402 
	`¥ötf
("#Lun-%2d ECCÑesu…:\n", 
lun
);

1404 
i
 = 0; i < 256; i++) {

1405 i‡(
lun_ecc_°©i°ics
[
lun
][
i
])

1406 
	`¥ötf
("ecc[%2d] = %-8ld %%%.1f\n", 
i
, 
lun_ecc_°©i°ics
[
lun
][i],

1407 (100.0 * 
lun_ecc_°©i°ics
[
lun
][
i
]Ë/ (
cou¡
 * (
t›age
 - 
‰om∑ge
 + 1Ë* 
dev
->
c⁄fig
->
chunk_n£˘‹
));

1409 
	`¥ötf
("\n");

1412 
	`¥ötf
("#Global ECCÑesult:\n");

1413 
i
 = 0; i < 256; i++) {

1414 
°rù_˙t
 = 0;

1415 
vluns
 = 0;

1417 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1418 
°rù_˙t
 +
lun_ecc_°©i°ics
[
lun
][
i
];

1419 
vluns
++;

1422 i‡(
°rù_˙t
)

1423 
	`¥ötf
("ecc[%2d] = %-8ld %%%.1f\n", 
i
, 
°rù_˙t
,

1424 (100.0 * 
°rù_˙t
Ë/ (
vluns
 * 
cou¡
 * (
t›age
 - 
‰om∑ge
 + 1Ë* 
dev
->
c⁄fig
->
chunk_n£˘‹
));

1428 
rc
 = 0;

1429 
‰ì_ªq_out
:

1430 
	`li°_f‹_óch_íåy_ß„
(
ªq
, 
tmp
, &
ªq_hód
, 
li°
) {

1431 
	`li°_dñ
(&
ªq
->
li°
);

1432 
	`‰ì_ªque°
(
ªq
);

1435 i‡(
øid
) {

1436 
	`‰ì
(
øid_d©a
);

1437 
	`‰ì
(
øid_mëad©a
);

1439 
‰ì_lun_ecc_°©i°ics
:

1440 
	`f‹_dev_óch_lun
(
dev
, 
lun
) {

1441 i‡(
NULL
 =
lun_ecc_°©i°ics
[
lun
])

1443 
	`‰ì
(
lun_ecc_°©i°ics
[
lun
]);

1445 
	`‰ì
(
lun_ecc_°©i°ics
);

1446 
out
:

1447 i‡(
rc
)

1448 
	`¥ötf
("Super-readÉncounter someÉrror\n");

1449  
rc
;

1450 
	}
}

	@tool.h

1 #i‚de‡
__SHANNON_TOOL_H__


2 
	#__SHANNON_TOOL_H__


	)

4 
	~<gë›t.h
>

5 
	~<time.h
>

6 
	~<sys/time.h
>

7 
	~<sig«l.h
>

8 
	~"li°.h
"

9 
	~"gøphics.h
"

11 #i‡
DMA_ADDR_LENGTH
 == 4

12 
	tdma_addr_t
;

13 
	#U64_LOW_32
(
x
Ë((
__u32
)((x)&0xFFFFFFFF))

14 
	#U64_HIGH_32
(
x
Ë0

	)

15 #ñi‡
DMA_ADDR_LENGTH
 == 8

16 
	tdma_addr_t
;

17 
	#U64_LOW_32
(
x
Ë((
__u32
)((x)&0xFFFFFFFF))

	)

18 
	#U64_HIGH_32
(
x
Ë((
__u32
)((x)>>32))

	)

20 #îr‹ 
Eº‹
 
DMA_ADDR_LENGTH


23 #i‚de‡
__AARCH64__


24 
	t__u8
;

25 
	t__u16
;

26 
	t__u32
;

27 
	t__u64
;

30 
	tul⁄g
;

32 
__u64
 
	tu64
;

33 
__u32
 
	tu32
;

34 
__u16
 
	tu16
;

35 
__u8
 
	tu8
;

37 
	~"bŸh.h
"

38 
	~"sh™n⁄-mbr.h
"

39 
	~"dev-ty≥.h
"

41 
	#ARRAY_SIZE
(
¨r
Ë(◊ºË/ (◊º)[0]))

	)

43 
	#OK
 0

	)

44 
	#ERR
 -1

	)

45 
	#NO_CMDQUEUE_ROOM
 0x80

	)

46 
	#FAILED_FLASH_STATUS
 0x81

	)

47 
	#OVERFLOW_ADDR
 0x82

	)

48 
	#ALLOCMEM_FAILED
 0x83

	)

50 
	#DW_SIZE
 4

	)

51 
	#QW_SIZE
 8

	)

53 
	#PAGE_SIZE
 4096

	)

54 
	#DEFAULT_DEVNAME
 "/dev/sh™n⁄_cdev"

	)

56 
	#METADATA_SIZE
 8

	)

58 
	#HEAD_MASK
 0x0F

	)

59 
	#HEAD0
 0

	)

60 
	#HEAD1
 1

	)

61 
	#INDEP_HEAD
 2

	)

63 
	#IFMODE_MASK
 0x0000000F

	)

64 
	#IFMODE_ASYNC
 0

	)

65 
	#IFMODE_SYNC
 3

	)

66 
	#IFMODE_TOGGLE
 1

	)

68 
	#FLASH_IFMODE_ASYNC
 0x2012

	)

69 
	#FLASH_IFMODE_SYNC
 0x2013

	)

70 
	#FLASH_IFMODE_TOGGLE
 0x2014

	)

72 
	#ECCMODE_ENABLE
 0

	)

73 
	#ECCMODE_DISABLE
 1

	)

74 
	#ECCMODE_BYPASS_SCRAMBLER_ONLY
 2

	)

76 
	#RAIDMODE_DISABLE
 0

	)

77 
	#RAIDMODE_ENABLE
 1

	)

79 
	#RUNCMDQ_US_TIMEOUT
 8000

	)

81 
	#FLASH_SUCCESS_MASK
 0x41

	)

82 
	#FLASH_SUCCESS_STATUS
 0x40

	)

84 
	#BITMAP_BBT_MAGIC
 0xF2F5F7F1F6F3F8F4UL

	)

85 
	#MAX_BADBLK_COUNT
 4090

	)

87 
	smem‹y
 {

88 
	msize
;

89 *
	mkî√l_addr
;

90 
dma_addr_t
 
	mdma_addr
;

91 
li°_hód
 
	mli°
;

92 
li°_hód
 
	mgli°
;

96 
	ssh™n⁄_thªad
 {

97 
	mphythªad_idx
;

98 
	mcmdhód
;

99 
	mcmdem±y
;

100 
	mªq_cou¡
;

101 
thªad_mem
 
	mcmdmem
;

102 
thªad_mem
 
	mcmpmem
;

103 
li°_hód
 
	mªq_li°hód
;

106 
	ssh™n⁄_lun
 {

107 
	mhód
;

108 
	mèû
;

110 
	mch™√l
;

111 
	mphylun
;

112 
	mloglun
;

113 
sh™n⁄_thªad
 *
	mthªad
;

115 
li°_hód
 
	mªq_li°hód
;

118 
	ssh™n⁄_bufhód
 {

119 
	mcmdhód
;

120 
	mcmdem±y
;

121 
thªad_mem
 
	mcmdmem
;

122 
thªad_mem
 
	mcmpmem
;

123 
li°_hód
 
	mªq_li°hód
;

126 
	#MAX_LUN
 ( 256 )

	)

127 
	#MAX_LUN_NLONG
 ( (
MAX_LUN
 + 8 * (Ë- 1Ë/ (8 * ()))

	)

128 
	#MAX_LUN_NBYTE
 ( 
MAX_LUN_NLONG
 * (Ë)

	)

129 
	ssh™n⁄_bbt
 {

130 
	m«me
[32];

132 
	mnch™√l
;

133 
	m¡hªad
;

134 
	m∆un
;

135 
	m≈œ√
;

137 
	mnblock
;

138 
	m≈age
;

140 
	msize
;

141 
	mrsv
[2];

143 
	msb_bbt
[0][
MAX_LUN_NLONG
];

146 
	ssh™n⁄_sb_lunöfo
 {

147 
	mluns
;

148 
	mnd©Æun
;

149 
	m∑rôy_lun
;

150 
	msb_bbt
[
MAX_LUN_NLONG
];

153 
	ssh™n⁄_lunöfo
 {

154 
	m«me
[32];

156 
	mnch™√l
;

157 
	m¡hªad
;

158 
	m∆un
;

159 
	m≈œ√
;

161 
	mnblock
;

162 
	m≈age
;

164 
	msize
;

165 
	mrsv
[2];

167 
sh™n⁄_sb_lunöfo
 
	msb_lunöfo
[0];

170 
	ssh™n⁄_su≥r_block
 {

171 
	midx
;

172 
sh™n⁄_sb_lunöfo
 
	msb_lunöfo
;

175 
	ssh™n⁄_ªque°
 {

176 
	m›code
;

178 
	mlun
;

179 
	mµa
;

180 
	mhód
;

181 
	mb£˘‹
;

182 
	mn£˘‹
;

184 
	mblock
;

185 
	m∑ge
;

186 
	mchunk_block
;

187 
	mchunk_∂™e
;

189 
	madv™˚_ªad
;

190 
sh™n⁄_ªque°
 *
	msiblög_¨ªq
;

192 
__u8
 *
	md©a
;

193 
__u64
 *
	mmëad©a
;

195 
__u8
 
	mid
[8];

196 
__u8
 
	mecc
[64];

197 
__u64
 
	m°©us
;

198 
__u8
 
	mdúe˘_cmdqueue
[64];

200 
	mb‰ì
;

201 
	mrw_ítúe_buf„r
;

202 
	mno_dma
;

203 
	mœ°_ˇchîód
;

204 
	mwr_Êash_ªg_nbyã
;

206 
	mcmdhód
;

207 
	mcmdÀn
;

208 
	mbufcmd
;

210 
sh™n⁄_dev
 *
	mdev
;

211 
li°_hód
 
	mli°
;

212 
li°_hód
 
	mrun_li°
;

213 
li°_hód
 
	mchunk_li°
;

215 
li°_hód
 
	mlun_li°
;

216 
li°_hód
 
	mbufhód_li°
;

218 
li°_hód
 
	mmem_li°hód
;

220 
	m¥iv©e_öt
;

221 
	m¥iv©e_öt_1
;

223 *
	m¥iv©e_d©a
;

224 *
	m¥iv©e_d©a_1
;

227 
	#NORFLASH_INFO_ADDR
 0X1FFF000

	)

228 
	#NORFLASH_INFO_MAGIC
 0X646972656374696F

	)

229 
	sn‹Êash_öfo
 {

230 
u64
 
	mmagic_numbî
;

231 
	m£rvi˚_èg
[32];

232 
	mmodñ_id
[40];

235 
	ssh™n⁄_dev
 {

236 
	mfd
;

237 
	m«me
[32];

238 
	mdomaös
[32];

239 
	möô_mode
;

240 
u§_Êash
 *
	mÊash
;

241 
u§_Êash
 *
	mÊash_bakup
;

242 
u§_c⁄fig
 *
	mc⁄fig
;

243 
u§_c⁄fig
 *
	mc⁄fig_bakup
;

245 
	m©omic_wrôe
;

246 
	m¥i‹ôize_wrôe
;

248 
	mfblocks
;

250 
	möô_d⁄e
;

251 
	mifmode
;

253 
	madv™˚_ªad
;

254 
	mhas_adv™˚_ªad
;

255 
u64
 
	mmbr_vîsi⁄
;

257 
	msûít_c⁄fig
;

258 
	mpowî_budgë
;

259 
	mÊash_if˛ock
;

260 
	möãºu±_dñay
;

261 
	mdma_max_ªad_limô
;

262 
	mmax_out°™dög_bios
;

264 
hw_sysöfo
 *
	mhw_sysöfo
;

265 
hw_c⁄fig
 *
	mhw_c⁄fig
;

267 
li°_hód
 
	mmem_gli°hód
;

268 
mem‹y
 
	mdummy_mem
;

270 
	miowidth
;

271 
	mtmode
;

272 
	mmmode
;

273 
	mmax∂™es
;

274 
	mèrgëluns_suµ‹t
;

276 
	mm™uÆ_≈œ√
;

277 
	msubsy°emid
[8];

279 
	mhw_nch™√l
;

280 
	mhw_¡hªad
;

281 
	mhw_∆un
;

282 
	mhw_thªads
;

283 
	mhw_luns
;

285 
	mlo›s
;

286 
	mbad_blocks
;

287 *
	mbb_cou¡
;

288 
FILE
 *
	mªc‹dÂ
;

289 
	msˇn_lo›s
;

290 
	m¥öt_bu∫ö_ecc_hi°ogøm
;

292 
	mmax_c⁄åﬁÀr_ãmp
;

293 
	mmax_Êash_ãmp
;

294 
	mmax_bﬂrd_ãmp
;

296 
	m√wlunm≠
;

298 
	mgroup_øid_num
;

299 
	mgroup_øid_luns
;

301 
	msy§eg_dwoff
;

302 
	mcfgªg_dwoff
;

303 
	mluƒeg_dwoff
;

304 
	mluƒeg_dwsize
;

305 
	mb¨_dwÀn
[2];

307 
	mtimeout_sûít
;

308 
	mvÆid_luns
;

309 
	mövÆid_blocks
;

310 
	mlun_bôm≠
[32];

311 
	mlun_bôm≠_backup
[32];

312 
	ms‹tög_ecc_limô
;

314 
	mab£¡_lun_bôm≠
[32];

315 
	m¥e£¡_luns
;

316 
	mab£¡_luns
;

317 
	mcheck_bad_luns
;

319 
sh™n⁄_su≥r_block
 *
	msb
;

320 
thªad_mem
 *
	mphythªad_mem
;

322 
sh™n⁄_thªad
 *
	mthªad
;

323 
sh™n⁄_lun
 *
	mlun
;

324 
sh™n⁄_bufhód
 *
	mbufhód
;

326 
__u32
 **
	mbadblk_bmp
;

328 
	munß„_mbrblock
[4][512];

330 *
	m∑ddög_buf„r
;

332 
FILE
 *
	mexôlog
;

334 
	m˘æ_ãmp_thªshﬁd
;

335 
	mÊash_ãmp_thªshﬁd
;

336 
	mbﬂrd_ãmp_thªshﬁd
;

338 
n‹Êash_öfo
 
	mn‹öfo
;

340 
	ms‹tög_¥öt_°rög
[256];

341 
time_t
 
	mm±_begötime
;

342 
	mm±_timëook
[256];

343 
	mdißbÀ_ecc
;

345 
	#TEMPERATURE_LIMIT
 0x2026

	)

346 
	mexôcode
;

349 (*
	miowrôe32
)(
sh™n⁄_dev
 *
	mdev
, 
__u32
 
	mvÆue
, 
	mªg_dw_off
);

350 
__u32
 (*
i‹ód32
)(
sh™n⁄_dev
 *
	mdev
, 
	mªg_dw_off
);

352 (*
	møw_wrôñ
)(
sh™n⁄_dev
 *
	mdev
, 
__u32
 
	mvÆue
, 
	mªg_dw_off
);

353 
__u32
 (*
øw_ªadl
)(
sh™n⁄_dev
 *
	mdev
, 
	mªg_dw_off
);

355 (*
	mmu…i_i‹ód32
)(
sh™n⁄_dev
 *
	mdev
, 
__u32
 *
	mdes
, 
	mdwoff
, 
	mdwÀn
);

356 (*
	mmu…i_iowrôe32
)(
sh™n⁄_dev
 *
	mdev
, 
__u32
 *
	m§c
, 
	mdwoff
, 
	mdwÀn
);

358 (*
	mmu…i_øw_ªadl
)(
sh™n⁄_dev
 *
	mdev
, 
__u32
 *
	mdes
, 
	mdwoff
, 
	mdwÀn
);

359 (*
	mmu…i_øw_wrôñ
)(
sh™n⁄_dev
 *
	mdev
, 
__u32
 *
	m§c
, 
	mdwoff
, 
	mdwÀn
);

361 (*
	miowrôe_luƒeg
)(
sh™n⁄_dev
 *
	mdev
, 
__u32
 
	mvÆue
, 
	mlun
, 
HW_luƒeg
 
	mluƒeg_dw_off
);

362 
__u32
 (*
i‹ód_luƒeg
)(
sh™n⁄_dev
 *
	mdev
, 
	mlun
, 
HW_luƒeg
 
	mluƒeg_dw_off
);

364 (*
	miowrôe_buÊuƒeg
)(
sh™n⁄_dev
 *
	mdev
, 
__u32
 
	mvÆue
, 
	mhód
, 
HW_luƒeg
 
	mluƒeg_dw_off
);

365 
__u32
 (*
i‹ód_buÊuƒeg
)(
sh™n⁄_dev
 *
	mdev
, 
	mhód
, 
HW_luƒeg
 
	mluƒeg_dw_off
);

367 (*
	mi‹ód_c⁄fig
)(
sh™n⁄_dev
 *
	mdev
);

368 (*
	miowrôe_c⁄fig
)(
sh™n⁄_dev
 *
	mdev
);

370 (*
	mª£t
)(
sh™n⁄_dev
 *
	mdev
);

372 (*
	mgë_mem
)(
sh™n⁄_dev
 *
	mdev
, 
mem‹y
 *
	mmem
);

373 (*
	m‰ì_mem
)(
sh™n⁄_dev
 *
	mdev
, 
mem‹y
 *
	mmem
);

374 (*
	mªad_mem
)(
sh™n⁄_dev
 *
	mdev
, *
	mu£r_addr
, *
	mkî√l_addr
, 
	msize
);

375 (*
	mwrôe_mem
)(
sh™n⁄_dev
 *
	mdev
, *
	mkî√l_addr
, *
	mu£r_addr
, 
	msize
);

377 (*
	mdñivî_u£rd©a
)(
sh™n⁄_dev
 *
	mdev
);

379 (*
	mdo_dúe˘_io
)(
sh™n⁄_dev
 *
	mdev
, 
dúe˘_io
 *
	mdio
);

381 (*
	m˛ór_queue
)(
sh™n⁄_dev
 *
	mdev
);

382 (*
	mc⁄fig_h¨dw¨e
)(
sh™n⁄_dev
 *
	mdev
);

384 (*
	msubmô_ªque°
)(
sh™n⁄_ªque°
 *
	mªq
);

386 
sh™n⁄_mbr
 *
	mmbr
;

387 
sh™n⁄_mbr
 *
	möhîít_mbr
;

388 
	möhîít_mbr_£˘‹_size
;

390 
	m¥iv©e_öt
;

391 *
	m¥iv©e_d©a
;

392 
	ma˘ive_block
[8];

394 
	munß„_cfgabÀ
;

396 
	mm±_£t_ˇ∑côy
;

398 
	mbm_bbt
;

399 
	mmbr_by_4k
;

401 
	m≥r_byã_dißbÀ
;

402 
	mvÆid_8bô
;

404 
	mdev_ty≥
;

406 
	sèrgë_lun
 {

407 
Êash_id
 
	mid
;

408 
	mu£
;

409 
	mshadow
;

410 
	mloglun
;

411 
	mphylun
;

413 
	mblk_hﬁe_begö
;

414 
	mblk_hﬁe_cou¡
;

415 }*
	mèrgëlun
;

418 
	slive_c⁄ãxt
 {

419 
	mid
[32];

420 
sh™n⁄_dev
 *
	mdev
;

422 
__u32
 *
	mªg
;

423 
__u64
 **
	mcmdq
;

424 
__u64
 **
	mcmpq
;

428 
	#¥öt
(
x
...Ëdÿ{ 
	`¥ötf
(x); 
	`fÊush
(
°dout
); } 0)

	)

429 
	#≥º‹_exô
(
x
...Ëdÿ{ 
	`¥öt
(x); 
	`≥º‹
(" "); 
	`exô
(9); } 0)

	)

430 
	#mÆloc_Áûed_exô
(Ëdÿ{ 
	`¥ötf
("%s(Ë%d mÆlo¯Áûed\n", 
__func__
, 
__LINE__
); 
	`exô
(
EXIT_FAILURE
); } 0)

	)

431 
	#submô_Áûed_exô
(
lun
Ëdÿ{ 
	`¥ötf
("%s(Ë%dÜun-%d submôÑeque° faûed\n", 
__func__
, 
__LINE__
,Üun); 
	`exô
(
EXIT_FAILURE
); } 0)

	)

432 
	#pﬁl_Áûed_exô
(
lun
Ëdÿ{ 
	`¥ötf
("%s(Ë%dÜun-%dÖﬁ»ªque° faûed\n", 
__func__
, 
__LINE__
,Üun); 
	`exô
(
EXIT_FAILURE
); } 0)

	)

434 
sh™n⁄_dev
 *
thisdev
;

435 
	#exôlog_wôh°©us
(
°©us
, 
x
...) do { \

436 
	`¥ötf
("%s(Ëö %†löê%d: ", 
__func__
, 
__FILE__
, 
__LINE__
); \

437 
	`¥ötf
(
x
); \

438 i‡(
thisdev
 !
NULL
 &&Åhisdev->
exôlog
 != NULL) { \

439 
	`Ârötf
(
thisdev
->
exôlog
, "%s(Ëö %†löê%d: ", 
__func__
, 
__FILE__
, 
__LINE__
); \

440 
	`Ârötf
(
thisdev
->
exôlog
, 
x
); \

442 
	`exô
(
°©us
); \

443 } 0)

	)

444 
	#exôlog
(
x
...Ë
	`exôlog_wôh°©us
(
EXIT_FAILURE
, x)

	)

447 
	#¥_¨øy
(
addr
, 
ty≥
, 
˙t
, 
Æign
, 
¥efix
) \

449 
ixxi
; \

450 
	`ty≥of
(
ty≥
Ë*
p
 = (ty≥of—y≥)*)(
addr
); \

451 
f‹m©
[32] = "%04X "; \

453 
f‹m©
[2] = 2 * (
ty≥
) + '0'; \

454 i‡(8 =(
ty≥
)) \

455 
	`°r˝y
(
f‹m©
, "%016llX "); \

456 
ixxi
 = 0; ixxò< (
˙t
); ixxi++) { \

457 i‡(0 =
ixxi
%(
Æign
) && ixxi != 0) \

458 
	`¥ötf
("\n"); \

459 i‡(0 =
ixxi
%(
Æign
Ë&& 
¥efix
) \

460 
	`¥ötf
("0x%04X: ", ()(
ixxi
 * (*
p
)));\

461 
	`¥ötf
(
f‹m©
, 
p
[
ixxi
]); \

463 
	`¥ötf
("\n"); \

464 } 0)

	)

466 
	#¥_u8_¨øy
(
addr
, 
˙t
, 
Æign
Ë
	`¥_¨øy
◊ddr, 
__u8
, c¡,álign, 1)

	)

467 
	#¥_u16_¨øy
(
addr
, 
˙t
, 
Æign
Ë
	`¥_¨øy
◊ddr, 
__u16
, c¡,álign, 1)

	)

468 
	#¥_u32_¨øy
(
addr
, 
˙t
, 
Æign
Ë
	`¥_¨øy
◊ddr, 
__u32
, c¡,álign, 1)

	)

469 
	#¥_u64_¨øy
(
addr
, 
˙t
, 
Æign
Ë
	`¥_¨øy
◊ddr, 
__u64
, c¡,álign, 1)

	)

471 
	#¥_u8_¨øy_n›ªfix
(
addr
, 
˙t
, 
Æign
Ë
	`¥_¨øy
◊ddr, 
__u8
, c¡,álign, 0)

	)

472 
	#¥_u16_¨øy_n›ªfix
(
addr
, 
˙t
, 
Æign
Ë
	`¥_¨øy
◊ddr, 
__u16
, c¡,álign, 0)

	)

473 
	#¥_u32_¨øy_n›ªfix
(
addr
, 
˙t
, 
Æign
Ë
	`¥_¨øy
◊ddr, 
__u32
, c¡,álign, 0)

	)

474 
	#¥_u64_¨øy_n›ªfix
(
addr
, 
˙t
, 
Æign
Ë
	`¥_¨øy
◊ddr, 
__u64
, c¡,álign, 0)

	)

476 
ölöe
 
	$∑d_ønd
(*
buf
, 
cou¡
)

478 
i
;

480 
i
 = 0; i < 
cou¡
; i++)

481 ((
__u8
*)
buf
)[
i
] = 
	`ønd
();

482 
	}
}

484 
ölöe
 
	$∑d_öc_u8
(*
buf
, 
cou¡
, 
__u8
 
öô_vÆue
)

486 
i
;

488 
i
 = 0; i < 
cou¡
/(
__u8
); i++)

489 ((
__u8
*)
buf
)[
i
] = 
öô_vÆue
 + i;

490 
	}
}

492 
ölöe
 
	$∑d_öc_u16
(*
buf
, 
cou¡
, 
__u16
 
öô_vÆue
)

494 
i
;

496 
i
 = 0; i < 
cou¡
/(
__u16
); i++)

497 ((
__u16
*)
buf
)[
i
] = 
öô_vÆue
 + i;

498 
	}
}

500 
ölöe
 
	$∑d_öc_u32
(*
buf
, 
cou¡
, 
__u32
 
öô_vÆue
)

502 
i
;

504 
i
 = 0; i < 
cou¡
/(
__u32
); i++)

505 ((
__u32
*)
buf
)[
i
] = 
öô_vÆue
 + i;

506 
	}
}

508 
ölöe
 
	$∑d_ßme_u32
(*
buf
, 
cou¡
, 
__u32
 
vÆue
)

510 
i
;

512 
i
 = 0; i < 
cou¡
/(
__u32
); i++)

513 ((
__u32
*)
buf
)[
i
] = 
vÆue
;

514 
	}
}

516 
ölöe
 
	$memx‹
(*
d°
, *
§c
, 
˙t
)

518 
i
;

520 
i
 = 0; i < 
˙t
; i++)

521 ((
__u8
 *)
d°
)[
i
] ^((__u8 *)
§c
)[i];

522 
	}
}

525 
sh™n⁄_dev
 *
Æloc_devi˚
(*
dev«me
);

526 
öô_devi˚
(
sh™n⁄_dev
 *
dev
);

527 
ª_öô_devi˚
(
sh™n⁄_dev
 *
dev
);

528 
‰ì_devi˚
(
sh™n⁄_dev
 *
dev
);

531 
∑r£_Êash
(
sh™n⁄_dev
 *
dev
);

532 
∑r£_c⁄fig
(
sh™n⁄_dev
 *
dev
);

533 
ˇlcuœã_ödúe˘_c⁄fig
(
sh™n⁄_dev
 *
dev
);

534 
Êash_öfo
(
sh™n⁄_dev
 *
dev
, 
Êash_id
 
fid
, 
u§_Êash
 *
Êash
);

537 
sh™n⁄_utûs
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

538 
sh™n⁄_öfo
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

539 
sh™n⁄_hwöfo
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

542 
sh™n⁄_ªque°
 *
Æloc_ªque°
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_cmd
 
›code
,

543 
lun
, 
µa
, 
hód
, 
b£˘‹
, 
n£˘‹
);

544 
sh™n⁄_ªque°
 *
Æloc_ªque°_no_dma
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_cmd
 
›code
,

545 
lun
, 
µa
, 
hód
, 
b£˘‹
, 
n£˘‹
, 
no_dma
);

546 
‰ì_ªque°
(
sh™n⁄_ªque°
 *
ªq
);

547 
submô_ªque°
(
sh™n⁄_ªque°
 *
ªq
);

548 
submô_pﬁlög_lo›
(
sh™n⁄_dev
 *
dev
, 
li°_hód
 *
ªq_hód
);

550 
__pﬁl_cmdqueue
(
sh™n⁄_dev
 *
dev
, 
lun
, 
waô
);

551 
__pﬁl_bufcmdqueue
(
sh™n⁄_dev
 *
dev
, 
hód
, 
waô
);

554 
check_ªq_°©us
(
sh™n⁄_ªque°
 *
ªq
);

555 
check_ªq_°©us_sûít
(
sh™n⁄_ªque°
 *
ªq
);

557 
sh™n⁄_ª£t
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

558 
sh™n⁄_ªadid
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

559 
sh™n⁄_îa£
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

560 
sh™n⁄_wrôe
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

561 
sh™n⁄_ªad
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

562 
sh™n⁄_c›y
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

563 
sh™n⁄_rwlo›
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

565 
sh™n⁄_so·bôªad
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

566 
sh™n⁄_so·bôªad_a19
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

569 
¥e£¡_ab£¡_luns
(
sh™n⁄_dev
 *
dev
, *
vÆue
, 
ty≥
);

570 
sh™n⁄_su≥r_ª£t
(
sh™n⁄_dev
 *
dev
);

571 
sh™n⁄_su≥r_ªadid
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

572 
sh™n⁄_su≥r_async
(
sh™n⁄_dev
 *
dev
);

573 
sh™n⁄_su≥r_sync
(
sh™n⁄_dev
 *
dev
);

574 
sh™n⁄_su≥r_toggÀ
(
sh™n⁄_dev
 *
dev
);

575 
su≥r_£t_„©uª
(
sh™n⁄_dev
 *
dev
, 
u8
 
cmd
, u8 
addr
, u8 *
vÆue
, 
nbyã
);

577 
sh™n⁄_su≥r_îa£
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

578 
sh™n⁄_su≥r_wrôe
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

579 
sh™n⁄_su≥r_ªad
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

581 
c⁄°ru˘_sb_lunöfo
(
sh™n⁄_dev
 *
dev
, *
lunöfo_fûe
);

584 
sh™n⁄_bbt_›s
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

585 
sh™n⁄_lunöfo_›s
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

586 
check_bbt
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
bbt
);

587 
check_lunöfo
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_lunöfo
 *
lunöfo
);

588 
îa£_sˇn
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
bbt
);

589 
Êagbyã_sˇn
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_bbt
 *
bbt
);

591 
hum™_bbt_öfo
(*
bbtfûe
);

592 
hum™_lunöfo_öfo
(*
lunöfo_fûe
);

595 
de°‹y_ªqli°
(
li°_hód
 *
ªq_hód
);

596 
li°_hód
 *
make_shód_ªqli°
(
sh™n⁄_dev
 *
dev
, 
lun
, 
block
, 
hód
, 
£ed
);

599 
sh™n⁄_Áke_ecc
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

600 
sh™n⁄_rmw_Áke_ecc
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

603 
sh™n⁄_m±
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

604 
sh™n⁄_m±_ªadbbt
(
sh™n⁄_dev
 *
dev
, 
check_⁄ly
);

607 
sh™n⁄_ifmode
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

610 
sh™n⁄_bufwrôe
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

613 
sh™n⁄_dio
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

616 
sh™n⁄_n‹
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
);

617 
sh™n⁄_ªad_n‹
(
sh™n⁄_dev
 *
dev
, *
buf
, 
°¨t
, 
Àn
);

620 
öô_ƒ™d
(
num
, 
£ed
);

621 
exô_ƒ™d
();

622 
ƒ™d
();

623 
gë_ƒ™d
(
idx
);

624 
uniq_ønd
(
num
, 
£ed
, 
uniq_buf„r
[]);

627 
ölöe
 
	$pﬁl_cmdqueue
(
sh™n⁄_dev
 *
dev
, 
lun
)

629  
	`__pﬁl_cmdqueue
(
dev
, 
lun
, 1);

630 
	}
}

632 
ölöe
 
	$pﬁl_cmdqueue_nowaô
(
sh™n⁄_dev
 *
dev
, 
lun
)

634  
	`__pﬁl_cmdqueue
(
dev
, 
lun
, 0);

635 
	}
}

637 
ölöe
 
	$pﬁl_bufcmdqueue
(
sh™n⁄_dev
 *
dev
, 
hód
)

639  
	`__pﬁl_bufcmdqueue
(
dev
, 
hód
, 1);

640 
	}
}

642 
ölöe
 
	$pﬁl_bufcmdqueue_nowaô
(
sh™n⁄_dev
 *
dev
, 
hód
)

644  
	`__pﬁl_bufcmdqueue
(
dev
, 
hód
, 0);

645 
	}
}

647 
ölöe
 
	$upd©e_cmdqueue
(
sh™n⁄_dev
 *
dev
, 
lun
)

649 
dev
->
	`iowrôe_luƒeg
(dev, dev->
lun
[lun].
thªad
->
cmdhód
,Üun, 
HW_cmdq_hód
);

650 
	}
}

652 
ölöe
 
	$upd©e_bufcmdqueue
(
sh™n⁄_dev
 *
dev
, 
hód
)

654 
dev
->
	`iowrôe_buÊuƒeg
(dev, dev->
bufhód
[
hód
].
cmdhód
, hód, 
HW_cmdq_hód
);

655 
	}
}

657 
ölöe
 
	$upd©e_pﬁl_cmdqueue
(
sh™n⁄_dev
 *
dev
, 
lun
)

659 
	`upd©e_cmdqueue
(
dev
, 
lun
);

660  
	`pﬁl_cmdqueue
(
dev
, 
lun
);

661 
	}
}

663 
ölöe
 
	$upd©e_pﬁl_bufcmdqueue
(
sh™n⁄_dev
 *
dev
, 
hód
)

665 
	`upd©e_bufcmdqueue
(
dev
, 
hód
);

666  
	`pﬁl_bufcmdqueue
(
dev
, 
hód
);

667 
	}
}

669 
ölöe
 
	$check_°©us
(
sh™n⁄_dev
 *
dev
, 
sh™n⁄_cmd
 
cmd
, 
__u64
 
°©us
)

671 
	`as£π
(0 !
dev
->
Êash
->
suc˚ss_mask
);

673 i‡(0xFE =
°©us
)

676 i‡(
sh_¥îód_cmd
 =
cmd
)

679  (
°©us
 & 
dev
->
Êash
->
suc˚ss_mask
Ë=dev->Êash->
suc˚ss_°©us
;

680 
	}
}

683 
ölöe
 
	$gë_phych™√l
(
sh™n⁄_dev
 *
dev
, 
loglun
)

685  
loglun
 % 
dev
->
c⁄fig
->
nch™√l
;

686 
	}
}

688 
ölöe
 
	$gë_phythªad
(
sh™n⁄_dev
 *
dev
, 
loglun
)

690 i‡(
dev
->
√wlunm≠
)

691  (
loglun
 % (
dev
->
c⁄fig
->
nch™√l
 * dev->c⁄fig->
¡hªad
)) / dev->config->nchannel;

692  
loglun
 / (
dev
->
c⁄fig
->
nch™√l
 * dev->c⁄fig->
∆un
);

693 
	}
}

695 
ölöe
 
	$gë_phylun
(
sh™n⁄_dev
 *
dev
, 
loglun
)

697 i‡(
dev
->
√wlunm≠
)

698  
loglun
 / (
dev
->
c⁄fig
->
nch™√l
 * dev->c⁄fig->
¡hªad
);

699  (
loglun
 % (
dev
->
c⁄fig
->
nch™√l
 * dev->c⁄fig->
∆un
)) / dev->config->nchannel;

700 
	}
}

702 
ölöe
 
	$log2phy_lun
(
sh™n⁄_dev
 *
dev
, 
loglun
)

704 
ch
, 
å
, 
 
;

706 
 
 = 
	`gë_phylun
(
dev
, 
loglun
);

707 
å
 = 
	`gë_phythªad
(
dev
, 
loglun
);

708 
ch
 = 
	`gë_phych™√l
(
dev
, 
loglun
);

710  (
ch
 * 
dev
->
hw_¡hªad
 + 
å
Ë* dev->
hw_∆un
 + 
 
;

711 
	}
}

713 
ölöe
 
	$phy2log_lun
(
sh™n⁄_dev
 *
dev
, 
phylun
)

715 
loglun
;

717 
loglun
 = 0;Üoglu¿< 
dev
->
c⁄fig
->
luns
;Üoglun++) {

718 i‡(
phylun
 =
	`log2phy_lun
(
dev
, 
loglun
))

719  
loglun
;

722 
	`¥ötf
("%s(ËBUG\n", 
__func__
);

723 
	`exô
(
EXIT_FAILURE
);

724 
	}
}

726 
ölöe
 *
	$zmÆloc
(
size
)

728 *
mem
;

730 i‡(
NULL
 !(
mem
 = 
	`mÆloc
(
size
)))

731 
	`mem£t
(
mem
, 0x00, 
size
);

733  
mem
;

734 
	}
}

736 
ölöe
 
	$is_bad_lunblock
(
sh™n⁄_dev
 *
dev
, 
lun
, 
blk
)

738 i‡(!
dev
->
èrgëlun
[
lun
].
blk_hﬁe_cou¡
)

739  
	`ã°_bô
(
lun
, 
dev
->
sb
[
blk
].
sb_lunöfo
.
sb_bbt
);

741  (
blk
*
dev
->
c⁄fig
->
≈œ√
 >dev->
èrgëlun
[
lun
].
blk_hﬁe_begö
Ë|| 
	`ã°_bô
÷un, dev->
sb
[blk].
sb_lunöfo
.
sb_bbt
);

742 
	}
}

744 
ölöe
 
	$is_bad_su≥rblock
(
sh™n⁄_dev
 *
dev
, 
su≥rblk
)

746  
dev
->
sb
[
su≥rblk
].
sb_lunöfo
.
luns
 == 0;

747 
	}
}

749 
ölöe
 
	$su≥rblock_∑rôylun
(
sh™n⁄_dev
 *
dev
, 
su≥rblk
)

751 
	`as£π
(
dev
->
sb
[
su≥rblk
].
sb_lunöfo
.
luns
 != 0);

752  
dev
->
sb
[
su≥rblk
].
sb_lunöfo
.
∑rôy_lun
;

753 
	}
}

755 
ölöe
 
	$su≥rblock_∆un
(
sh™n⁄_dev
 *
dev
, 
su≥rblk
)

757  
dev
->
sb
[
su≥rblk
].
sb_lunöfo
.
luns
;

758 
	}
}

760 
ölöe
 
	$su≥rblock_nd©Æun
(
sh™n⁄_dev
 *
dev
, 
su≥rblk
)

762  
dev
->
sb
[
su≥rblk
].
sb_lunöfo
.
nd©Æun
;

763 
	}
}

765 
ölöe
 
	$gë£ed
(
way
)

767 
timevÆ
 
tv
;

769 i‡(0 =
way
) {

770 i‡(!
	`gëtimeofday
(&
tv
, 
NULL
))

771  ()(
tv
.
tv_u£c
);

773  ()(
	`time
(
NULL
));

774 
	}
}

776 
ölöe
 *
	$ifmode_°rög
(
ifmode
)

778 i‡(
FLASH_IFMODE_ASYNC
 =
ifmode
 || 
IFMODE_ASYNC
 == ifmode)

780 i‡(
FLASH_IFMODE_SYNC
 =
ifmode
 || 
IFMODE_SYNC
 == ifmode)

782 i‡(
FLASH_IFMODE_TOGGLE
 =
ifmode
 || 
IFMODE_TOGGLE
 == ifmode)

786 
	}
}

788 
ölöe
 
	$check_ifmode_m©ch
(
sh™n⁄_dev
 *
dev
)

790 i‡–(
FLASH_IFMODE_ASYNC
 =
dev
->
Êash
->
ifmode
 && 
IFMODE_ASYNC
 !dev->
c⁄fig
->ifmode) ||

791 (
FLASH_IFMODE_SYNC
 =
dev
->
Êash
->
ifmode
 && 
IFMODE_SYNC
 !dev->
c⁄fig
->ifmodê&& 
IFMODE_ASYNC
 != dev->config->ifmode) ||

792 (
FLASH_IFMODE_TOGGLE
 =
dev
->
Êash
->
ifmode
 && 
IFMODE_TOGGLE
 !dev->
c⁄fig
->ifmodê&& 
IFMODE_ASYNC
 != dev->config->ifmode) ) {

793 
	`¥ötf
("ERROR ifmodêc⁄Êi˘: fœsh %s, c⁄fig %s\n", 
	`ifmode_°rög
(
dev
->
Êash
->
ifmode
), ifmode_°rög(dev->
c⁄fig
->ifmode));

798 
	}
}

801 
wrôe_adv™˚d_ªad_mi¸ocode
(
sh™n⁄_dev
 *
dev
);

805 
	#f‹_dev_óch_lun
(
dev
, 
lun
) \

806 
lun
 = 0;Üu¿< 
dev
->
c⁄fig
->
luns
;Üun++) \

807 i‡(
	`ã°_bô
(
lun
, 
dev
->
lun_bôm≠
)) \

809 

	)

810 
	#f‹_dev_óch_block
(
dev
, 
blk
) \

811 
blk
 = 0; blk < 
dev
->
Êash
->
nblk
 / dev->
c⁄fig
->
≈œ√
; blk++)

	)

812 
	#f‹_dev_óch_∑ge
(
dev
, 
∑ge
) \

813 
∑ge
 = 0;Öagê< 
dev
->
Êash
->
≈age
;Öage++)

	)

814 
	#f‹_dev_óch_bufhód
(
dev
, 
ihód
) \

815 
ihód
 = 0; ihód < 2; ihód++)

	)

818 #i‡
BE_ARCH
 == 1

819 
	~<löux/byã‹dî/big_ídün.h
>

821 
	#˝u_to_À16
(
x
Ë
	`__˝u_to_À16
(x)

	)

822 
	#˝u_to_À32
(
x
Ë
	`__˝u_to_À32
(x)

	)

823 
	#˝u_to_À64
(
x
Ë
	`__˝u_to_À64
(x)

	)

825 
	#˝u_to_À16s
(
x
Ë
	`__˝u_to_À16s
((
u16
 *)(x))

	)

826 
	#˝u_to_À32s
(
x
Ë
	`__˝u_to_À32s
((
u32
 *)(x))

	)

827 
	#˝u_to_À64s
(
x
Ë
	`__˝u_to_À64s
((
u64
 *)(x))

	)

829 
	#À16_to_˝u
(
x
Ë
	`__À16_to_˝u
(x)

	)

830 
	#À32_to_˝u
(
x
Ë
	`__À32_to_˝u
(x)

	)

831 
	#À64_to_˝u
(
x
Ë
	`__À64_to_˝u
(x)

	)

833 
	#À16_to_˝us
(
x
Ë
	`__À16_to_˝us
((
u16
 *)(x))

	)

834 
	#À32_to_˝us
(
x
Ë
	`__À32_to_˝us
((
u32
 *)(x))

	)

835 
	#À64_to_˝us
(
x
Ë
	`__À64_to_˝us
((
u64
 *)(x))

	)

837 
	#˝u_to_À16
(
x
Ë(x)

	)

838 
	#˝u_to_À32
(
x
Ë(x)

	)

839 
	#˝u_to_À64
(
x
Ë(x)

	)

841 
	#˝u_to_À16s
(
x
)

	)

842 
	#˝u_to_À32s
(
x
)

	)

843 
	#˝u_to_À64s
(
x
)

	)

845 
	#À16_to_˝u
(
x
Ë(x)

	)

846 
	#À32_to_˝u
(
x
Ë(x)

	)

847 
	#À64_to_˝u
(
x
Ë(x)

	)

849 
	#À16_to_˝us
(
x
)

	)

850 
	#À32_to_˝us
(
x
)

	)

851 
	#À64_to_˝us
(
x
)

	)

	@utils.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/io˘l.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

10 
	~<sys/time.h
>

12 
	~"toﬁ.h
"

15 
	$sh™n⁄_utûs_ußge
()

17 #i‚de‡
__RELEASE__


18 
	`¥ötf
("USAGE:\n");

20 
	`¥ötf
("\tphylun-mem: showállocated memory forÖer-phylun\n");

21 
	`¥ötf
("\tpeek-phylunregsÖhylun(Dec): displayÖhylunÑegisters\n");

22 
	`¥ötf
("\tpeek-phylunmemÖhylun(Dec) offset(Hex)Üength(Hex): displayÖhylun memory\n");

23 
	`¥ötf
("\tpeek-regs dw-offset(Hex) dw-number(Hex): displayÑegisters\n");

24 
	`¥ötf
("\tpeek-sysregs: display system infoÑegisters\n");

25 
	`¥ötf
("\tpeek-cfgregs: display configÑegisters\n");

26 
	`¥ötf
("\tpeek-bufregs head(Dec): display bufwrite/read controlÑegisters if have\n");

27 
	`¥ötf
("\tpeek-bufcmdq head(Dec)Üength(Hex): display bufwrite/read command queue if have\n");

28 
	`¥ötf
("\tpeek-bufcmpq head(Dec)Üength(Hex): display bufwrite/read completion queue if have\n\n");

30 
	`¥ötf
("\tpeek-lunregsÜun(Dec): displayÜogicalÜunÑegisters\n");

31 
	`¥ötf
("\tpeek-luncmdqÜun(Dec)Üength(Hex): display command queue\n");

32 
	`¥ötf
("\tpeek-luncmpqÜun(Dec)Üength(Hex): display completion queue\n");

33 
	`¥ötf
("\tpeek-sections: displayállÜunánd bufwrite/read controlÑegisters\n\n");

35 
	`¥ötf
("\tpoke-regs dw-offset(Hex) dw-value0(Hex) dw-value1(Hex) ... : writeÑegisters\n\n");

37 
	`¥ötf
("\tpoke-buf dw-offset(Dec) dw-number(Dec): write data buffer in BAR1 withÑandom dataÅhenÖrint\n");

38 
	`¥ötf
("\tpeek-buf dw-offset(Dec) dw-number(Dec):Ñead data buffer in BAR1ÅhenÖrint\n\n");

40 
	`¥ötf
("\tparse-file filename:Öarse suchás bbt file,Üuninfo fileánd so onÅo humanÑead format\n");

42 
	}
}

45 #i‚de‡
__RELEASE__


46 
	$do_phylun_mem
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

48 
lun
;

50 
lun
 = 0;Üu¿< 
dev
->
hw_∆un
;Üun++) {

51 
	`¥ötf
("phylun-%03d: ", 
lun
);

52 
	`¥ötf
("%016lX %016lX\n", (
ul⁄g
)
dev
->
phythªad_mem
[
lun
 / dev->
hw_∆un
].
kî√l_addr
,

53 (
ul⁄g
)
dev
->
phythªad_mem
[
lun
 / dev->
hw_∆un
].
dma_addr
);

55 
	}
}

57 
	$do_≥ek_phyluƒegs
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

59 
__u32
 *
buf
;

60 
lun
;

62 i‡(
¨gc
 != 2) {

63 
	`sh™n⁄_utûs_ußge
();

67 
lun
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

69 
buf
 = 
	`mÆloc
(
dev
->
luƒeg_dwsize
 * 
DW_SIZE
);

70 i‡(
NULL
 =
buf
) {

71 
	`¥ötf
("%s(ËmÆlo¯Áûed\n", 
__func__
);

75 
dev
->
	`mu…i_i‹ód32
(dev, 
buf
, dev->
luƒeg_dwoff
 + (
lun
 / dev->
hw_∆un
Ë* dev->
luƒeg_dwsize
, dev->lunreg_dwsize);

76 
	`¥_u32_¨øy_n›ªfix
(
buf
, 
dev
->
luƒeg_dwsize
, dev->lunreg_dwsize);

77 
	`‰ì
(
buf
);

78 
	}
}

80 
	$do_≥ek_phylunmem
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

82 
__u32
 *
buf
;

83 
lun
, 
off
, 
num
;

85 i‡(
¨gc
 != 4) {

86 
	`sh™n⁄_utûs_ußge
();

90 
lun
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

91 
off
 = 
	`°πoul
(
¨gv
[2], 
NULL
, 0x10);

92 
num
 = 
	`°πoul
(
¨gv
[3], 
NULL
, 0x10);

94 
buf
 = 
	`mÆloc
(
num
);

95 i‡(
NULL
 =
buf
) {

96 
	`¥ötf
("%s(ËmÆlo¯Áûed\n", 
__func__
);

100 
dev
->
	`ªad_mem
(dev, 
buf
, dev->
phythªad_mem
[
lun
 / dev->
hw_∆un
].
kî√l_addr
 + 
off
, 
num
);

101 
	`¥_u64_¨øy
(
buf
, 
num
/8, 8);

102 
	`‰ì
(
buf
);

103 
	}
}

105 
	$do_≥ek_ªgs
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

107 
off
, 
num
;

108 
__u32
 *
buf
;

110 i‡(
¨gc
 != 3) {

111 
	`sh™n⁄_utûs_ußge
();

115 
off
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 0x10);

116 
num
 = 
	`°πoul
(
¨gv
[2], 
NULL
, 0x10);

118 
buf
 = 
	`mÆloc
(
num
 * 
DW_SIZE
);

119 i‡(
NULL
 =
buf
) {

120 
	`¥ötf
("%s(ËmÆlo¯Áûed\n", 
__func__
);

124 
dev
->
	`mu…i_i‹ód32
(dev, 
buf
, 
off
, 
num
);

125 
	`¥_u32_¨øy
(
buf
, 
num
, 8);

126 
	`‰ì
(
buf
);

127 
	}
}

129 
	$do_≥ek_bu‰egs
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

131 
i
, 
hód
;

132 
__u32
 *
buf
;

134 i‡(!(
dev
->
hw_sysöfo
->
hw_wrbuf_suµ‹t
 & 0x0F)) {

135 
	`¥ötf
("Hardware don`t support bufwrite/bufread\n");

139 i‡(
¨gc
 != 2) {

140 
	`sh™n⁄_utûs_ußge
();

144 
hód
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

145 
	`as£π
(
hód
 < 2);

147 
buf
 = 
	`mÆloc
(
dev
->
luƒeg_dwsize
 * 
DW_SIZE
);

148 i‡(
NULL
 =
buf
) {

149 
	`¥ötf
("%s(ËmÆlo¯Áûed\n", 
__func__
);

153 
i
 = 0; i < 
dev
->
luƒeg_dwsize
; i++)

154 
buf
[
i
] = 
dev
->
	`i‹ód_buÊuƒeg
(dev, 
hód
, i);

156 
	`¥_u32_¨øy_n›ªfix
(
buf
, 
dev
->
luƒeg_dwsize
, dev->lunreg_dwsize);

157 
	`‰ì
(
buf
);

158 
	}
}

160 
	$do_≥ek_bufcmdq
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

162 
hód
, 
Àn
;

163 *
buf
;

165 i‡(!(
dev
->
hw_sysöfo
->
hw_wrbuf_suµ‹t
 & 0x0F)) {

166 
	`¥ötf
("Hardware don`t support bufwrite/bufread\n");

170 i‡(
¨gc
 != 3) {

171 
	`sh™n⁄_utûs_ußge
();

175 
hód
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

176 
Àn
 = 
	`°πoul
(
¨gv
[2], 
NULL
, 0x10);

177 
	`as£π
(
hód
 < 2 && 
Àn
 <= 0x1000);

179 
buf
 = 
	`mÆloc
(
Àn
);

180 i‡(
NULL
 =
buf
) {

181 
	`¥ötf
("%s(ËmÆlo¯Áûed\n", 
__func__
);

185 
dev
->
	`ªad_mem
(dev, 
buf
, dev->
phythªad_mem
[
hód
].
kî√l_addr
 + 2 * 
PAGE_SIZE
, 
Àn
);

186 
	`¥_u64_¨øy
(
buf
, 
Àn
/8, 8);

187 
	`‰ì
(
buf
);

188 
	}
}

190 
	$do_≥ek_bufcmpq
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

192 
hód
, 
Àn
;

193 *
buf
;

195 i‡(!(
dev
->
hw_sysöfo
->
hw_wrbuf_suµ‹t
 & 0x0F)) {

196 
	`¥ötf
("Hardware don`t support bufwrite/bufread\n");

200 i‡(
¨gc
 != 3) {

201 
	`sh™n⁄_utûs_ußge
();

205 
hód
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

206 
Àn
 = 
	`°πoul
(
¨gv
[2], 
NULL
, 0x10);

207 
	`as£π
(
hód
 < 2 && 
Àn
 <= 0x1000);

209 
buf
 = 
	`mÆloc
(
Àn
);

210 i‡(
NULL
 =
buf
) {

211 
	`¥ötf
("%s(ËmÆlo¯Áûed\n", 
__func__
);

215 
dev
->
	`ªad_mem
(dev, 
buf
, dev->
phythªad_mem
[
hód
].
kî√l_addr
 + 3 * 
PAGE_SIZE
, 
Àn
);

216 
	`¥_u64_¨øy
(
buf
, 
Àn
/8, 8);

217 
	`‰ì
(
buf
);

218 
	}
}

220 
	$do_≥ek_luƒegs
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

222 
i
, 
lun
;

223 
__u32
 *
buf
;

225 i‡(
¨gc
 != 2) {

226 
	`sh™n⁄_utûs_ußge
();

230 
lun
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

232 
buf
 = 
	`mÆloc
(
dev
->
luƒeg_dwsize
 * 
DW_SIZE
);

233 i‡(
NULL
 =
buf
) {

234 
	`¥ötf
("%s(ËmÆlo¯Áûed\n", 
__func__
);

238 
i
 = 0; i < 
dev
->
luƒeg_dwsize
; i++)

239 
buf
[
i
] = 
dev
->
	`i‹ód_luƒeg
(dev, 
lun
, i);

241 
	`¥_u32_¨øy_n›ªfix
(
buf
, 
dev
->
luƒeg_dwsize
, dev->lunreg_dwsize);

242 
	`‰ì
(
buf
);

243 
	}
}

245 
	$do_≥ek_luncmdq
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

247 
__u64
 *
buf
;

248 
__u64
 
	`__©åibuã__
((
unu£d
))*
p
;

249 
i
, 
lun
, 
Àn
;

251 i‡(
¨gc
 != 3) {

252 
	`sh™n⁄_utûs_ußge
();

256 
lun
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

257 
Àn
 = 
	`°πoul
(
¨gv
[2], 
NULL
, 0x10);

258 
	`as£π
(
lun
 < 
dev
->
c⁄fig
->
luns
 && 
Àn
 <= 0x1000);

260 
buf
 = 
	`mÆloc
(
Àn
);

261 i‡(
NULL
 =
buf
) {

262 
	`¥ötf
("%s(ËmÆlo¯Áûed\n", 
__func__
);

265 
p
 = (
__u64
 *)
buf
;

267 
dev
->
	`ªad_mem
(dev, 
buf
, dev->
phythªad_mem
[
	`log2phy_lun
(dev, 
lun
Ë/ dev->
hw_∆un
].
kî√l_addr
, 
Àn
);

268 
i
 = 0; i < 
Àn
/(
__u64
); i++)

269 
	`À64_to_˝us
(&
p
[
i
]);

270 
	`¥_u64_¨øy
(
buf
, 
Àn
/8, 8);

271 
	`‰ì
(
buf
);

272 
	}
}

274 
	$do_≥ek_luncmpq
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

276 
__u64
 *
buf
;

277 
__u64
 
	`__©åibuã__
((
unu£d
))*
p
;

278 
i
, 
lun
, 
Àn
;

280 i‡(
¨gc
 != 3) {

281 
	`sh™n⁄_utûs_ußge
();

285 
lun
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

286 
Àn
 = 
	`°πoul
(
¨gv
[2], 
NULL
, 0x10);

287 
	`as£π
(
lun
 < 
dev
->
c⁄fig
->
luns
 && 
Àn
 <= 0x1000);

289 
buf
 = 
	`mÆloc
(
Àn
);

290 i‡(
NULL
 =
buf
) {

291 
	`¥ötf
("%s(ËmÆlo¯Áûed\n", 
__func__
);

294 
p
 = (
__u64
 *)
buf
;

296 
dev
->
	`ªad_mem
(dev, 
buf
, dev->
phythªad_mem
[
	`log2phy_lun
(dev, 
lun
Ë/ dev->
hw_∆un
].
kî√l_addr
 + 
PAGE_SIZE
, 
Àn
);

297 
i
 = 0; i < 
Àn
/(
__u64
); i++)

298 
	`À64_to_˝us
(&
p
[
i
]);

299 
	`¥_u64_¨øy
(
buf
, 
Àn
/8, 8);

300 
	`‰ì
(
buf
);

301 
	}
}

303 
	$do_≥ek_£˘i⁄s
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

305 
i
;

306 *
v
[2], 
v0
[8], 
v1
[8];

308 
v
[0] = 
v0
;

309 
v
[1] = 
v1
;

311 
i
 = 0; i < 
dev
->
c⁄fig
->
luns
; i++) {

312 
	`mem£t
(
v1
, 0x00, (v1));

313 
	`•rötf
(
v1
, "%d", 
i
);

315 
	`¥ötf
("lu¿%-3d: ", 
i
);

316 
	`do_≥ek_luƒegs
(
dev
, 2, 
v
);

319 i‡(
dev
->
hw_sysöfo
->
hw_wrbuf_suµ‹t
 & 0x0F) {

320 
i
 = 0; i < 2; i++) {

321 
	`mem£t
(
v1
, 0x00, (v1));

322 
	`•rötf
(
v1
, "%d", 
i
);

324 
	`¥ötf
("bufhód %d: ", 
i
);

325 
	`do_≥ek_bu‰egs
(
dev
, 2, 
v
);

328 
	}
}

331 
	$do_poke_ªgs
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

333 
__u32
 *
buf
;

334 
i
, 
Àn
, 
off
;

336 i‡(
¨gc
 < 3) {

337 
	`sh™n⁄_utûs_ußge
();

341 
Àn
 = 
¨gc
 - 2;

342 
off
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 0x10);

344 
buf
 = 
	`mÆloc
(
Àn
 * 
DW_SIZE
);

345 i‡(
NULL
 =
buf
) {

346 
	`¥ötf
("malloc failed\n");

350 
i
 = 0; i < 
Àn
; i++)

351 
buf
[
i
] = 
	`°πoul
(
¨gv
[ò+ 2], 
NULL
, 0x10);

355 
dev
->
	`mu…i_iowrôe32
(dev, 
buf
, 
off
, 
Àn
);

356 
	`‰ì
(
buf
);

357 
	}
}

359 
	$do_poke_buf
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

361 
timevÆ
 
tv
;

362 
i
, 
off
, 
Àn
;

363 
__u32
 *
buf
;

365 i‡(0 =
dev
->
b¨_dwÀn
[1]) {

366 
	`¥ötf
("Hardware hasÇo BAR0!\n");

370 i‡(
¨gc
 != 3) {

371 
	`sh™n⁄_utûs_ußge
();

375 
off
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

376 
Àn
 = 
	`°πoul
(
¨gv
[2], 
NULL
, 10);

378 i‡(
off
 + 
Àn
 > 256) {

379 
	`¥ötf
("Out of bufferáddress\n");

383 
buf
 = 
	`mÆloc
(
Àn
 * 
DW_SIZE
);

384 i‡(
NULL
 =
buf
) {

385 
	`¥ötf
("malloc failed\n");

389 i‡(
	`gëtimeofday
(&
tv
, 
NULL
)) {

390 
	`¥ötf
("GetÑandom seed failed\n");

391 
	`‰ì
(
buf
);

394 
	`§™d
(
tv
.
tv_u£c
);

395 
	`∑d_ønd
(
buf
, 
Àn
 * 
DW_SIZE
);

396 
	`¥_u8_¨øy_n›ªfix
(
buf
, 
Àn
 * 
DW_SIZE
, 32);

398 
i
 = 0; i < 
Àn
; i++)

399 
dev
->
	`iowrôe32
(dev, 
buf
[
i
], dev->
b¨_dwÀn
[0] + i);

401 
	`‰ì
(
buf
);

402 
	}
}

404 
	$do_≥ek_buf
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

406 
i
, 
off
, 
Àn
;

407 
__u32
 *
buf
;

409 i‡(0 =
dev
->
b¨_dwÀn
[1]) {

410 
	`¥ötf
("Hardware hasÇo BAR0!\n");

414 i‡(
¨gc
 != 3) {

415 
	`sh™n⁄_utûs_ußge
();

419 
off
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 10);

420 
Àn
 = 
	`°πoul
(
¨gv
[2], 
NULL
, 10);

422 i‡(
off
 + 
Àn
 > 256) {

423 
	`¥ötf
("Out of bufferáddress\n");

427 
buf
 = 
	`mÆloc
(
Àn
 * 
DW_SIZE
);

428 i‡(
NULL
 =
buf
) {

429 
	`¥ötf
("malloc failed\n");

433 
i
 = 0; i < 
Àn
; i++)

434 
buf
[
i
] = 
dev
->
	`i‹ód32
(dev, dev->
b¨_dwÀn
[0] + i);

435 
	`¥_u8_¨øy_n›ªfix
(
buf
, 
Àn
 * 
DW_SIZE
, 32);

437 
	`‰ì
(
buf
);

438 
	}
}

441 
	$do_∑r£_fûe
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

443 
fd
;

444 
èg
[32];

446 i‡(
¨gc
 != 2) {

447 
	`sh™n⁄_utûs_ußge
();

451 i‡((
fd
 = 
	`›í
(
¨gv
[1], 
O_RDONLY
)) < 0) {

452 
	`≥º‹
("Open file failed:");

456 i‡(
	`ªad
(
fd
, 
èg
, 32) != 32) {

457 
	`≥º‹
("Read file failed:");

458 
	`˛o£
(
fd
);

462 i‡(!
	`°rcmp
("sh™n⁄-bbt", 
èg
))

463 
	`hum™_bbt_öfo
(
¨gv
[1]);

464 i‡(!
	`°rcmp
("sh™n⁄-lunöfo", 
èg
))

465 
	`hum™_lunöfo_öfo
(
¨gv
[1]);

467 
	`¥ötf
("Can`tÖarseÅhisÅype file\n");

469 
	`˛o£
(
fd
);

470 
	}
}

472 
	$check_∆un
(
sh™n⁄_dev
 *
dev
)

475 i‡(
dev
->
c⁄fig
->
luns
 && dev->c⁄fig->
nch™√l
 != 0xFF)

478 
	`¥ötf
("FAILED! I can`t knowÇchannel/nthread/nlun byány way. You haveÅwo choices:\n"

482  
ERR
;

484 
	}
}

487 
	$do_≥ek_sy§egs
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

489 
hw_sysöfo
 
hwsys
;

491 
dev
->
	`mu…i_i‹ód32
(dev, (
__u32
 *)&
hwsys
, dev->
sy§eg_dwoff
, (hwsys)/
DW_SIZE
);

492 
	`¥_u32_¨øy_n›ªfix
(&
hwsys
, (hwsys)/(
__u32
), (hwsys)/(__u32));

493 
	}
}

495 
	$do_≥ek_cfgªgs
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

497 
hw_c⁄fig
 
hwcfg
;

499 
dev
->
	`mu…i_i‹ód32
(dev, (
__u32
 *)&
hwcfg
, dev->
cfgªg_dwoff
, (hwcfg)/
DW_SIZE
);

500 
	`¥_u32_¨øy_n›ªfix
(&
hwcfg
, (hwcfg)/(
__u32
), (hwcfg)/(__u32));

501 
	}
}

504 
	#SUBUTILS_HEAD
(Ëi‡(0Ë;

	)

505 
	#SUBUTILS
(
subutûs
, 
func
Ëi‡(!
	`°rcmp
(subutûs, 
¨gv
[
›töd
])Ë
	`func
(
dev
, 
¨gc
 - o±öd, &¨gv[›töd]);

	)

506 
	#SUBUTILS_CKLUN
(
subutûs
, 
func
Ëi‡(!
	`°rcmp
(subutûs, 
¨gv
[
›töd
])Ë{ i‡(
	`check_∆un
(
dev
)Ë 
ERR
; 
	`func
(dev, 
¨gc
 - o±öd, &¨gv[›töd]);}

	)

507 
	#SUBUTILS_TAIL
(Ë{ 
	`sh™n⁄_utûs_ußge
();  
ERR
; }

	)

509 
	$sh™n⁄_utûs
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

511 
›ti⁄
 
l⁄g›ts
[] = {

512 {"nch™√l", 
ªquúed_¨gumít
, 
NULL
, 'c'},

513 {"¡hªad", 
ªquúed_¨gumít
, 
NULL
, 't'},

514 {"∆un", 
ªquúed_¨gumít
, 
NULL
, 'l'},

517 
›t
;

518 
FILE
 *
Â
 = 
NULL
;

519 
löe
[256], *
pm
, *
pv
;

521 
dev
->
c⁄fig
->
luns
 = 0;

524 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, ":c:t:l:", 
l⁄g›ts
, 
NULL
)) != -1) {

525 
›t
) {

527 
dev
->
c⁄fig
->
nch™√l
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

530 
dev
->
c⁄fig
->
¡hªad
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

533 
dev
->
c⁄fig
->
∆un
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

536 
	`sh™n⁄_utûs_ußge
();

537  
ERR
;

541 
dev
->
c⁄fig
->
luns
 = dev->c⁄fig->
nch™√l
 * dev->c⁄fig->
¡hªad
 * dev->c⁄fig->
∆un
;

542 i‡(0 !
dev
->
c⁄fig
->
luns
)

543 
nch™√l_∆un_known
;

546 i‡(
dev
->
unß„_cfgabÀ
) {

547 
Â
 = 
	`f›í
("config", "r");

548 i‡(
NULL
 =
Â
)

549 
nch™√l_∆un_known
;

551 
	`fgës
(
löe
, ÷öe), 
Â
Ë!
NULL
) {

552 i‡('#' =
löe
[0] || '\n' ==Üine[0] || '\n' ==Üine[0])

555 
pm
 = 
pv
 = 
löe
;

556 *
pv
 != '=')

557 
pv
++;

558 *
pv
 = '\0';

559 
pv
++;

560 i‡(!
	`°rcmp
("nch™√l", 
pm
))

561 
dev
->
c⁄fig
->
nch™√l
 = 
	`°πoul
(
pv
, 
NULL
, 10);

562 i‡(!
	`°rcmp
("¡hªad", 
pm
))

563 
dev
->
c⁄fig
->
¡hªad
 = 
	`°πoul
(
pv
, 
NULL
, 10);

564 i‡(!
	`°rcmp
("∆un", 
pm
))

565 
dev
->
c⁄fig
->
∆un
 = 
	`°πoul
(
pv
, 
NULL
, 10);

567 
dev
->
c⁄fig
->
luns
 = dev->c⁄fig->
nch™√l
 * dev->c⁄fig->
¡hªad
 * dev->c⁄fig->
∆un
;

568 i‡(0 !
dev
->
c⁄fig
->
luns
)

572 
	`f˛o£
(
Â
);

576 
dev
->
c⁄fig
->
nch™√l
 = dev->
hw_nch™√l
;

577 
dev
->
c⁄fig
->
¡hªad
 = dev->
hw_¡hªad
;

578 
dev
->
c⁄fig
->
∆un
 = dev->
hw_∆un
;

580 
dev
->
c⁄fig
->
luns
 = dev->c⁄fig->
nch™√l
 * dev->c⁄fig->
¡hªad
 * dev->c⁄fig->
∆un
;

583 
nch™√l_∆un_known
:

584 i‡(
¨gc
 - 
›töd
 == 0) {

585 
	`sh™n⁄_utûs_ußge
();

586  
ERR
;

592 
	`SUBUTILS_HEAD
()

593 
	`SUBUTILS
("≥ek-sy§egs", 
do_≥ek_sy§egs
)

594 
	`SUBUTILS
("≥ek-cfgªgs", 
do_≥ek_cfgªgs
)

595 #i‚de‡
__RELEASE__


596 
	`SUBUTILS
("phylun-mem", 
do_phylun_mem
)

597 
	`SUBUTILS
("≥ek-phyluƒegs", 
do_≥ek_phyluƒegs
)

598 
	`SUBUTILS
("≥ek-phylunmem", 
do_≥ek_phylunmem
)

599 
	`SUBUTILS
("≥ek-ªgs", 
do_≥ek_ªgs
)

600 
	`SUBUTILS
("≥ek-bu‰egs", 
do_≥ek_bu‰egs
)

601 
	`SUBUTILS
("≥ek-bufcmdq", 
do_≥ek_bufcmdq
)

602 
	`SUBUTILS
("≥ek-bufcmpq", 
do_≥ek_bufcmpq
)

603 
	`SUBUTILS
("∑r£-fûe", 
do_∑r£_fûe
)

604 
	`SUBUTILS_CKLUN
("≥ek-luƒegs", 
do_≥ek_luƒegs
)

605 
	`SUBUTILS_CKLUN
("≥ek-luncmdq", 
do_≥ek_luncmdq
)

606 
	`SUBUTILS_CKLUN
("≥ek-luncmpq", 
do_≥ek_luncmpq
)

607 
	`SUBUTILS_CKLUN
("≥ek-£˘i⁄s", 
do_≥ek_£˘i⁄s
)

608 
	`SUBUTILS
("poke-ªgs", 
do_poke_ªgs
)

609 
	`SUBUTILS
("poke-buf", 
do_poke_buf
)

610 
	`SUBUTILS
("≥ek-buf", 
do_≥ek_buf
)

612 
	`SUBUTILS_TAIL
()

615 
	}
}

618 
	$sh™n⁄_öfo
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

620 
	`¥ötf
("PCI_domaös: %s\n", 
	`°rchr
(
dev
->
domaös
, ':') + 1);

622 
	`¥ötf
("HW_nch™√l: %d\n", 
dev
->
hw_nch™√l
);

623 
	`¥ötf
("HW_¡hªad: %d\n", 
dev
->
hw_¡hªad
);

624 
	`¥ötf
("HW_∆un: %d\n", 
dev
->
hw_∆un
);

625 
	`¥ötf
("HW_buf„r_wrôe_suµ‹ãd: %s\n", (
dev
->
hw_sysöfo
->
hw_wrbuf_suµ‹t
 & 0x0F) ? "Yes" : "No");

627 
	`¥ötf
("Fœsh_blocks: %d\n", 
dev
->
Êash
->
nblk
);

628 
	`¥ötf
("Fœsh_∑ges: %d\n", 
dev
->
Êash
->
≈age
);

629 
	`¥ötf
("Fœsh_∑gesize: %d\n", 
dev
->
Êash
->
∑ge_size
);

630 
	`¥ötf
("Fœsh_oobsize: %d\n", 
dev
->
Êash
->
oob_size
);

632 
	`¥ötf
("CFG_≈œ√: %d\n", 
dev
->
c⁄fig
->
≈œ√
);

633 
	`¥ötf
("CFG_codew‹d_size: %d\n", 
dev
->
c⁄fig
->
codew‹d_size
);

634 
	`¥ötf
("CFG_£˘‹_ncodew‹d: %d\n", 
dev
->
c⁄fig
->
£˘‹_ncodew‹d
);

635 
	`¥ötf
("CFG_∑ge_n£˘‹: %d\n", 
dev
->
c⁄fig
->
∑ge_n£˘‹
);

636 
	`¥ötf
("CFG_chunk_n£˘‹: %d\n", 
dev
->
c⁄fig
->
chunk_n£˘‹
);

638 
	`¥ötf
("Adv™˚d_ªad_suµ‹ãd: %s\n", 
dev
->
has_adv™˚_ªad
 ? "Yes" : "No");

642 
	}
}

644 
	$sh™n⁄_hwöfo
(
sh™n⁄_dev
 *
dev
, 
¨gc
, **
¨gv
)

646 
	`¥ötf
("PCI_domaös: %s\n", 
	`°rchr
(
dev
->
domaös
, ':') + 1);

647 #i‚de‡
__RELEASE__


648 
	`¥ötf
("HW_nch™√l: %d\n", 
dev
->
hw_nch™√l
);

649 
	`¥ötf
("HW_¡hªad: %d\n", 
dev
->
hw_¡hªad
);

650 
	`¥ötf
("HW_∆un: %d\n", 
dev
->
hw_∆un
);

651 
	`¥ötf
("HW_iowidth: %d\n", 8 * 
dev
->
iowidth
);

652 
	`¥ötf
("HW_ecc_mmode: %d\n", 
dev
->
mmode
);

653 
	`¥ötf
("HW_ecc_tmode: %d\n", 
dev
->
tmode
);

654 
	`¥ötf
("Fúmw¨e: %08X\n", 
dev
->
hw_sysöfo
->
fúmw¨e_èg
);

656 
	`¥ötf
("SîülNumbî: %s\n", 
dev
->
n‹öfo
.
£rvi˚_èg
);

657 
	`¥ötf
("ModñID: %s\n", 
dev
->
n‹öfo
.
modñ_id
);

658 
	`¥ötf
("NodeName: %s\n", 
dev
->
«me
);

661 
	}
}

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/linux/byteorder/big_endian.h

1 #i‚de‡
_LINUX_BYTEORDER_BIG_ENDIAN_H


2 
	#_LINUX_BYTEORDER_BIG_ENDIAN_H


	)

4 #i‚de‡
__BIG_ENDIAN


5 
	#__BIG_ENDIAN
 4321

	)

7 #i‚de‡
__BIG_ENDIAN_BITFIELD


8 
	#__BIG_ENDIAN_BITFIELD


	)

11 
	~<löux/ty≥s.h
>

12 
	~<löux/swab.h
>

14 
	#__c⁄°™t_ht⁄l
(
x
Ë((
__be32
)(
__u32
)(x))

	)

15 
	#__c⁄°™t_¡ohl
(
x
Ë((
__u32
)(
__be32
)(x))

	)

16 
	#__c⁄°™t_ht⁄s
(
x
Ë((
__be16
)(
__u16
)(x))

	)

17 
	#__c⁄°™t_¡ohs
(
x
Ë((
__u16
)(
__be16
)(x))

	)

18 
	#__c⁄°™t_˝u_to_À64
(
x
Ë((
__À64
)
	`___c⁄°™t_swab64
((x)))

	)

19 
	#__c⁄°™t_À64_to_˝u
(
x
Ë
	`___c⁄°™t_swab64
((
__u64
)(
__À64
)(x))

	)

20 
	#__c⁄°™t_˝u_to_À32
(
x
Ë((
__À32
)
	`___c⁄°™t_swab32
((x)))

	)

21 
	#__c⁄°™t_À32_to_˝u
(
x
Ë
	`___c⁄°™t_swab32
((
__u32
)(
__À32
)(x))

	)

22 
	#__c⁄°™t_˝u_to_À16
(
x
Ë((
__À16
)
	`___c⁄°™t_swab16
((x)))

	)

23 
	#__c⁄°™t_À16_to_˝u
(
x
Ë
	`___c⁄°™t_swab16
((
__u16
)(
__À16
)(x))

	)

24 
	#__c⁄°™t_˝u_to_be64
(
x
Ë((
__be64
)(
__u64
)(x))

	)

25 
	#__c⁄°™t_be64_to_˝u
(
x
Ë((
__u64
)(
__be64
)(x))

	)

26 
	#__c⁄°™t_˝u_to_be32
(
x
Ë((
__be32
)(
__u32
)(x))

	)

27 
	#__c⁄°™t_be32_to_˝u
(
x
Ë((
__u32
)(
__be32
)(x))

	)

28 
	#__c⁄°™t_˝u_to_be16
(
x
Ë((
__be16
)(
__u16
)(x))

	)

29 
	#__c⁄°™t_be16_to_˝u
(
x
Ë((
__u16
)(
__be16
)(x))

	)

30 
	#__˝u_to_À64
(
x
Ë((
__À64
)
	`__swab64
((x)))

	)

31 
	#__À64_to_˝u
(
x
Ë
	`__swab64
((
__u64
)(
__À64
)(x))

	)

32 
	#__˝u_to_À32
(
x
Ë((
__À32
)
	`__swab32
((x)))

	)

33 
	#__À32_to_˝u
(
x
Ë
	`__swab32
((
__u32
)(
__À32
)(x))

	)

34 
	#__˝u_to_À16
(
x
Ë((
__À16
)
	`__swab16
((x)))

	)

35 
	#__À16_to_˝u
(
x
Ë
	`__swab16
((
__u16
)(
__À16
)(x))

	)

36 
	#__˝u_to_be64
(
x
Ë((
__be64
)(
__u64
)(x))

	)

37 
	#__be64_to_˝u
(
x
Ë((
__u64
)(
__be64
)(x))

	)

38 
	#__˝u_to_be32
(
x
Ë((
__be32
)(
__u32
)(x))

	)

39 
	#__be32_to_˝u
(
x
Ë((
__u32
)(
__be32
)(x))

	)

40 
	#__˝u_to_be16
(
x
Ë((
__be16
)(
__u16
)(x))

	)

41 
	#__be16_to_˝u
(
x
Ë((
__u16
)(
__be16
)(x))

	)

43 
__ölöe__
 
__À64
 
	$__˝u_to_À64p
(c⁄° 
__u64
 *
p
)

45  (
__À64
)
	`__swab64p
(
p
);

46 
	}
}

47 
__ölöe__
 
__u64
 
	$__À64_to_˝up
(c⁄° 
__À64
 *
p
)

49  
	`__swab64p
((
__u64
 *)
p
);

50 
	}
}

51 
__ölöe__
 
__À32
 
	$__˝u_to_À32p
(c⁄° 
__u32
 *
p
)

53  (
__À32
)
	`__swab32p
(
p
);

54 
	}
}

55 
__ölöe__
 
__u32
 
	$__À32_to_˝up
(c⁄° 
__À32
 *
p
)

57  
	`__swab32p
((
__u32
 *)
p
);

58 
	}
}

59 
__ölöe__
 
__À16
 
	$__˝u_to_À16p
(c⁄° 
__u16
 *
p
)

61  (
__À16
)
	`__swab16p
(
p
);

62 
	}
}

63 
__ölöe__
 
__u16
 
	$__À16_to_˝up
(c⁄° 
__À16
 *
p
)

65  
	`__swab16p
((
__u16
 *)
p
);

66 
	}
}

67 
__ölöe__
 
__be64
 
	$__˝u_to_be64p
(c⁄° 
__u64
 *
p
)

69  (
__be64
)*
p
;

70 
	}
}

71 
__ölöe__
 
__u64
 
	$__be64_to_˝up
(c⁄° 
__be64
 *
p
)

73  (
__u64
)*
p
;

74 
	}
}

75 
__ölöe__
 
__be32
 
	$__˝u_to_be32p
(c⁄° 
__u32
 *
p
)

77  (
__be32
)*
p
;

78 
	}
}

79 
__ölöe__
 
__u32
 
	$__be32_to_˝up
(c⁄° 
__be32
 *
p
)

81  (
__u32
)*
p
;

82 
	}
}

83 
__ölöe__
 
__be16
 
	$__˝u_to_be16p
(c⁄° 
__u16
 *
p
)

85  (
__be16
)*
p
;

86 
	}
}

87 
__ölöe__
 
__u16
 
	$__be16_to_˝up
(c⁄° 
__be16
 *
p
)

89  (
__u16
)*
p
;

90 
	}
}

91 
	#__˝u_to_À64s
(
x
Ë
	`__swab64s
((x))

	)

92 
	#__À64_to_˝us
(
x
Ë
	`__swab64s
((x))

	)

93 
	#__˝u_to_À32s
(
x
Ë
	`__swab32s
((x))

	)

94 
	#__À32_to_˝us
(
x
Ë
	`__swab32s
((x))

	)

95 
	#__˝u_to_À16s
(
x
Ë
	`__swab16s
((x))

	)

96 
	#__À16_to_˝us
(
x
Ë
	`__swab16s
((x))

	)

97 
	#__˝u_to_be64s
(
x
Ëdÿ{ ()(x); } 0)

	)

98 
	#__be64_to_˝us
(
x
Ëdÿ{ ()(x); } 0)

	)

99 
	#__˝u_to_be32s
(
x
Ëdÿ{ ()(x); } 0)

	)

100 
	#__be32_to_˝us
(
x
Ëdÿ{ ()(x); } 0)

	)

101 
	#__˝u_to_be16s
(
x
Ëdÿ{ ()(x); } 0)

	)

102 
	#__be16_to_˝us
(
x
Ëdÿ{ ()(x); } 0)

	)

	@/usr/include/linux/const.h

3 #i‚de‡
_LINUX_CONST_H


4 
	#_LINUX_CONST_H


	)

15 #ifde‡
__ASSEMBLY__


16 
	#_AC
(
X
,
Y
Ë
	)
X

17 
	#_AT
(
T
,
X
Ë
	)
X

19 
	#__AC
(
X
,
Y
Ë(X##Y)

	)

20 
	#_AC
(
X
,
Y
Ë
	`__AC
(X,Y)

	)

21 
	#_AT
(
T
,
X
Ë((T)(X))

	)

24 
	#_BITUL
(
x
Ë(
	`_AC
(1,
UL
Ë<< (x))

	)

25 
	#_BITULL
(
x
Ë(
	`_AC
(1,
ULL
Ë<< (x))

	)

	@/usr/include/linux/stddef.h

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/mcheck.h

18 #i‚de‡
_MCHECK_H


19 
	#_MCHECK_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


27 
	emcheck_°©us


29 
	mMCHECK_DISABLED
 = -1,

30 
	mMCHECK_OK
,

31 
	mMCHECK_FREE
,

32 
	mMCHECK_HEAD
,

33 
	mMCHECK_TAIL


41 
mcheck
 ((*
__ab‹tfunc
)(
mcheck_°©us
)Ë
__THROW
;

45 
	`mcheck_≥d™tic
 ((*
__ab‹tfunc
)(
mcheck_°©us
)Ë
__THROW
;

48 
	`mcheck_check_Æl
 ();

53 
mcheck_°©us
 
	$m¥obe
 (*
__±r
Ë
__THROW
;

56 
	$måa˚
 (Ë
__THROW
;

57 
	$mu¡ø˚
 (Ë
__THROW
;

59 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

24 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


26 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

36 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

39 
	g__BEGIN_DECLS


41 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


43 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

44 
__THROW
 
__©åibuã_puª__
;

47 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

50 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 const *

69 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (c⁄° *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 const *

97 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


112 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
;

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
;

123 #ifdef 
__USE_XOPEN2K8


127 
	~<xloˇÀ.h
>

131 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

132 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

134 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

135 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

136 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

139 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/linux/swab.h

1 #i‚de‡
_LINUX_SWAB_H


2 
	#_LINUX_SWAB_H


	)

4 
	~<löux/ty≥s.h
>

6 
	~<asm/swab.h
>

12 
	#___c⁄°™t_swab16
(
x
Ë((
__u16
)( \

13 (((
__u16
)(
x
) & (__u16)0x00ffU) << 8) | \

14 (((
__u16
)(
x
Ë& (__u16)0xff00UË>> 8)))

	)

16 
	#___c⁄°™t_swab32
(
x
Ë((
__u32
)( \

17 (((
__u32
)(
x
) & (__u32)0x000000ffUL) << 24) | \

18 (((
__u32
)(
x
) & (__u32)0x0000ff00UL) << 8) | \

19 (((
__u32
)(
x
) & (__u32)0x00ff0000UL) >> 8) | \

20 (((
__u32
)(
x
Ë& (__u32)0xff000000ULË>> 24)))

	)

22 
	#___c⁄°™t_swab64
(
x
Ë((
__u64
)( \

23 (((
__u64
)(
x
) & (__u64)0x00000000000000ffULL) << 56) | \

24 (((
__u64
)(
x
) & (__u64)0x000000000000ff00ULL) << 40) | \

25 (((
__u64
)(
x
) & (__u64)0x0000000000ff0000ULL) << 24) | \

26 (((
__u64
)(
x
) & (__u64)0x00000000ff000000ULL) << 8) | \

27 (((
__u64
)(
x
) & (__u64)0x000000ff00000000ULL) >> 8) | \

28 (((
__u64
)(
x
) & (__u64)0x0000ff0000000000ULL) >> 24) | \

29 (((
__u64
)(
x
) & (__u64)0x00ff000000000000ULL) >> 40) | \

30 (((
__u64
)(
x
Ë& (__u64)0xff00000000000000ULLË>> 56)))

	)

32 
	#___c⁄°™t_swahw32
(
x
Ë((
__u32
)( \

33 (((
__u32
)(
x
) & (__u32)0x0000ffffUL) << 16) | \

34 (((
__u32
)(
x
Ë& (__u32)0xffff0000ULË>> 16)))

	)

36 
	#___c⁄°™t_swahb32
(
x
Ë((
__u32
)( \

37 (((
__u32
)(
x
) & (__u32)0x00ff00ffUL) << 8) | \

38 (((
__u32
)(
x
Ë& (__u32)0xff00ff00ULË>> 8)))

	)

46 
__ölöe__
 
__u16
 
	$__fswab16
(
__u16
 
vÆ
)

48 #ifde‡
__HAVE_BUILTIN_BSWAP16__


49  
	`__buûtö_bsw≠16
(
vÆ
);

50 #ñi‡
	`deföed
 (
__¨ch_swab16
)

51  
	`__¨ch_swab16
(
vÆ
);

53  
	`___c⁄°™t_swab16
(
vÆ
);

55 
	}
}

57 
__ölöe__
 
__u32
 
	$__fswab32
(
__u32
 
vÆ
)

59 #ifde‡
__HAVE_BUILTIN_BSWAP32__


60  
	`__buûtö_bsw≠32
(
vÆ
);

61 #ñi‡
	`deföed
(
__¨ch_swab32
)

62  
	`__¨ch_swab32
(
vÆ
);

64  
	`___c⁄°™t_swab32
(
vÆ
);

66 
	}
}

68 
__ölöe__
 
__u64
 
	$__fswab64
(
__u64
 
vÆ
)

70 #ifde‡
__HAVE_BUILTIN_BSWAP64__


71  
	`__buûtö_bsw≠64
(
vÆ
);

72 #ñi‡
	`deföed
 (
__¨ch_swab64
)

73  
	`__¨ch_swab64
(
vÆ
);

74 #ñi‡
	`deföed
(
__SWAB_64_THRU_32__
)

75 
__u32
 
h
 = 
vÆ
 >> 32;

76 
__u32
 
l
 = 
vÆ
 & ((1ULL << 32) - 1);

77  (((
__u64
)
	`__fswab32
(
l
)Ë<< 32Ë| ((__u64)(__fswab32(
h
)));

79  
	`___c⁄°™t_swab64
(
vÆ
);

81 
	}
}

83 
__ölöe__
 
__u32
 
	$__fswahw32
(
__u32
 
vÆ
)

85 #ifde‡
__¨ch_swahw32


86  
	`__¨ch_swahw32
(
vÆ
);

88  
	`___c⁄°™t_swahw32
(
vÆ
);

90 
	}
}

92 
__ölöe__
 
__u32
 
	$__fswahb32
(
__u32
 
vÆ
)

94 #ifde‡
__¨ch_swahb32


95  
	`__¨ch_swahb32
(
vÆ
);

97  
	`___c⁄°™t_swahb32
(
vÆ
);

99 
	}
}

105 
	#__swab16
(
x
) \

106 (
	`__buûtö_c⁄°™t_p
((
__u16
)(
x
)) ? \

107 
	`___c⁄°™t_swab16
(
x
) : \

108 
	`__fswab16
(
x
))

	)

114 
	#__swab32
(
x
) \

115 (
	`__buûtö_c⁄°™t_p
((
__u32
)(
x
)) ? \

116 
	`___c⁄°™t_swab32
(
x
) : \

117 
	`__fswab32
(
x
))

	)

123 
	#__swab64
(
x
) \

124 (
	`__buûtö_c⁄°™t_p
((
__u64
)(
x
)) ? \

125 
	`___c⁄°™t_swab64
(
x
) : \

126 
	`__fswab64
(
x
))

	)

134 
	#__swahw32
(
x
) \

135 (
	`__buûtö_c⁄°™t_p
((
__u32
)(
x
)) ? \

136 
	`___c⁄°™t_swahw32
(
x
) : \

137 
	`__fswahw32
(
x
))

	)

145 
	#__swahb32
(
x
) \

146 (
	`__buûtö_c⁄°™t_p
((
__u32
)(
x
)) ? \

147 
	`___c⁄°™t_swahb32
(
x
) : \

148 
	`__fswahb32
(
x
))

	)

154 
__ölöe__
 
__u16
 
	$__swab16p
(c⁄° 
__u16
 *
p
)

156 #ifde‡
__¨ch_swab16p


157  
	`__¨ch_swab16p
(
p
);

159  
	`__swab16
(*
p
);

161 
	}
}

167 
__ölöe__
 
__u32
 
	$__swab32p
(c⁄° 
__u32
 *
p
)

169 #ifde‡
__¨ch_swab32p


170  
	`__¨ch_swab32p
(
p
);

172  
	`__swab32
(*
p
);

174 
	}
}

180 
__ölöe__
 
__u64
 
	$__swab64p
(c⁄° 
__u64
 *
p
)

182 #ifde‡
__¨ch_swab64p


183  
	`__¨ch_swab64p
(
p
);

185  
	`__swab64
(*
p
);

187 
	}
}

195 
__ölöe__
 
__u32
 
	$__swahw32p
(c⁄° 
__u32
 *
p
)

197 #ifde‡
__¨ch_swahw32p


198  
	`__¨ch_swahw32p
(
p
);

200  
	`__swahw32
(*
p
);

202 
	}
}

210 
__ölöe__
 
__u32
 
	$__swahb32p
(c⁄° 
__u32
 *
p
)

212 #ifde‡
__¨ch_swahb32p


213  
	`__¨ch_swahb32p
(
p
);

215  
	`__swahb32
(*
p
);

217 
	}
}

223 
__ölöe__
 
	$__swab16s
(
__u16
 *
p
)

225 #ifde‡
__¨ch_swab16s


226 
	`__¨ch_swab16s
(
p
);

228 *
p
 = 
	`__swab16p
(p);

230 
	}
}

235 
__ölöe__
 
	$__swab32s
(
__u32
 *
p
)

237 #ifde‡
__¨ch_swab32s


238 
	`__¨ch_swab32s
(
p
);

240 *
p
 = 
	`__swab32p
(p);

242 
	}
}

248 
__ölöe__
 
	$__swab64s
(
__u64
 *
p
)

250 #ifde‡
__¨ch_swab64s


251 
	`__¨ch_swab64s
(
p
);

253 *
p
 = 
	`__swab64p
(p);

255 
	}
}

263 
__ölöe__
 
	$__swahw32s
(
__u32
 *
p
)

265 #ifde‡
__¨ch_swahw32s


266 
	`__¨ch_swahw32s
(
p
);

268 *
p
 = 
	`__swahw32p
(p);

270 
	}
}

278 
__ölöe__
 
	$__swahb32s
(
__u32
 *
p
)

280 #ifde‡
__¨ch_swahb32s


281 
	`__¨ch_swahb32s
(
p
);

283 *
p
 = 
	`__swahb32p
(p);

285 
	}
}

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
55
911
api.c
bbt.c
both.h
bufwrite.c
dev-type.c
dev-type.h
dio.c
ecc.c
graphics.c
graphics.h
help.c
ifmode.c
init.c
list.h
lost/reqlist.c
lost/super.c
lost/super2.c
main.c
microcode.c
mpt.c
nor.c
parse.c
req.c
shannon-mbr.h
super.c
tool.h
utils.c
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/linux/byteorder/big_endian.h
/usr/include/linux/const.h
/usr/include/linux/stddef.h
/usr/include/linux/types.h
/usr/include/mcheck.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/linux/posix_types.h
/usr/include/linux/swab.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
